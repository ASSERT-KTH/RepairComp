--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/SolGPT/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f_3round.sol
@@ -1,32 +1,23 @@
-/*

- * @source: etherscan.io

- * @author: -

- * @vulnerable_at_lines: 54

- */

-

 pragma solidity ^0.4.19;

 

 contract PERSONAL_BANK {

     mapping(address => uint256) public balances;

-

     uint public MinSum = 1 ether;

-

     LogFile Log = LogFile(0x0486cF65A2F2F3A392CBEa398AFB7F5f0B72FF46);

-

-    bool intitalized;

+    bool initialized;

 

     function SetMinSum(uint _val) public {

-        if (intitalized) revert();

+        require(!initialized);

         MinSum = _val;

     }

 

     function SetLogFile(address _log) public {

-        if (intitalized) revert();

+        require(!initialized);

         Log = LogFile(_log);

     }

 

     function Initialized() public {

-        intitalized = true;

+        initialized = true;

     }

 

     function Deposit() public payable {

@@ -34,14 +25,13 @@
         Log.AddMessage(msg.sender, msg.value, "Put");

     }

 

-    function Collect(uint _am) public payable {

-        if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {

-            // <yes> <report> REENTRANCY

-            if (msg.sender.call.value(_am)()) {

-                balances[msg.sender] -= _am;

-                Log.AddMessage(msg.sender, _am, "Collect");

-            }

-        }

+    function Collect(uint _am) public {

+        require(balances[msg.sender] >= MinSum && balances[msg.sender] >= _am);

+

+        balances[msg.sender] -= _am;

+        Log.AddMessage(msg.sender, _am, "Collect");

+

+        require(msg.sender.call.value(_am)());

     }

 

     function() public payable {

@@ -59,13 +49,12 @@
 

     Message[] public History;

 

-    Message LastMsg;

-

     function AddMessage(address _adr, uint _val, string _data) public {

-        LastMsg.Sender = _adr;

-        LastMsg.Time = now;

-        LastMsg.Val = _val;

-        LastMsg.Data = _data;

-        History.push(LastMsg);

+        Message memory newMessage;

+        newMessage.Sender = _adr;

+        newMessage.Time = now;

+        newMessage.Val = _val;

+        newMessage.Data = _data;

+        History.push(newMessage);

     }

 }
