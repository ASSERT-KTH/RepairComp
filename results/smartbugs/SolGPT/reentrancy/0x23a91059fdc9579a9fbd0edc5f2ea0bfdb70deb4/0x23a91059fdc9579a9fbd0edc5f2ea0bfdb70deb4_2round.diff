--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/SolGPT/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4_2round.sol
@@ -1,9 +1,3 @@
-/*

- * @source: etherscan.io

- * @author: -

- * @vulnerable_at_lines: 38

- */

-

 pragma solidity ^0.4.19;

 

 contract PrivateBank {

@@ -18,20 +12,20 @@
     }

 

     function Deposit() public payable {

-        if (msg.value >= MinDeposit) {

-            balances[msg.sender] += msg.value;

-            TransferLog.AddMessage(msg.sender, msg.value, "Deposit");

-        }

+        require(msg.value >= MinDeposit);

+

+        balances[msg.sender] += msg.value;

+        TransferLog.AddMessage(msg.sender, msg.value, "Deposit");

     }

 

     function CashOut(uint _am) {

-        if (_am <= balances[msg.sender]) {

-            // <yes> <report> REENTRANCY

-            if (msg.sender.call.value(_am)()) {

-                balances[msg.sender] -= _am;

-                TransferLog.AddMessage(msg.sender, _am, "CashOut");

-            }

-        }

+        require(_am <= balances[msg.sender]);

+

+        uint amountToWithdraw = _am;

+        balances[msg.sender] -= amountToWithdraw;

+        TransferLog.AddMessage(msg.sender, amountToWithdraw, "CashOut");

+

+        msg.sender.transfer(amountToWithdraw);

     }

 

     function() public payable {}

@@ -47,13 +41,12 @@
 

     Message[] public History;

 

-    Message LastMsg;

-

     function AddMessage(address _adr, uint _val, string _data) public {

-        LastMsg.Sender = _adr;

-        LastMsg.Time = now;

-        LastMsg.Val = _val;

-        LastMsg.Data = _data;

-        History.push(LastMsg);

+        Message memory newMessage;

+        newMessage.Sender = _adr;

+        newMessage.Time = now;

+        newMessage.Val = _val;

+        newMessage.Data = _data;

+        History.push(newMessage);

     }

 }
