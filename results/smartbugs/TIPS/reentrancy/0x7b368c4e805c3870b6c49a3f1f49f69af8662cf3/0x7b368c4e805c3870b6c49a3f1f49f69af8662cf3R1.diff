--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/TIPS/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3R1.sol
@@ -1,11 +1,3 @@
-/*

- * @source: etherscan.io

- * @author: -

- * @vulnerable_at_lines: 29

- */

-

-pragma solidity ^0.4.25;

-

 contract W_WALLET {

     function Put(uint _unlockTime) public payable {

         var acc = Acc[msg.sender];

@@ -13,40 +5,33 @@
         acc.unlockTime = _unlockTime > now ? _unlockTime : now;

         LogFile.AddMessage(msg.sender, msg.value, "Put");

     }

-

     function Collect(uint _am) public payable {

         var acc = Acc[msg.sender];

         if (

             acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime

         ) {

-            // <yes> <report> REENTRANCY

-            if (msg.sender.call.value(_am)()) {

+            if (msg.sender.send(_am)) {

                 acc.balance -= _am;

                 LogFile.AddMessage(msg.sender, _am, "Collect");

+            } else {

+                throw;

             }

         }

     }

-

     function() public payable {

         Put(0);

     }

-

     struct Holder {

         uint unlockTime;

         uint balance;

     }

-

     mapping(address => Holder) public Acc;

-

     Log LogFile;

-

     uint public MinSum = 1 ether;

-

-    function W_WALLET(address log) public {

+    constructor(address log) public {

         LogFile = Log(log);

     }

 }

-

 contract Log {

     struct Message {

         address Sender;

@@ -54,11 +39,8 @@
         uint Val;

         uint Time;

     }

-

     Message[] public History;

-

     Message LastMsg;

-

     function AddMessage(address _adr, uint _val, string _data) public {

         LastMsg.Sender = _adr;

         LastMsg.Time = now;
