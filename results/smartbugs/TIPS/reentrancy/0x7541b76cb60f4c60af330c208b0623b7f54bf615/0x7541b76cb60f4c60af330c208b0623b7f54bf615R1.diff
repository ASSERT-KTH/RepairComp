--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/TIPS/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615/0x7541b76cb60f4c60af330c208b0623b7f54bf615R1.sol
@@ -1,3 +1,11 @@
+/*

+ * @source: etherscan.io

+ * @author: -

+ * @vulnerable_at_lines: 29

+ */

+

+pragma solidity ^0.4.25;

+

 contract U_BANK {

     function Put(uint _unlockTime) public payable {

         var acc = Acc[msg.sender];

@@ -5,33 +13,40 @@
         acc.unlockTime = _unlockTime > now ? _unlockTime : now;

         LogFile.AddMessage(msg.sender, msg.value, "Put");

     }

+

     function Collect(uint _am) public payable {

         var acc = Acc[msg.sender];

         if (

             acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime

         ) {

-            if (msg.sender.send(_am)) {

+            // <yes> <report> REENTRANCY

+            if (msg.sender.call.value(_am)()) {

                 acc.balance -= _am;

                 LogFile.AddMessage(msg.sender, _am, "Collect");

-            } else {

-                throw;

             }

         }

     }

+

     function() public payable {

         Put(0);

     }

+

     struct Holder {

         uint unlockTime;

         uint balance;

     }

+

     mapping(address => Holder) public Acc;

+

     Log LogFile;

+

     uint public MinSum = 2 ether;

-    constructor(address log) public {

+

+    function U_BANK(address log) public {

         LogFile = Log(log);

     }

 }

+

 contract Log {

     struct Message {

         address Sender;

@@ -39,8 +54,11 @@
         uint Val;

         uint Time;

     }

+

     Message[] public History;

+

     Message LastMsg;

+

     function AddMessage(address _adr, uint _val, string _data) public {

         LastMsg.Sender = _adr;

         LastMsg.Time = now;
