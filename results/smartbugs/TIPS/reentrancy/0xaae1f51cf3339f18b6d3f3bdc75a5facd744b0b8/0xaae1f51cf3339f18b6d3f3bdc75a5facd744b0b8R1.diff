--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/TIPS/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8R1.sol
@@ -1,54 +1,41 @@
-/*

- * @source: etherscan.io

- * @author: -

- * @vulnerable_at_lines: 54

- */

-

-pragma solidity ^0.4.19;

-

 contract DEP_BANK {

     mapping(address => uint256) public balances;

-

     uint public MinSum;

-

     LogFile Log;

-

     bool intitalized;

-

     function SetMinSum(uint _val) public {

-        if (intitalized) throw;

+        if (intitalized) {

+            throw;

+        }

         MinSum = _val;

     }

-

     function SetLogFile(address _log) public {

-        if (intitalized) throw;

+        if (intitalized) {

+            throw;

+        }

         Log = LogFile(_log);

     }

-

     function Initialized() public {

         intitalized = true;

     }

-

     function Deposit() public payable {

         balances[msg.sender] += msg.value;

         Log.AddMessage(msg.sender, msg.value, "Put");

     }

-

     function Collect(uint _am) public payable {

         if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {

-            // <yes> <report> REENTRANCY

-            if (msg.sender.call.value(_am)()) {

+            if (msg.sender.send(_am)) {

                 balances[msg.sender] -= _am;

                 Log.AddMessage(msg.sender, _am, "Collect");

+            } else {

+                throw;

             }

         }

     }

-

     function() public payable {

         Deposit();

     }

 }

-

 contract LogFile {

     struct Message {

         address Sender;

@@ -56,11 +43,8 @@
         uint Val;

         uint Time;

     }

-

     Message[] public History;

-

     Message LastMsg;

-

     function AddMessage(address _adr, uint _val, string _data) public {

         LastMsg.Sender = _adr;

         LastMsg.Time = now;
