{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "contract",
            "name": "Lottery",
            "source_mapping": {
              "start": 302,
              "length": 1479,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "bets.push(Bet(msg.value,block.number,won))",
            "source_mapping": {
              "start": 1113,
              "length": 44,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "makeBet",
                "source_mapping": {
                  "start": 773,
                  "length": 615,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Lottery",
                    "source_mapping": {
                      "start": 302,
                      "length": 1479,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "makeBet()"
                }
              }
            }
          }
        ],
        "description": "Lottery () contract sets array length with a user-controlled value:\n\t- bets.push(Bet(msg.value,block.number,won)) ()\n",
        "markdown": "[Lottery]() contract sets array length with a user-controlled value:\n\t- [bets.push(Bet(msg.value,block.number,won))]()\n",
        "first_markdown_element": "",
        "id": "0886ba4cf33930c4b609f0f98e7662d98f9b744dba2213939341d50a4adc1c45",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "makeBet",
            "source_mapping": {
              "start": 773,
              "length": 615,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Lottery",
                "source_mapping": {
                  "start": 302,
                  "length": 1479,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "makeBet()"
            }
          },
          {
            "type": "node",
            "name": "won = (block.number % 2) == 0",
            "source_mapping": {
              "start": 984,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "makeBet",
                "source_mapping": {
                  "start": 773,
                  "length": 615,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Lottery",
                    "source_mapping": {
                      "start": 302,
                      "length": 1479,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "makeBet()"
                }
              }
            }
          }
        ],
        "description": "Lottery.makeBet() () uses a dangerous strict equality:\n\t- won = (block.number % 2) == 0 ()\n",
        "markdown": "[Lottery.makeBet()]() uses a dangerous strict equality:\n\t- [won = (block.number % 2) == 0]()\n",
        "first_markdown_element": "",
        "id": "87cf6361d7d708537311c09a730a6e9fa454645df0d65102091e54a4f7fade42",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "suicide(address)(organizer)",
            "source_mapping": {
              "start": 1752,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "destroy",
                "source_mapping": {
                  "start": 1673,
                  "length": 105,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Lottery",
                    "source_mapping": {
                      "start": 302,
                      "length": 1479,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "destroy()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected suicide(address)(organizer) ():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "markdown": "Deprecated standard detected [suicide(address)(organizer)]():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "first_markdown_element": "",
        "id": "6fede4d16e03ba5881fcf34269a1441bdd5c3994ea965021bc87f2cc7ce67458",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 734,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 712,
                  "length": 35,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Lottery",
                    "source_mapping": {
                      "start": 302,
                      "length": 1479,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 274,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "i < bets.length",
            "source_mapping": {
              "start": 1532,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getBets",
                "source_mapping": {
                  "start": 1436,
                  "length": 211,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Lottery",
                    "source_mapping": {
                      "start": 302,
                      "length": 1479,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getBets()"
                }
              }
            }
          }
        ],
        "description": "Loop condition i < bets.length () should use cached array length instead of referencing `length` member of the storage array.\n ",
        "markdown": "Loop condition [i < bets.length]() should use cached array length instead of referencing `length` member of the storage array.\n ",
        "first_markdown_element": "",
        "id": "69747fb663db0857cca69ef94ca96240373d9a399a58bf7a0d23bb7112cad278",
        "check": "cache-array-length",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}