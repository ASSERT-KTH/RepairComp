Installing solc '0.4.25'...
Version '0.4.25' installed.
Switched global version to 0.4.25
generating... report/access_control/arbitrary_location_write_simple.sol.json
'solc --version' running
'solc dataset/access_control/arbitrary_location_write_simple.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running

Wallet (dataset/access_control/arbitrary_location_write_simple.sol#9-40) contract sets array length with a user-controlled value:
	- bonusCodes.push(c) (dataset/access_control/arbitrary_location_write_simple.sol#22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Wallet.PopBonusCode() (dataset/access_control/arbitrary_location_write_simple.sol#25-29) contains a tautology or contradiction:
	- require(bool)(0 <= bonusCodes.length) (dataset/access_control/arbitrary_location_write_simple.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction

Pragma version^0.4.25 (dataset/access_control/arbitrary_location_write_simple.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function Wallet.PushBonusCode(uint256) (dataset/access_control/arbitrary_location_write_simple.sol#21-23) is not in mixedCase
Function Wallet.PopBonusCode() (dataset/access_control/arbitrary_location_write_simple.sol#25-29) is not in mixedCase
Function Wallet.UpdateBonusCodeAt(uint256,uint256) (dataset/access_control/arbitrary_location_write_simple.sol#31-34) is not in mixedCase
Function Wallet.Destroy() (dataset/access_control/arbitrary_location_write_simple.sol#36-39) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/access_control/arbitrary_location_write_simple.sol analyzed (1 contracts with 93 detectors), 8 result(s) found
Installing solc '0.4.22'...
Version '0.4.22' installed.
Switched global version to 0.4.22
generating... report/access_control/FibonacciBalance.sol.json
'solc --version' running
'solc dataset/access_control/FibonacciBalance.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/FibonacciBalance.sol:
dataset/access_control/FibonacciBalance.sol:19:37: Warning: "sha3" has been deprecated in favour of "keccak256"
    bytes4 constant fibSig = bytes4(sha3("setFibonacci(uint256)"));
                                    ^---------------------------^
dataset/access_control/FibonacciBalance.sol:26:5: Warning: No visibility specified. Defaulting to "public". 
    function withdraw() {
    ^ (Relevant source part starts here and spans across multiple lines).


FibonacciBalance.withdraw() (dataset/access_control/FibonacciBalance.sol#26-33) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(calculatedFibNumber * 1000000000000000000) (dataset/access_control/FibonacciBalance.sol#32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

FibonacciBalance.withdraw() (dataset/access_control/FibonacciBalance.sol#26-33) uses delegatecall to a input-controlled function id
	- require(bool)(fibonacciLibrary.delegatecall(fibSig,withdrawalCounter)) (dataset/access_control/FibonacciBalance.sol#31)
FibonacciBalance.fallback() (dataset/access_control/FibonacciBalance.sol#36-39) uses delegatecall to a input-controlled function id
	- require(bool)(fibonacciLibrary.delegatecall(msg.data)) (dataset/access_control/FibonacciBalance.sol#38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#controlled-delegatecall

FibonacciBalance.calculatedFibNumber (dataset/access_control/FibonacciBalance.sol#14) is never initialized. It is used in:
	- FibonacciBalance.withdraw() (dataset/access_control/FibonacciBalance.sol#26-33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

FibonacciBalance.constructor(address)._fibonacciLibrary (dataset/access_control/FibonacciBalance.sol#22) lacks a zero-check on :
		- fibonacciLibrary = _fibonacciLibrary (dataset/access_control/FibonacciBalance.sol#23)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Deprecated standard detected FibonacciBalance.fibSig (dataset/access_control/FibonacciBalance.sol#19):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected fibSig = bytes4(sha3()(setFibonacci(uint256))) (dataset/access_control/FibonacciBalance.sol#19):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.22 (dataset/access_control/FibonacciBalance.sol#8) is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
solc-0.4.22 is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in FibonacciBalance.withdraw() (dataset/access_control/FibonacciBalance.sol#26-33):
	- require(bool)(fibonacciLibrary.delegatecall(fibSig,withdrawalCounter)) (dataset/access_control/FibonacciBalance.sol#31)
Low level call in FibonacciBalance.fallback() (dataset/access_control/FibonacciBalance.sol#36-39):
	- require(bool)(fibonacciLibrary.delegatecall(msg.data)) (dataset/access_control/FibonacciBalance.sol#38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Constant FibonacciBalance.fibSig (dataset/access_control/FibonacciBalance.sol#19) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter FibonacciLib.setStart(uint256)._start (dataset/access_control/FibonacciBalance.sol#49) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

FibonacciBalance.calculatedFibNumber (dataset/access_control/FibonacciBalance.sol#14) should be constant 
FibonacciBalance.start (dataset/access_control/FibonacciBalance.sol#16) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/access_control/FibonacciBalance.sol analyzed (2 contracts with 93 detectors), 15 result(s) found
Installing solc '0.4.24'...
Version '0.4.24' installed.
Switched global version to 0.4.24
generating... report/access_control/incorrect_constructor_name1.sol.json
'solc --version' running
'solc dataset/access_control/incorrect_constructor_name1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/incorrect_constructor_name1.sol:
dataset/access_control/incorrect_constructor_name1.sol:32:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
       owner.transfer(this.balance);
                      ^----------^
dataset/access_control/incorrect_constructor_name1.sol:26:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {}
    ^--------------------^


Pragma version^0.4.24 (dataset/access_control/incorrect_constructor_name1.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function Missing.IamMissing() (dataset/access_control/incorrect_constructor_name1.sol#20-24) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/access_control/incorrect_constructor_name1.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.24
generating... report/access_control/incorrect_constructor_name2.sol.json
'solc --version' running
'solc dataset/access_control/incorrect_constructor_name2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/incorrect_constructor_name2.sol:
dataset/access_control/incorrect_constructor_name2.sol:30:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
       owner.transfer(this.balance);
                      ^----------^
dataset/access_control/incorrect_constructor_name2.sol:24:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {}
    ^--------------------^


Pragma version^0.4.24 (dataset/access_control/incorrect_constructor_name2.sol#8) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/access_control/incorrect_constructor_name2.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.24
generating... report/access_control/incorrect_constructor_name3.sol.json
'solc --version' running
'solc dataset/access_control/incorrect_constructor_name3.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/incorrect_constructor_name3.sol:
dataset/access_control/incorrect_constructor_name3.sol:29:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
       owner.transfer(this.balance);
                      ^----------^
dataset/access_control/incorrect_constructor_name3.sol:23:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {}
    ^--------------------^


Pragma version^0.4.24 (dataset/access_control/incorrect_constructor_name3.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function Missing.Constructor() (dataset/access_control/incorrect_constructor_name3.sol#17-21) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/access_control/incorrect_constructor_name3.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.24
generating... report/access_control/mapping_write.sol.json
'solc --version' running
'solc dataset/access_control/mapping_write.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running

Map (dataset/access_control/mapping_write.sol#11-30) contract sets array length with a user-controlled value:
	- map.length = key + 1 (dataset/access_control/mapping_write.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Map.owner (dataset/access_control/mapping_write.sol#12) is never initialized. It is used in:
	- Map.withdraw() (dataset/access_control/mapping_write.sol#26-29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

Pragma version^0.4.24 (dataset/access_control/mapping_write.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Map.owner (dataset/access_control/mapping_write.sol#12) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/access_control/mapping_write.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Installing solc '0.4.23'...
Version '0.4.23' installed.
Switched global version to 0.4.23
generating... report/access_control/multiowned_vulnerable.sol.json
'solc --version' running
'solc dataset/access_control/multiowned_vulnerable.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/multiowned_vulnerable.sol:
dataset/access_control/multiowned_vulnerable.sol:57:25: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    msg.sender.transfer(this.balance);
                        ^----------^
dataset/access_control/multiowned_vulnerable.sol:56:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawAll() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
dataset/access_control/multiowned_vulnerable.sol:60:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).


Pragma version^0.4.23 (dataset/access_control/multiowned_vulnerable.sol#7) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter MultiOwnable.newOwner(address)._owner (dataset/access_control/multiowned_vulnerable.sol#38) is not in mixedCase
Parameter MultiOwnable.deleteOwner(address)._owner (dataset/access_control/multiowned_vulnerable.sol#47) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/access_control/multiowned_vulnerable.sol analyzed (2 contracts with 93 detectors), 4 result(s) found
Switched global version to 0.4.24
generating... report/access_control/mycontract.sol.json
'solc --version' running
'solc dataset/access_control/mycontract.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/mycontract.sol:
dataset/access_control/mycontract.sol:14:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MyContract() public {
    ^ (Relevant source part starts here and spans across multiple lines).


MyContract.sendTo(address,uint256) (dataset/access_control/mycontract.sol#18-22) sends eth to arbitrary user
	Dangerous calls:
	- receiver.transfer(amount) (dataset/access_control/mycontract.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

MyContract.sendTo(address,uint256) (dataset/access_control/mycontract.sol#18-22) uses tx.origin for authorization: require(bool)(tx.origin == owner) (dataset/access_control/mycontract.sol#20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin

MyContract.sendTo(address,uint256).receiver (dataset/access_control/mycontract.sol#18) lacks a zero-check on :
		- receiver.transfer(amount) (dataset/access_control/mycontract.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.24 (dataset/access_control/mycontract.sol#8) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/access_control/mycontract.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Installing solc '0.4.9'...
Version '0.4.9' installed.
Switched global version to 0.4.9
generating... report/access_control/parity_wallet_bug_1.sol.json
'solc --version' running
'solc dataset/access_control/parity_wallet_bug_1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/access_control/parity_wallet_bug_1.sol:
dataset/access_control/parity_wallet_bug_1.sol:377:37: Warning: This looks like an address but has an invalid checksum.
  address constant _walletLibrary = 0xcafecafecafecafecafecafecafecafecafecafe;
                                    ^----------------------------------------^
dataset/access_control/parity_wallet_bug_1.sol:417:14: Warning: Inline assembly block is not balanced. It leaves 1 item(s) on the stack.
    assembly {
             ^
Spanning multiple lines.
dataset/access_control/parity_wallet_bug_1.sol:437:7: Warning: Return value of low-level calls not used.
      _walletLibrary.delegatecall(msg.data); //it should have whitelisted specific methods that the user is allowed to call
      ^-----------------------------------^
dataset/access_control/parity_wallet_bug_1.sol:456:37: Warning: This looks like an address but has an invalid checksum.
  address constant _walletLibrary = 0xcafecafecafecafecafecafecafecafecafecafe;
                                    ^----------------------------------------^


Reentrancy in WalletLibrary.confirm(bytes32) ():
	External calls:
	- ! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) ()
	State variables written after the call(s):
	- delete m_txs[_h] ()
	WalletLibrary.m_txs () can be used in cross function reentrancies:
	- WalletLibrary.clearPending() ()
	- WalletLibrary.confirm(bytes32) ()
	- WalletLibrary.execute(address,uint256,bytes) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

WalletLibrary.kill(address) () allows anyone to destruct the contract
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#suicidal

Wallet.m_owners () is never initialized. It is used in:
	- Wallet.getOwner(uint256) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

Wallet.fallback() () ignores return value by _walletLibrary.delegatecall(msg.data) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

WalletLibrary.execute(address,uint256,bytes).created () is a local variable never initialized
WalletLibrary.confirm(bytes32).created () is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Modifier WalletLibrary.onlyowner() () does not always execute _; or revertModifier WalletLibrary.onlymanyowners(bytes32) () does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Reentrancy in WalletLibrary.confirm(bytes32) ():
	External calls:
	- ! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) ()
	Event emitted after the call(s):
	- MultiTransact(msg.sender,_h,m_txs[_h].value,m_txs[_h].to,m_txs[_h].data,created) ()
Reentrancy in WalletLibrary.execute(address,uint256,bytes) ():
	External calls:
	- ! _to.call.value(_value)(_data) ()
	Event emitted after the call(s):
	- SingleTransact(msg.sender,_value,_to,_data,created) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

WalletLibrary.underLimit(uint256) () uses timestamp for comparisons
	Dangerous comparisons:
	- today() > m_lastDay ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

WalletLibrary.create(uint256,bytes) () uses assembly
	- INLINE ASM ()
Wallet.Wallet(address[],uint256,uint256) () uses assembly
	- INLINE ASM ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Deprecated standard detected onlymanyowners(sha3()(msg.data)) ():
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected suicide(address)(_to) ():
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected o_hash = sha3()(msg.data,block.number) ():
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected sig = bytes4(sha3()(initWallet(address[],uint256,uint256))) ():
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version0.4.9 () allows old versions
solc-0.4.9 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in WalletLibrary.execute(address,uint256,bytes) ():
	- ! _to.call.value(_value)(_data) ()
Low level call in WalletLibrary.confirm(bytes32) ():
	- ! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) ()
Low level call in Wallet.fallback() ():
	- _walletLibrary.delegatecall(msg.data) ()
Low level call in Wallet.hasConfirmed(bytes32,address) ():
	- _walletLibrary.delegatecall(msg.data) ()
Low level call in Wallet.isOwner(address) ():
	- _walletLibrary.delegatecall(msg.data) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

WalletLibrary () should inherit from WalletAbi ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance

Parameter WalletLibrary.initMultiowned(address[],uint256)._owners () is not in mixedCase
Parameter WalletLibrary.initMultiowned(address[],uint256)._required () is not in mixedCase
Parameter WalletLibrary.revoke(bytes32)._operation () is not in mixedCase
Parameter WalletLibrary.changeOwner(address,address)._from () is not in mixedCase
Parameter WalletLibrary.changeOwner(address,address)._to () is not in mixedCase
Parameter WalletLibrary.addOwner(address)._owner () is not in mixedCase
Parameter WalletLibrary.removeOwner(address)._owner () is not in mixedCase
Parameter WalletLibrary.changeRequirement(uint256)._newRequired () is not in mixedCase
Parameter WalletLibrary.isOwner(address)._addr () is not in mixedCase
Parameter WalletLibrary.hasConfirmed(bytes32,address)._operation () is not in mixedCase
Parameter WalletLibrary.hasConfirmed(bytes32,address)._owner () is not in mixedCase
Parameter WalletLibrary.initDaylimit(uint256)._limit () is not in mixedCase
Parameter WalletLibrary.setDailyLimit(uint256)._newLimit () is not in mixedCase
Parameter WalletLibrary.initWallet(address[],uint256,uint256)._owners () is not in mixedCase
Parameter WalletLibrary.initWallet(address[],uint256,uint256)._required () is not in mixedCase
Parameter WalletLibrary.initWallet(address[],uint256,uint256)._daylimit () is not in mixedCase
Parameter WalletLibrary.kill(address)._to () is not in mixedCase
Parameter WalletLibrary.execute(address,uint256,bytes)._to () is not in mixedCase
Parameter WalletLibrary.execute(address,uint256,bytes)._value () is not in mixedCase
Parameter WalletLibrary.execute(address,uint256,bytes)._data () is not in mixedCase
Parameter WalletLibrary.confirm(bytes32)._h () is not in mixedCase
Parameter WalletLibrary.confirmAndCheck(bytes32)._operation () is not in mixedCase
Parameter WalletLibrary.underLimit(uint256)._value () is not in mixedCase
Variable WalletLibrary.m_required () is not in mixedCase
Variable WalletLibrary.m_numOwners () is not in mixedCase
Variable WalletLibrary.m_dailyLimit () is not in mixedCase
Variable WalletLibrary.m_spentToday () is not in mixedCase
Variable WalletLibrary.m_lastDay () is not in mixedCase
Variable WalletLibrary.m_owners () is not in mixedCase
Variable WalletLibrary.c_maxOwners () is not in mixedCase
Variable WalletLibrary.m_ownerIndex () is not in mixedCase
Variable WalletLibrary.m_pending () is not in mixedCase
Variable WalletLibrary.m_pendingIndex () is not in mixedCase
Variable WalletLibrary.m_txs () is not in mixedCase
Variable Wallet.m_required () is not in mixedCase
Variable Wallet.m_numOwners () is not in mixedCase
Variable Wallet.m_dailyLimit () is not in mixedCase
Variable Wallet.m_spentToday () is not in mixedCase
Variable Wallet.m_lastDay () is not in mixedCase
Variable Wallet.m_owners () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

WalletLibrary._walletLibrary () is never used in WalletLibrary ()
Wallet.m_required () is never used in Wallet ()
Wallet.m_numOwners () is never used in Wallet ()
Wallet.m_dailyLimit () is never used in Wallet ()
Wallet.m_spentToday () is never used in Wallet ()
Wallet.m_lastDay () is never used in Wallet ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

Wallet._walletLibrary () should be constant 
Wallet.m_dailyLimit () should be constant 
Wallet.m_lastDay () should be constant 
Wallet.m_numOwners () should be constant 
Wallet.m_required () should be constant 
Wallet.m_spentToday () should be constant 
WalletLibrary._walletLibrary () should be constant 
WalletLibrary.c_maxOwners () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

initWallet(address[],uint256,uint256) should be declared external:
	- WalletLibrary.initWallet(address[],uint256,uint256) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/access_control/parity_wallet_bug_1.sol analyzed (4 contracts with 93 detectors), 81 result(s) found
Switched global version to 0.4.9
generating... report/access_control/parity_wallet_bug_2.sol.json
'solc --version' running
'solc dataset/access_control/parity_wallet_bug_2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/access_control/parity_wallet_bug_2.sol:
dataset/access_control/parity_wallet_bug_2.sol:383:37: Warning: This looks like an address but has an invalid checksum.
  address constant _walletLibrary = 0xcafecafecafecafecafecafecafecafecafecafe;
                                    ^----------------------------------------^


Reentrancy in WalletLibrary.confirm(bytes32) ():
	External calls:
	- ! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) ()
	State variables written after the call(s):
	- delete m_txs[_h] ()
	WalletLibrary.m_txs () can be used in cross function reentrancies:
	- WalletLibrary.clearPending() ()
	- WalletLibrary.confirm(bytes32) ()
	- WalletLibrary.execute(address,uint256,bytes) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

WalletLibrary.kill(address) () allows anyone to destruct the contract
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#suicidal

WalletLibrary.confirm(bytes32).created () is a local variable never initialized
WalletLibrary.execute(address,uint256,bytes).created () is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Modifier WalletLibrary.onlyowner() () does not always execute _; or revertModifier WalletLibrary.onlymanyowners(bytes32) () does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Reentrancy in WalletLibrary.confirm(bytes32) ():
	External calls:
	- ! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) ()
	Event emitted after the call(s):
	- MultiTransact(msg.sender,_h,m_txs[_h].value,m_txs[_h].to,m_txs[_h].data,created) ()
Reentrancy in WalletLibrary.execute(address,uint256,bytes) ():
	External calls:
	- ! _to.call.value(_value)(_data) ()
	Event emitted after the call(s):
	- SingleTransact(msg.sender,_value,_to,_data,created) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

WalletLibrary.underLimit(uint256) () uses timestamp for comparisons
	Dangerous comparisons:
	- today() > m_lastDay ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected onlymanyowners(sha3()(msg.data)) ():
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected suicide(address)(_to) ():
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected o_hash = sha3()(msg.data,block.number) ():
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.9 () allows old versions
solc-0.4.9 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in WalletLibrary.execute(address,uint256,bytes) ():
	- ! _to.call.value(_value)(_data) ()
Low level call in WalletLibrary.confirm(bytes32) ():
	- ! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

WalletLibrary () should inherit from WalletAbi ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance

Parameter WalletLibrary.initMultiowned(address[],uint256)._owners () is not in mixedCase
Parameter WalletLibrary.initMultiowned(address[],uint256)._required () is not in mixedCase
Parameter WalletLibrary.revoke(bytes32)._operation () is not in mixedCase
Parameter WalletLibrary.changeOwner(address,address)._from () is not in mixedCase
Parameter WalletLibrary.changeOwner(address,address)._to () is not in mixedCase
Parameter WalletLibrary.addOwner(address)._owner () is not in mixedCase
Parameter WalletLibrary.removeOwner(address)._owner () is not in mixedCase
Parameter WalletLibrary.changeRequirement(uint256)._newRequired () is not in mixedCase
Parameter WalletLibrary.isOwner(address)._addr () is not in mixedCase
Parameter WalletLibrary.hasConfirmed(bytes32,address)._operation () is not in mixedCase
Parameter WalletLibrary.hasConfirmed(bytes32,address)._owner () is not in mixedCase
Parameter WalletLibrary.initDaylimit(uint256)._limit () is not in mixedCase
Parameter WalletLibrary.setDailyLimit(uint256)._newLimit () is not in mixedCase
Parameter WalletLibrary.initWallet(address[],uint256,uint256)._owners () is not in mixedCase
Parameter WalletLibrary.initWallet(address[],uint256,uint256)._required () is not in mixedCase
Parameter WalletLibrary.initWallet(address[],uint256,uint256)._daylimit () is not in mixedCase
Parameter WalletLibrary.kill(address)._to () is not in mixedCase
Parameter WalletLibrary.execute(address,uint256,bytes)._to () is not in mixedCase
Parameter WalletLibrary.execute(address,uint256,bytes)._value () is not in mixedCase
Parameter WalletLibrary.execute(address,uint256,bytes)._data () is not in mixedCase
Parameter WalletLibrary.confirm(bytes32)._h () is not in mixedCase
Parameter WalletLibrary.confirmAndCheck(bytes32)._operation () is not in mixedCase
Parameter WalletLibrary.underLimit(uint256)._value () is not in mixedCase
Variable WalletLibrary.m_required () is not in mixedCase
Variable WalletLibrary.m_numOwners () is not in mixedCase
Variable WalletLibrary.m_dailyLimit () is not in mixedCase
Variable WalletLibrary.m_spentToday () is not in mixedCase
Variable WalletLibrary.m_lastDay () is not in mixedCase
Variable WalletLibrary.m_owners () is not in mixedCase
Variable WalletLibrary.c_maxOwners () is not in mixedCase
Variable WalletLibrary.m_ownerIndex () is not in mixedCase
Variable WalletLibrary.m_pending () is not in mixedCase
Variable WalletLibrary.m_pendingIndex () is not in mixedCase
Variable WalletLibrary.m_txs () is not in mixedCase
Modifier WalletLibrary.only_uninitialized() () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

WalletLibrary._walletLibrary () is never used in WalletLibrary ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

WalletLibrary._walletLibrary () should be constant 
WalletLibrary.c_maxOwners () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

initWallet(address[],uint256,uint256) should be declared external:
	- WalletLibrary.initWallet(address[],uint256,uint256) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/access_control/parity_wallet_bug_2.sol analyzed (3 contracts with 93 detectors), 57 result(s) found
Switched global version to 0.4.22
generating... report/access_control/phishable.sol.json
'solc --version' running
'solc dataset/access_control/phishable.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/phishable.sol:
dataset/access_control/phishable.sol:21:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        _recipient.transfer(this.balance);
                            ^----------^
dataset/access_control/phishable.sol:12:5: Warning: No visibility specified. Defaulting to "public". 
    constructor (address _owner) {
    ^ (Relevant source part starts here and spans across multiple lines).


Phishable.withdrawAll(address) (dataset/access_control/phishable.sol#18-22) sends eth to arbitrary user
	Dangerous calls:
	- _recipient.transfer(this.balance) (dataset/access_control/phishable.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Phishable.withdrawAll(address) (dataset/access_control/phishable.sol#18-22) uses tx.origin for authorization: require(bool)(tx.origin == owner) (dataset/access_control/phishable.sol#20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin

Phishable.constructor(address)._owner (dataset/access_control/phishable.sol#12) lacks a zero-check on :
		- owner = _owner (dataset/access_control/phishable.sol#13)
Phishable.withdrawAll(address)._recipient (dataset/access_control/phishable.sol#18) lacks a zero-check on :
		- _recipient.transfer(this.balance) (dataset/access_control/phishable.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.22 (dataset/access_control/phishable.sol#7) is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
solc-0.4.22 is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter Phishable.withdrawAll(address)._recipient (dataset/access_control/phishable.sol#18) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/access_control/phishable.sol analyzed (1 contracts with 93 detectors), 7 result(s) found
Switched global version to 0.4.24
generating... report/access_control/proxy.sol.json
'solc --version' running
'solc dataset/access_control/proxy.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running

Proxy.forward(address,bytes) (dataset/access_control/proxy.sol#17-20) uses delegatecall to a input-controlled function id
	- require(bool)(callee.delegatecall(_data)) (dataset/access_control/proxy.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#controlled-delegatecall

Pragma version^0.4.24 (dataset/access_control/proxy.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Proxy.forward(address,bytes) (dataset/access_control/proxy.sol#17-20):
	- require(bool)(callee.delegatecall(_data)) (dataset/access_control/proxy.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Proxy.forward(address,bytes)._data (dataset/access_control/proxy.sol#17) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

forward(address,bytes) should be declared external:
	- Proxy.forward(address,bytes) (dataset/access_control/proxy.sol#17-20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/access_control/proxy.sol analyzed (1 contracts with 93 detectors), 6 result(s) found
Installing solc '0.4.15'...
Version '0.4.15' installed.
Switched global version to 0.4.15
generating... report/access_control/rubixi.sol.json
'solc --version' running
'solc dataset/access_control/rubixi.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/rubixi.sol:
dataset/access_control/rubixi.sol:83:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0) throw;
                                         ^---^
dataset/access_control/rubixi.sol:93:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0) throw;
                                         ^---^
dataset/access_control/rubixi.sol:100:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0 || _pcent > 100) throw;
                                                         ^---^
dataset/access_control/rubixi.sol:113:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (_mult > 300 || _mult < 120) throw;
                                                 ^---^
dataset/access_control/rubixi.sol:119:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (_fee > 10) throw;
                                ^---^
dataset/access_control/rubixi.sol:74:26: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                         participants[payoutOrder].etherAddress.send(payoutToSend);
                         ^-------------------------------------------------------^
dataset/access_control/rubixi.sol:85:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(collectedFees);
                 ^-------------------------^
dataset/access_control/rubixi.sol:95:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(_amt);
                 ^----------------^
dataset/access_control/rubixi.sol:103:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(feesToCollect);
                 ^-------------------------^


Rubixi (dataset/access_control/rubixi.sol#10-162) contract sets array length with a user-controlled value:
	- participants.push(Participant(msg.sender,(msg.value * pyramidMultiplier) / 100)) (dataset/access_control/rubixi.sol#61)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Rubixi.collectPercentOfFees(uint256) (dataset/access_control/rubixi.sol#99-105) performs a multiplication on the result of a division:
	- feesToCollect = collectedFees / 100 * _pcent (dataset/access_control/rubixi.sol#102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

Rubixi.addPayout(uint256) (dataset/access_control/rubixi.sol#59-79) ignores return value by participants[payoutOrder].etherAddress.send(payoutToSend) (dataset/access_control/rubixi.sol#74)
Rubixi.collectAllFees() (dataset/access_control/rubixi.sol#82-87) ignores return value by creator.send(collectedFees) (dataset/access_control/rubixi.sol#85)
Rubixi.collectFeesInEther(uint256) (dataset/access_control/rubixi.sol#89-97) ignores return value by creator.send(_amt) (dataset/access_control/rubixi.sol#95)
Rubixi.collectPercentOfFees(uint256) (dataset/access_control/rubixi.sol#99-105) ignores return value by creator.send(feesToCollect) (dataset/access_control/rubixi.sol#103)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Rubixi.changeOwner(address) (dataset/access_control/rubixi.sol#108-110) should emit an event for: 
	- creator = _owner (dataset/access_control/rubixi.sol#109) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

Rubixi.collectFeesInEther(uint256) (dataset/access_control/rubixi.sol#89-97) should emit an event for: 
	- collectedFees -= _amt (dataset/access_control/rubixi.sol#96) 
Rubixi.collectPercentOfFees(uint256) (dataset/access_control/rubixi.sol#99-105) should emit an event for: 
	- collectedFees -= feesToCollect (dataset/access_control/rubixi.sol#104) 
Rubixi.changeMultiplier(uint256) (dataset/access_control/rubixi.sol#112-116) should emit an event for: 
	- pyramidMultiplier = _mult (dataset/access_control/rubixi.sol#115) 
Rubixi.changeFeePercentage(uint256) (dataset/access_control/rubixi.sol#118-122) should emit an event for: 
	- feePercent = _fee (dataset/access_control/rubixi.sol#121) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Rubixi.changeOwner(address)._owner (dataset/access_control/rubixi.sol#108) lacks a zero-check on :
		- creator = _owner (dataset/access_control/rubixi.sol#109)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Rubixi.onlyowner() (dataset/access_control/rubixi.sol#27-29) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Deprecated standard detected THROW (dataset/access_control/rubixi.sol#83):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/access_control/rubixi.sol#93):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/access_control/rubixi.sol#100):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/access_control/rubixi.sol#113):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/access_control/rubixi.sol#119):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.15 (dataset/access_control/rubixi.sol#8) allows old versions
solc-0.4.15 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function Rubixi.DynamicPyramid() (dataset/access_control/rubixi.sol#23-25) is not in mixedCase
Parameter Rubixi.addPayout(uint256)._fee (dataset/access_control/rubixi.sol#59) is not in mixedCase
Parameter Rubixi.collectFeesInEther(uint256)._amt (dataset/access_control/rubixi.sol#89) is not in mixedCase
Parameter Rubixi.collectPercentOfFees(uint256)._pcent (dataset/access_control/rubixi.sol#99) is not in mixedCase
Parameter Rubixi.changeOwner(address)._owner (dataset/access_control/rubixi.sol#108) is not in mixedCase
Parameter Rubixi.changeMultiplier(uint256)._mult (dataset/access_control/rubixi.sol#112) is not in mixedCase
Parameter Rubixi.changeFeePercentage(uint256)._fee (dataset/access_control/rubixi.sol#118) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in Rubixi.addPayout(uint256) (dataset/access_control/rubixi.sol#59-79):
	External calls:
	- participants[payoutOrder].etherAddress.send(payoutToSend) (dataset/access_control/rubixi.sol#74)
	State variables written after the call(s):
	- balance > participants[payoutOrder].payout (dataset/access_control/rubixi.sol#72)
	- balance -= participants[payoutOrder].payout (dataset/access_control/rubixi.sol#76)
	- payoutOrder += 1 (dataset/access_control/rubixi.sol#77)
Reentrancy in Rubixi.collectAllFees() (dataset/access_control/rubixi.sol#82-87):
	External calls:
	- creator.send(collectedFees) (dataset/access_control/rubixi.sol#85)
	State variables written after the call(s):
	- collectedFees = 0 (dataset/access_control/rubixi.sol#86)
Reentrancy in Rubixi.collectFeesInEther(uint256) (dataset/access_control/rubixi.sol#89-97):
	External calls:
	- collectAllFees() (dataset/access_control/rubixi.sol#91)
		- creator.send(collectedFees) (dataset/access_control/rubixi.sol#85)
	- creator.send(_amt) (dataset/access_control/rubixi.sol#95)
	State variables written after the call(s):
	- collectedFees -= _amt (dataset/access_control/rubixi.sol#96)
Reentrancy in Rubixi.collectPercentOfFees(uint256) (dataset/access_control/rubixi.sol#99-105):
	External calls:
	- creator.send(feesToCollect) (dataset/access_control/rubixi.sol#103)
	State variables written after the call(s):
	- collectedFees -= feesToCollect (dataset/access_control/rubixi.sol#104)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/access_control/rubixi.sol analyzed (1 contracts with 93 detectors), 31 result(s) found
Installing solc '0.4.0'...
Version '0.4.0' installed.
Switched global version to 0.4.0
generating... report/access_control/simple_suicide.sol.json
'solc --version' running
'solc dataset/access_control/simple_suicide.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

SimpleSuicide.sudicideAnyone() () allows anyone to destruct the contract
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#suicidal

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/access_control/simple_suicide.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.15
generating... report/access_control/unprotected0.sol.json
'solc --version' running
'solc dataset/access_control/unprotected0.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running

Unprotected.changeOwner(address)._newOwner (dataset/access_control/unprotected0.sol#25) lacks a zero-check on :
		- owner = _newOwner (dataset/access_control/unprotected0.sol#28)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.15 (dataset/access_control/unprotected0.sol#7) allows old versions
solc-0.4.15 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter Unprotected.changeOwner(address)._newOwner (dataset/access_control/unprotected0.sol#25) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/access_control/unprotected0.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Switched global version to 0.4.24
generating... report/access_control/wallet_02_refund_nosub.sol.json
'solc --version' running
'solc dataset/access_control/wallet_02_refund_nosub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/wallet_02_refund_nosub.sol:
dataset/access_control/wallet_02_refund_nosub.sol:43:22: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
         to.transfer(this.balance);
                     ^----------^


Wallet.migrateTo(address).to (dataset/access_control/wallet_02_refund_nosub.sol#41) lacks a zero-check on :
		- to.transfer(this.balance) (dataset/access_control/wallet_02_refund_nosub.sol#43)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.24 (dataset/access_control/wallet_02_refund_nosub.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in Wallet.withdraw(uint256) (dataset/access_control/wallet_02_refund_nosub.sol#28-32):
	External calls:
	- msg.sender.transfer(amount) (dataset/access_control/wallet_02_refund_nosub.sol#30)
	State variables written after the call(s):
	- balances[msg.sender] -= amount (dataset/access_control/wallet_02_refund_nosub.sol#31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/access_control/wallet_02_refund_nosub.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Switched global version to 0.4.24
generating... report/access_control/wallet_03_wrong_constructor.sol.json
'solc --version' running
'solc dataset/access_control/wallet_03_wrong_constructor.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/wallet_03_wrong_constructor.sol:
dataset/access_control/wallet_03_wrong_constructor.sol:38:22: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
         to.transfer(this.balance);
                     ^----------^


Wallet.migrateTo(address).to (dataset/access_control/wallet_03_wrong_constructor.sol#36) lacks a zero-check on :
		- to.transfer(this.balance) (dataset/access_control/wallet_03_wrong_constructor.sol#38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.24 (dataset/access_control/wallet_03_wrong_constructor.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in Wallet.withdraw(uint256) (dataset/access_control/wallet_03_wrong_constructor.sol#28-32):
	External calls:
	- msg.sender.transfer(amount) (dataset/access_control/wallet_03_wrong_constructor.sol#30)
	State variables written after the call(s):
	- balances[msg.sender] -= amount (dataset/access_control/wallet_03_wrong_constructor.sol#31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/access_control/wallet_03_wrong_constructor.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Switched global version to 0.4.24
generating... report/access_control/wallet_04_confused_sign.sol.json
'solc --version' running
'solc dataset/access_control/wallet_04_confused_sign.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/access_control' running
Compilation warnings/errors on dataset/access_control/wallet_04_confused_sign.sol:
dataset/access_control/wallet_04_confused_sign.sol:39:22: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
         to.transfer(this.balance);
                     ^----------^


Wallet.migrateTo(address).to (dataset/access_control/wallet_04_confused_sign.sol#37) lacks a zero-check on :
		- to.transfer(this.balance) (dataset/access_control/wallet_04_confused_sign.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.24 (dataset/access_control/wallet_04_confused_sign.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in Wallet.withdraw(uint256) (dataset/access_control/wallet_04_confused_sign.sol#28-33):
	External calls:
	- msg.sender.transfer(amount) (dataset/access_control/wallet_04_confused_sign.sol#31)
	State variables written after the call(s):
	- balances[msg.sender] -= amount (dataset/access_control/wallet_04_confused_sign.sol#32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/access_control/wallet_04_confused_sign.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Installing solc '0.4.16'...
Version '0.4.16' installed.
Switched global version to 0.4.16
generating... report/arithmetic/BECToken.sol.json
'solc --version' running
'solc dataset/arithmetic/BECToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running

SafeMath.div(uint256,uint256) (dataset/arithmetic/BECToken.sol#20-25) is never used and should be removed
SafeMath.mul(uint256,uint256) (dataset/arithmetic/BECToken.sol#14-18) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.16 (dataset/arithmetic/BECToken.sol#7) allows old versions
solc-0.4.16 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter BasicToken.transfer(address,uint256)._to (dataset/arithmetic/BECToken.sol#65) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (dataset/arithmetic/BECToken.sol#65) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (dataset/arithmetic/BECToken.sol#81) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (dataset/arithmetic/BECToken.sol#116) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (dataset/arithmetic/BECToken.sol#116) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (dataset/arithmetic/BECToken.sol#116) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (dataset/arithmetic/BECToken.sol#138) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (dataset/arithmetic/BECToken.sol#138) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (dataset/arithmetic/BECToken.sol#150) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (dataset/arithmetic/BECToken.sol#150) is not in mixedCase
Parameter PausableToken.transfer(address,uint256)._to (dataset/arithmetic/BECToken.sol#249) is not in mixedCase
Parameter PausableToken.transfer(address,uint256)._value (dataset/arithmetic/BECToken.sol#249) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._from (dataset/arithmetic/BECToken.sol#253) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._to (dataset/arithmetic/BECToken.sol#253) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._value (dataset/arithmetic/BECToken.sol#253) is not in mixedCase
Parameter PausableToken.approve(address,uint256)._spender (dataset/arithmetic/BECToken.sol#257) is not in mixedCase
Parameter PausableToken.approve(address,uint256)._value (dataset/arithmetic/BECToken.sol#257) is not in mixedCase
Parameter PausableToken.batchTransfer(address[],uint256)._receivers (dataset/arithmetic/BECToken.sol#261) is not in mixedCase
Parameter PausableToken.batchTransfer(address[],uint256)._value (dataset/arithmetic/BECToken.sol#261) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

BecToken.BecToken() (dataset/arithmetic/BECToken.sol#297-300) uses literals with too many digits:
	- totalSupply = 7000000000 * (10 ** (uint256(decimals))) (dataset/arithmetic/BECToken.sol#298)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

BecToken.decimals (dataset/arithmetic/BECToken.sol#292) should be constant 
BecToken.name (dataset/arithmetic/BECToken.sol#289) should be constant 
BecToken.symbol (dataset/arithmetic/BECToken.sol#290) should be constant 
BecToken.version (dataset/arithmetic/BECToken.sol#291) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

batchTransfer(address[],uint256) should be declared external:
	- PausableToken.batchTransfer(address[],uint256) (dataset/arithmetic/BECToken.sol#261-274)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/arithmetic/BECToken.sol analyzed (9 contracts with 93 detectors), 29 result(s) found
Installing solc '0.4.10'...
Version '0.4.10' installed.
Switched global version to 0.4.10
generating... report/arithmetic/insecure_transfer.sol.json
'solc --version' running
'solc dataset/arithmetic/insecure_transfer.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

IntegerOverflowAdd () has incorrect ERC20 function interface:IntegerOverflowAdd.transfer(address,uint256) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

Pragma version^0.4.10 () allows old versions
solc-0.4.10 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter IntegerOverflowAdd.transfer(address,uint256)._to () is not in mixedCase
Parameter IntegerOverflowAdd.transfer(address,uint256)._value () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/arithmetic/insecure_transfer.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.15
generating... report/arithmetic/integer_overflow_1.sol.json
'solc --version' running
'solc dataset/arithmetic/integer_overflow_1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running

Pragma version^0.4.15 (dataset/arithmetic/integer_overflow_1.sol#7) allows old versions
solc-0.4.15 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/integer_overflow_1.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Installing solc '0.4.19'...
Version '0.4.19' installed.
Switched global version to 0.4.19
generating... report/arithmetic/integer_overflow_add.sol.json
'solc --version' running
'solc dataset/arithmetic/integer_overflow_add.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running

Pragma version^0.4.19 (dataset/arithmetic/integer_overflow_add.sol#10) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/integer_overflow_add.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.19
generating... report/arithmetic/integer_overflow_benign_1.sol.json
'solc --version' running
'solc dataset/arithmetic/integer_overflow_benign_1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running
Compilation warnings/errors on dataset/arithmetic/integer_overflow_benign_1.sol:
dataset/arithmetic/integer_overflow_benign_1.sol:17:9: Warning: Unused local variable.
        uint res = count - input;
        ^------^
dataset/arithmetic/integer_overflow_benign_1.sol:15:5: Warning: Function state mutability can be restricted to view
    function run(uint256 input) public {
    ^
Spanning multiple lines.


Pragma version^0.4.19 (dataset/arithmetic/integer_overflow_benign_1.sol#10) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

IntegerOverflowBenign1.count (dataset/arithmetic/integer_overflow_benign_1.sol#13) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/arithmetic/integer_overflow_benign_1.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Installing solc '0.4.11'...
Version '0.4.11' installed.
Switched global version to 0.4.11
generating... report/arithmetic/integer_overflow_mapping_sym_1.sol.json
'solc --version' running
'solc dataset/arithmetic/integer_overflow_mapping_sym_1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc --allow-paths .,/share/dataset/arithmetic' running

Pragma version^0.4.11 (dataset/arithmetic/integer_overflow_mapping_sym_1.sol#9) allows old versions
solc-0.4.11 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/integer_overflow_mapping_sym_1.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.19
generating... report/arithmetic/integer_overflow_minimal.sol.json
'solc --version' running
'solc dataset/arithmetic/integer_overflow_minimal.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running

Pragma version^0.4.19 (dataset/arithmetic/integer_overflow_minimal.sol#10) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/integer_overflow_minimal.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.19
generating... report/arithmetic/integer_overflow_mul.sol.json
'solc --version' running
'solc dataset/arithmetic/integer_overflow_mul.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running

Pragma version^0.4.19 (dataset/arithmetic/integer_overflow_mul.sol#10) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/integer_overflow_mul.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.23
generating... report/arithmetic/integer_overflow_multitx_multifunc_feasible.sol.json
'solc --version' running
'solc dataset/arithmetic/integer_overflow_multitx_multifunc_feasible.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running
Compilation warnings/errors on dataset/arithmetic/integer_overflow_multitx_multifunc_feasible.sol:
dataset/arithmetic/integer_overflow_multitx_multifunc_feasible.sol:20:5: Warning: No visibility specified. Defaulting to "public". 
    function run(uint256 input) {
    ^ (Relevant source part starts here and spans across multiple lines).


Pragma version^0.4.23 (dataset/arithmetic/integer_overflow_multitx_multifunc_feasible.sol#10) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/integer_overflow_multitx_multifunc_feasible.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.23
generating... report/arithmetic/integer_overflow_multitx_onefunc_feasible.sol.json
'solc --version' running
'solc dataset/arithmetic/integer_overflow_multitx_onefunc_feasible.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running

Pragma version^0.4.23 (dataset/arithmetic/integer_overflow_multitx_onefunc_feasible.sol#10) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/integer_overflow_multitx_onefunc_feasible.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.25
generating... report/arithmetic/overflow_simple_add.sol.json
'solc --version' running
'solc dataset/arithmetic/overflow_simple_add.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running

Pragma version0.4.25 (dataset/arithmetic/overflow_simple_add.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract Overflow_Add (dataset/arithmetic/overflow_simple_add.sol#9-16) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/arithmetic/overflow_simple_add.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.23
generating... report/arithmetic/overflow_single_tx.sol.json
'solc --version' running
'solc dataset/arithmetic/overflow_single_tx.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running
Compilation warnings/errors on dataset/arithmetic/overflow_single_tx.sol:
dataset/arithmetic/overflow_single_tx.sol:36:9: Warning: Unused local variable.
        uint res = count + input;
        ^------^
dataset/arithmetic/overflow_single_tx.sol:42:9: Warning: Unused local variable.
        uint res = count * input;
        ^------^
dataset/arithmetic/overflow_single_tx.sol:48:9: Warning: Unused local variable.
       	uint res = count - input;
       	^------^
dataset/arithmetic/overflow_single_tx.sol:34:5: Warning: Function state mutability can be restricted to view
    function overflowlocalonly(uint256 input) public {
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/arithmetic/overflow_single_tx.sol:40:5: Warning: Function state mutability can be restricted to view
    function overflowmulocalonly(uint256 input) public {
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/arithmetic/overflow_single_tx.sol:46:5: Warning: Function state mutability can be restricted to view
    function underflowlocalonly(uint256 input) public {
    ^ (Relevant source part starts here and spans across multiple lines).


Pragma version^0.4.23 (dataset/arithmetic/overflow_single_tx.sol#10) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/overflow_single_tx.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.10
generating... report/arithmetic/timelock.sol.json
'solc --version' running
'solc dataset/arithmetic/timelock.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

TimeLock.withdraw() () uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now > lockTime[msg.sender]) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.10 () allows old versions
solc-0.4.10 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter TimeLock.increaseLockTime(uint256)._secondsToIncrease () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/arithmetic/timelock.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Installing solc '0.4.21'...
Version '0.4.21' installed.
Switched global version to 0.4.21
generating... report/arithmetic/tokensalechallenge.sol.json
'solc --version' running
'solc dataset/arithmetic/tokensalechallenge.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running
Compilation warnings/errors on dataset/arithmetic/tokensalechallenge.sol:
dataset/arithmetic/tokensalechallenge.sol:13:33: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function TokenSaleChallenge(address _player) public payable {
                                ^-------------^


Pragma version^0.4.21 (dataset/arithmetic/tokensalechallenge.sol#7) allows old versions
solc-0.4.21 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/arithmetic/tokensalechallenge.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Installing solc '0.4.18'...
Version '0.4.18' installed.
Switched global version to 0.4.18
generating... report/arithmetic/token.sol.json
'solc --version' running
'solc dataset/arithmetic/token.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/arithmetic' running
Compilation warnings/errors on dataset/arithmetic/token.sol:
dataset/arithmetic/token.sol:14:4: Warning: No visibility specified. Defaulting to "public".
   function Token(uint _initialSupply) {
   ^
Spanning multiple lines.


Token.transfer(address,uint256) (dataset/arithmetic/token.sol#18-25) contains a tautology or contradiction:
	- require(bool)(balances[msg.sender] - _value >= 0) (dataset/arithmetic/token.sol#20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction

Pragma version^0.4.18 (dataset/arithmetic/token.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter Token.transfer(address,uint256)._to (dataset/arithmetic/token.sol#18) is not in mixedCase
Parameter Token.transfer(address,uint256)._value (dataset/arithmetic/token.sol#18) is not in mixedCase
Parameter Token.balanceOf(address)._owner (dataset/arithmetic/token.sol#27) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/arithmetic/token.sol analyzed (1 contracts with 93 detectors), 6 result(s) found
Switched global version to 0.4.9
generating... report/bad_randomness/blackjack.sol.json
'solc --version' running
'solc dataset/bad_randomness/blackjack.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

BlackJack () contract sets array length with a user-controlled value:
	- games[msg.sender].houseCards.push(newCard) ()
BlackJack () contract sets array length with a user-controlled value:
	- games[msg.sender].playerCards.push(Deck.deal(msg.sender,nextCard)) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Deck.deal(address,uint8) () uses a weak PRNG: "uint8(uint256(keccak256()(block.blockhash(b),player,cardNumber,timestamp)) % 52) ()" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

BlackJack.getPlayerCard(uint8) () contains a tautology or contradiction:
	- id < 0 || id > games[msg.sender].playerCards.length ()
BlackJack.getHouseCard(uint8) () contains a tautology or contradiction:
	- id < 0 || id > games[msg.sender].houseCards.length ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction

Deprecated standard detected uint8(uint256(keccak256()(block.blockhash(b),player,cardNumber,timestamp)) % 52) ():
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.9 () allows old versions
solc-0.4.9 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Variable BlackJack.BLACKJACK () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in BlackJack.checkGameResult(BlackJack.Game,bool) ():
	External calls:
	- ! msg.sender.send(game.bet) ()
	State variables written after the call(s):
	- games[msg.sender].state = GameState.Tie ()
Reentrancy in BlackJack.checkGameResult(BlackJack.Game,bool) ():
	External calls:
	- ! msg.sender.send((game.bet * 5) / 2) ()
	- ! msg.sender.send(game.bet * 2) ()
	State variables written after the call(s):
	- games[msg.sender].state = GameState.Player ()
Reentrancy in BlackJack.checkGameResult(BlackJack.Game,bool) ():
	External calls:
	- ! msg.sender.send(game.bet * 2) ()
	State variables written after the call(s):
	- games[msg.sender].state = GameState.Player ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

BlackJack.BLACKJACK () should be constant 
BlackJack.maxBet () should be constant 
BlackJack.minBet () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/bad_randomness/blackjack.sol analyzed (2 contracts with 93 detectors), 16 result(s) found
Switched global version to 0.4.16
generating... report/bad_randomness/etheraffle.sol.json
'solc --version' running
'solc dataset/bad_randomness/etheraffle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/bad_randomness' running

Ethraffle_v4b.endRaffle() (dataset/bad_randomness/etheraffle.sol#143-161) has external calls inside a loop: contestants[i].addr.transfer(pricePerTicket) (dataset/bad_randomness/etheraffle.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Ethraffle_v4b.buyTickets() (dataset/bad_randomness/etheraffle.sol#64-95) has costly operations inside a loop:
	- currTicket = nextTicket ++ (dataset/bad_randomness/etheraffle.sol#78)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

Pragma version^0.4.16 (dataset/bad_randomness/etheraffle.sol#8) allows old versions
solc-0.4.16 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract Ethraffle_v4b (dataset/bad_randomness/etheraffle.sol#10-174) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in Ethraffle_v4b.endRaffle() (dataset/bad_randomness/etheraffle.sol#143-161):
	External calls:
	- contestants[i].addr.transfer(pricePerTicket) (dataset/bad_randomness/etheraffle.sol#150)
	State variables written after the call(s):
	- blockNumber = block.number (dataset/bad_randomness/etheraffle.sol#158)
	- gaps.length = 0 (dataset/bad_randomness/etheraffle.sol#159)
	- nextTicket = 0 (dataset/bad_randomness/etheraffle.sol#156)
	- raffleId ++ (dataset/bad_randomness/etheraffle.sol#155)
	Event emitted after the call(s):
	- RaffleResult(raffleId,totalTickets,address(0),address(0),address(0),0,0) (dataset/bad_randomness/etheraffle.sol#154)
	- TicketRefund(raffleId,contestants[i].addr,i) (dataset/bad_randomness/etheraffle.sol#149)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/bad_randomness/etheraffle.sol analyzed (1 contracts with 93 detectors), 6 result(s) found
Switched global version to 0.4.21
generating... report/bad_randomness/guess_the_random_number.sol.json
'solc --version' running
'solc dataset/bad_randomness/guess_the_random_number.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/bad_randomness' running

GuessTheRandomNumberChallenge.guess(uint8) (dataset/bad_randomness/guess_the_random_number.sol#22-28) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(2000000000000000000) (dataset/bad_randomness/guess_the_random_number.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

GuessTheRandomNumberChallenge.guess(uint8) (dataset/bad_randomness/guess_the_random_number.sol#22-28) uses a dangerous strict equality:
	- n == answer (dataset/bad_randomness/guess_the_random_number.sol#25)
GuessTheRandomNumberChallenge.isComplete() (dataset/bad_randomness/guess_the_random_number.sol#18-20) uses a dangerous strict equality:
	- address(this).balance == 0 (dataset/bad_randomness/guess_the_random_number.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

GuessTheRandomNumberChallenge.guess(uint8) (dataset/bad_randomness/guess_the_random_number.sol#22-28) uses timestamp for comparisons
	Dangerous comparisons:
	- n == answer (dataset/bad_randomness/guess_the_random_number.sol#25)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected answer = uint8(keccak256()(block.blockhash(block.number - 1),now)) (dataset/bad_randomness/guess_the_random_number.sol#15):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.21 (dataset/bad_randomness/guess_the_random_number.sol#7) allows old versions
solc-0.4.21 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/bad_randomness/guess_the_random_number.sol analyzed (1 contracts with 93 detectors), 7 result(s) found
Switched global version to 0.4.0
generating... report/bad_randomness/lottery.sol.json
'solc --version' running
'solc dataset/bad_randomness/lottery.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

Lottery () contract sets array length with a user-controlled value:
	- bets.push(Bet(msg.value,block.number,won)) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Lottery.makeBet() () uses a dangerous strict equality:
	- won = (block.number % 2) == 0 ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected suicide(address)(organizer) ():
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Loop condition i < bets.length () should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length
dataset/bad_randomness/lottery.sol analyzed (1 contracts with 93 detectors), 7 result(s) found
Switched global version to 0.4.0
generating... report/bad_randomness/lucky_doubler.sol.json
'solc --version' running
'solc dataset/bad_randomness/lucky_doubler.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/bad_randomness/lucky_doubler.sol:
dataset/bad_randomness/lucky_doubler.sol:60:14: Warning: Return value of low-level calls not used.
             msg.sender.send(msg.value);
             ^------------------------^
dataset/bad_randomness/lucky_doubler.sol:74:10: Warning: Return value of low-level calls not used.
        	msg.sender.send(msg.value - 1 ether);
        	^----------------------------------^
dataset/bad_randomness/lucky_doubler.sol:102:13: Warning: Return value of low-level calls not used.
            theEntry.entryAddress.send(payout);
            ^--------------------------------^
dataset/bad_randomness/lucky_doubler.sol:119:17: Warning: Return value of low-level calls not used.
                owner.send(fees);
                ^--------------^


LuckyDoubler () contract sets array length with a user-controlled value:
	- unpaidEntries.push(entries.length - 1) ()
LuckyDoubler () contract sets array length with a user-controlled value:
	- entries.push(Entry(msg.sender,dValue,(dValue * (multiplier) / 100),false)) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

LuckyDoubler.rand(uint256) () uses a weak PRNG: "uint256((uint256(hashVal) / factor)) % max ()" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

LuckyDoubler.init() () ignores return value by msg.sender.send(msg.value) ()
LuckyDoubler.join() () ignores return value by msg.sender.send(msg.value - 1000000000000000000) ()
LuckyDoubler.join() () ignores return value by theEntry.entryAddress.send(payout) ()
LuckyDoubler.join() () ignores return value by owner.send(fees) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

LuckyDoubler.changeOwner(address) () should emit an event for: 
	- owner = newOwner () 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

LuckyDoubler.changeMultiplier(uint256) () should emit an event for: 
	- multiplier = multi () 
LuckyDoubler.changeFee(uint256) () should emit an event for: 
	- fee = newFee () 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

LuckyDoubler.changeOwner(address).newOwner () lacks a zero-check on :
		- owner = newOwner ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier LuckyDoubler.onlyowner() () does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Deprecated standard detected hashVal = uint256(block.blockhash(lastBlockNumber)) ():
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Variable LuckyDoubler.FACTOR () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in LuckyDoubler.join() ():
	External calls:
	- msg.sender.send(msg.value - 1000000000000000000) ()
	State variables written after the call(s):
	- balance += (dValue * (100 - fee)) / 100 ()
	- entries.push(Entry(msg.sender,dValue,(dValue * (multiplier) / 100),false)) ()
	- unpaidEntries.push(entries.length - 1) ()
	- users[msg.sender].id = msg.sender ()
	- users[msg.sender].deposits = 0 ()
	- users[msg.sender].payoutsReceived = 0 ()
	- users[msg.sender].deposits ++ ()
Reentrancy in LuckyDoubler.join() ():
	External calls:
	- msg.sender.send(msg.value - 1000000000000000000) ()
	- theEntry.entryAddress.send(payout) ()
	State variables written after the call(s):
	- balance -= payout ()
	- theEntry.paid = true ()
	- unpaidEntries[index] = unpaidEntries[unpaidEntries.length - 1] ()
	- unpaidEntries.length -- ()
	- users[theEntry.entryAddress].payoutsReceived ++ ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

LuckyDoubler.FACTOR () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/bad_randomness/lucky_doubler.sol analyzed (1 contracts with 93 detectors), 20 result(s) found
Switched global version to 0.4.24
generating... report/bad_randomness/old_blockhash.sol.json
'solc --version' running
'solc dataset/bad_randomness/old_blockhash.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/bad_randomness' running

Pragma version^0.4.24 (dataset/bad_randomness/old_blockhash.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Struct PredictTheBlockHashChallenge.guess (dataset/bad_randomness/old_blockhash.sol#13-16) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/bad_randomness/old_blockhash.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.25
generating... report/bad_randomness/random_number_generator.sol.json
'solc --version' running
'solc dataset/bad_randomness/random_number_generator.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/bad_randomness' running

RandomNumberGenerator.random(uint256) (dataset/bad_randomness/random_number_generator.sol#14-25) uses a weak PRNG: "uint256((h / x)) % max + 1 (dataset/bad_randomness/random_number_generator.sol#24)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

RandomNumberGenerator.random(uint256) (dataset/bad_randomness/random_number_generator.sol#14-25) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.25 (dataset/bad_randomness/random_number_generator.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/bad_randomness/random_number_generator.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Installing solc '0.4.13'...
Version '0.4.13' installed.
Switched global version to 0.4.13
generating... report/bad_randomness/smart_billions.sol.json
'solc --version' running
'solc dataset/bad_randomness/smart_billions.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/bad_randomness' running

SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) contract sets array length with a user-controlled value:
	- dividends.push(0) (dataset/bad_randomness/smart_billions.sol#187)
SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) contract sets array length with a user-controlled value:
	- dividends.push(0) (dataset/bad_randomness/smart_billions.sol#346)
SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) contract sets array length with a user-controlled value:
	- dividends.push(0) (dataset/bad_randomness/smart_billions.sol#186)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

SmartBillions.invest(address) (dataset/bad_randomness/smart_billions.sol#399-431) performs a multiplication on the result of a division:
	- walletBalance += (investing * 5 / 100) * 2 (dataset/bad_randomness/smart_billions.sol#416)
SmartBillions.commitDividend(address) (dataset/bad_randomness/smart_billions.sol#459-478) performs a multiplication on the result of a division:
	- share = balances[_who] * 0xffffffff / totalSupply (dataset/bad_randomness/smart_billions.sol#468)
	- balance += share * dividends[last] (dataset/bad_randomness/smart_billions.sol#471)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) has incorrect ERC20 function interface:StandardToken.transferFrom(address,address,uint256) (dataset/bad_randomness/smart_billions.sol#84-92)
SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) has incorrect ERC20 function interface:StandardToken.approve(address,uint256) (dataset/bad_randomness/smart_billions.sol#98-103)
SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) has incorrect ERC20 function interface:ERC20.transferFrom(address,address,uint256) (dataset/bad_randomness/smart_billions.sol#33)
SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) has incorrect ERC20 function interface:ERC20.approve(address,uint256) (dataset/bad_randomness/smart_billions.sol#34)
SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) has incorrect ERC20 function interface:ERC20Basic.transfer(address,uint256) (dataset/bad_randomness/smart_billions.sol#26)
SmartBillions (dataset/bad_randomness/smart_billions.sol#118-771) has incorrect ERC20 function interface:BasicToken.transfer(address,uint256) (dataset/bad_randomness/smart_billions.sol#51-64)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

SmartBillions.addHashes(uint256) (dataset/bad_randomness/smart_billions.sol#672-689) uses a dangerous strict equality:
	- require(bool)(hashFirst == 0 && _sadd > 0 && _sadd <= hashesSize) (dataset/bad_randomness/smart_billions.sol#673)
SmartBillions.betOf(address) (dataset/bad_randomness/smart_billions.sol#513-535) uses a dangerous strict equality:
	- (player.value == 0) || (player.blockNum <= 1) || (block.number < player.blockNum) || (block.number >= player.blockNum + (10 * hashesSize)) (dataset/bad_randomness/smart_billions.sol#515-518)
SmartBillions.betOf(address) (dataset/bad_randomness/smart_billions.sol#513-535) uses a dangerous strict equality:
	- hash == 0x1000000 (dataset/bad_randomness/smart_billions.sol#527)
SmartBillions.betPrize(SmartBillions.Bet,uint24) (dataset/bad_randomness/smart_billions.sol#482-508) uses a dangerous strict equality:
	- (hit & 0xF00000) == 0 (dataset/bad_randomness/smart_billions.sol#485-491)
SmartBillions.putHash() (dataset/bad_randomness/smart_billions.sol#735-756) uses a dangerous strict equality:
	- lastb == 0 || block.number <= lastb + 10 (dataset/bad_randomness/smart_billions.sol#737)
SmartBillions.won() (dataset/bad_randomness/smart_billions.sol#540-591) uses a dangerous strict equality:
	- player.blockNum == 0 (dataset/bad_randomness/smart_billions.sol#542)
SmartBillions.won() (dataset/bad_randomness/smart_billions.sol#540-591) uses a dangerous strict equality:
	- (player.value == 0) || (player.blockNum == 1) (dataset/bad_randomness/smart_billions.sol#546)
SmartBillions.won() (dataset/bad_randomness/smart_billions.sol#540-591) uses a dangerous strict equality:
	- hash == 0x1000000 (dataset/bad_randomness/smart_billions.sol#566)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

ERC20.allowance(address,address).owner (dataset/bad_randomness/smart_billions.sol#32) shadows:
	- ERC20Basic.owner (dataset/bad_randomness/smart_billions.sol#23) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

SmartBillions.changeOwner(address) (dataset/bad_randomness/smart_billions.sol#267-272) should emit an event for: 
	- owner = _who (dataset/bad_randomness/smart_billions.sol#271) 
SmartBillions.changeAnimator(address) (dataset/bad_randomness/smart_billions.sol#278-283) should emit an event for: 
	- animator = _who (dataset/bad_randomness/smart_billions.sol#282) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

SmartBillions.setInvestStart(uint256) (dataset/bad_randomness/smart_billions.sol#289-292) should emit an event for: 
	- investStart = _when (dataset/bad_randomness/smart_billions.sol#291) 
SmartBillions.setBetMax(uint256) (dataset/bad_randomness/smart_billions.sol#298-300) should emit an event for: 
	- hashBetMax = _maxsum (dataset/bad_randomness/smart_billions.sol#299) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

SmartBillions.putHash() (dataset/bad_randomness/smart_billions.sol#735-756) has costly operations inside a loop:
	- hashLast = lastb + 10 (dataset/bad_randomness/smart_billions.sol#754)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

Deprecated standard detected (betPrize(player,uint24(block.blockhash(player.blockNum)))) (dataset/bad_randomness/smart_billions.sol#523):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected hash = uint24(block.blockhash(player.blockNum)) (dataset/bad_randomness/smart_billions.sol#560):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected playSystem(uint256(sha3()(msg.sender,block.number)),address(0)) (dataset/bad_randomness/smart_billions.sol#618):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected playSystem(uint256(sha3()(msg.sender,block.number)),_partner) (dataset/bad_randomness/smart_billions.sol#626):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected ((uint256(block.blockhash(_lastb)) & 0xFFFFFF) | ((uint256(block.blockhash(_lastb + 1)) & 0xFFFFFF) << 24) | ((uint256(block.blockhash(_lastb + 2)) & 0xFFFFFF) << 48) | ((uint256(block.blockhash(_lastb + 3)) & 0xFFFFFF) << 72) | ((uint256(block.blockhash(_lastb + 4)) & 0xFFFFFF) << 96) | ((uint256(block.blockhash(_lastb + 5)) & 0xFFFFFF) << 120) | ((uint256(block.blockhash(_lastb + 6)) & 0xFFFFFF) << 144) | ((uint256(block.blockhash(_lastb + 7)) & 0xFFFFFF) << 168) | ((uint256(block.blockhash(_lastb + 8)) & 0xFFFFFF) << 192) | ((uint256(block.blockhash(_lastb + 9)) & 0xFFFFFF) << 216) | ((uint256(_delta) / hashesSize) << 240)) (dataset/bad_randomness/smart_billions.sol#700-719):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.13 (dataset/bad_randomness/smart_billions.sol#7) allows old versions
solc-0.4.13 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter BasicToken.transfer(address,uint256)._to (dataset/bad_randomness/smart_billions.sol#51) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (dataset/bad_randomness/smart_billions.sol#51) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (dataset/bad_randomness/smart_billions.sol#70) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (dataset/bad_randomness/smart_billions.sol#84) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (dataset/bad_randomness/smart_billions.sol#84) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (dataset/bad_randomness/smart_billions.sol#84) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (dataset/bad_randomness/smart_billions.sol#98) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (dataset/bad_randomness/smart_billions.sol#98) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (dataset/bad_randomness/smart_billions.sol#110) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (dataset/bad_randomness/smart_billions.sol#110) is not in mixedCase
Parameter SmartBillions.walletBalanceOf(address)._owner (dataset/bad_randomness/smart_billions.sol#203) is not in mixedCase
Parameter SmartBillions.walletPeriodOf(address)._owner (dataset/bad_randomness/smart_billions.sol#211) is not in mixedCase
Parameter SmartBillions.walletBlockOf(address)._owner (dataset/bad_randomness/smart_billions.sol#219) is not in mixedCase
Parameter SmartBillions.betValueOf(address)._owner (dataset/bad_randomness/smart_billions.sol#227) is not in mixedCase
Parameter SmartBillions.betHashOf(address)._owner (dataset/bad_randomness/smart_billions.sol#235) is not in mixedCase
Parameter SmartBillions.betBlockNumberOf(address)._owner (dataset/bad_randomness/smart_billions.sol#243) is not in mixedCase
Parameter SmartBillions.changeOwner(address)._who (dataset/bad_randomness/smart_billions.sol#267) is not in mixedCase
Parameter SmartBillions.changeAnimator(address)._who (dataset/bad_randomness/smart_billions.sol#278) is not in mixedCase
Parameter SmartBillions.setInvestStart(uint256)._when (dataset/bad_randomness/smart_billions.sol#289) is not in mixedCase
Parameter SmartBillions.setBetMax(uint256)._maxsum (dataset/bad_randomness/smart_billions.sol#298) is not in mixedCase
Parameter SmartBillions.coldStore(uint256)._amount (dataset/bad_randomness/smart_billions.sol#316) is not in mixedCase
Parameter SmartBillions.pay(uint256)._amount (dataset/bad_randomness/smart_billions.sol#369) is not in mixedCase
Parameter SmartBillions.invest(address)._partner (dataset/bad_randomness/smart_billions.sol#399) is not in mixedCase
Parameter SmartBillions.commitDividend(address)._who (dataset/bad_randomness/smart_billions.sol#459) is not in mixedCase
Parameter SmartBillions.betPrize(SmartBillions.Bet,uint24)._player (dataset/bad_randomness/smart_billions.sol#482) is not in mixedCase
Parameter SmartBillions.betPrize(SmartBillions.Bet,uint24)._hash (dataset/bad_randomness/smart_billions.sol#482) is not in mixedCase
Parameter SmartBillions.betOf(address)._who (dataset/bad_randomness/smart_billions.sol#513) is not in mixedCase
Parameter SmartBillions.playRandom(address)._partner (dataset/bad_randomness/smart_billions.sol#625) is not in mixedCase
Parameter SmartBillions.playSystem(uint256,address)._hash (dataset/bad_randomness/smart_billions.sol#633) is not in mixedCase
Parameter SmartBillions.playSystem(uint256,address)._partner (dataset/bad_randomness/smart_billions.sol#633) is not in mixedCase
Parameter SmartBillions.addHashes(uint256)._sadd (dataset/bad_randomness/smart_billions.sol#672) is not in mixedCase
Parameter SmartBillions.calcHashes(uint32,uint32)._lastb (dataset/bad_randomness/smart_billions.sol#698) is not in mixedCase
Parameter SmartBillions.calcHashes(uint32,uint32)._delta (dataset/bad_randomness/smart_billions.sol#698) is not in mixedCase
Parameter SmartBillions.getHash(uint256)._block (dataset/bad_randomness/smart_billions.sol#722) is not in mixedCase
Parameter SmartBillions.putHashes(uint256)._num (dataset/bad_randomness/smart_billions.sol#762) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in SmartBillions.coldStore(uint256) (dataset/bad_randomness/smart_billions.sol#316-324):
	External calls:
	- msg.sender.transfer(_amount) (dataset/bad_randomness/smart_billions.sol#322)
	State variables written after the call(s):
	- coldStoreLast = block.number (dataset/bad_randomness/smart_billions.sol#323)
Reentrancy in SmartBillions.invest(address) (dataset/bad_randomness/smart_billions.sol#399-431):
	External calls:
	- msg.sender.transfer(msg.value.sub(investing)) (dataset/bad_randomness/smart_billions.sol#407)
	State variables written after the call(s):
	- balances[msg.sender] += senderBalance (dataset/bad_randomness/smart_billions.sol#423)
	- balances[owner] += ownerBalance (dataset/bad_randomness/smart_billions.sol#424)
	- balances[animator] += animatorBalance (dataset/bad_randomness/smart_billions.sol#425)
	- totalSupply += senderBalance + ownerBalance + animatorBalance (dataset/bad_randomness/smart_billions.sol#426)
	- walletBalance += investing / 10 (dataset/bad_randomness/smart_billions.sol#413)
	- walletBalance += (investing * 5 / 100) * 2 (dataset/bad_randomness/smart_billions.sol#416)
	- wallets[owner].balance += uint208(investing / 10) (dataset/bad_randomness/smart_billions.sol#414)
	- wallets[owner].balance += uint208(investing * 5 / 100) (dataset/bad_randomness/smart_billions.sol#417)
	- wallets[_partner].balance += uint208(investing * 5 / 100) (dataset/bad_randomness/smart_billions.sol#418)
	- wallets[msg.sender].lastDividendPeriod = uint16(dividendPeriod) (dataset/bad_randomness/smart_billions.sol#419)
	Event emitted after the call(s):
	- LogInvestment(msg.sender,_partner,investing) (dataset/bad_randomness/smart_billions.sol#430)
	- Transfer(address(0),msg.sender,senderBalance) (dataset/bad_randomness/smart_billions.sol#427)
	- Transfer(address(0),owner,ownerBalance) (dataset/bad_randomness/smart_billions.sol#428)
	- Transfer(address(0),animator,animatorBalance) (dataset/bad_randomness/smart_billions.sol#429)
Reentrancy in SmartBillions.pay(uint256) (dataset/bad_randomness/smart_billions.sol#369-384):
	External calls:
	- msg.sender.transfer(_amount) (dataset/bad_randomness/smart_billions.sol#372)
	State variables written after the call(s):
	- houseKeeping() (dataset/bad_randomness/smart_billions.sol#374)
		- dividendPeriod ++ (dataset/bad_randomness/smart_billions.sol#349)
	- houseKeeping() (dataset/bad_randomness/smart_billions.sol#374)
		- dividends.push(0) (dataset/bad_randomness/smart_billions.sol#346)
	- houseKeeping() (dataset/bad_randomness/smart_billions.sol#374)
		- investStart = 0 (dataset/bad_randomness/smart_billions.sol#340)
Reentrancy in SmartBillions.playSystem(uint256,address) (dataset/bad_randomness/smart_billions.sol#633-664):
	External calls:
	- won() (dataset/bad_randomness/smart_billions.sol#634)
		- msg.sender.transfer(_amount) (dataset/bad_randomness/smart_billions.sol#372)
		- msg.sender.transfer(maxpay) (dataset/bad_randomness/smart_billions.sol#382)
	State variables written after the call(s):
	- bets[msg.sender] = Bet({value:uint192(msg.value),betHash:uint32(bethash),blockNum:uint32(hashNext)}) (dataset/bad_randomness/smart_billions.sol#659)
	- dividends[dividendPeriod] += msg.value / 20 (dataset/bad_randomness/smart_billions.sol#639)
	- hashBetSum = msg.value (dataset/bad_randomness/smart_billions.sol#648)
	- hashBetSum = msg.value (dataset/bad_randomness/smart_billions.sol#653)
	- hashBetSum += msg.value (dataset/bad_randomness/smart_billions.sol#656)
	- putHash() (dataset/bad_randomness/smart_billions.sol#662)
		- hashLast = lastb + 10 (dataset/bad_randomness/smart_billions.sol#754)
	- hashNext = block.number + 3 (dataset/bad_randomness/smart_billions.sol#647)
	- hashNext ++ (dataset/bad_randomness/smart_billions.sol#652)
	- putHash() (dataset/bad_randomness/smart_billions.sol#662)
		- hashes[delta % hashesSize] = calcHashes(uint32(lastb),uint32(delta)) (dataset/bad_randomness/smart_billions.sol#753)
	- walletBalance += fee (dataset/bad_randomness/smart_billions.sol#643)
	- wallets[_partner].balance += uint208(fee) (dataset/bad_randomness/smart_billions.sol#644)
	Event emitted after the call(s):
	- LogBet(msg.sender,uint256(bethash),hashNext,msg.value) (dataset/bad_randomness/smart_billions.sol#660)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

SmartBillions.betPrize(SmartBillions.Bet,uint24) (dataset/bad_randomness/smart_billions.sol#482-508) uses literals with too many digits:
	- (uint256(_player.value) * 7000000) (dataset/bad_randomness/smart_billions.sol#493)
SmartBillions.betPrize(SmartBillions.Bet,uint24) (dataset/bad_randomness/smart_billions.sol#482-508) uses literals with too many digits:
	- (hit & 0xF00000) == 0 (dataset/bad_randomness/smart_billions.sol#485-491)
SmartBillions.betOf(address) (dataset/bad_randomness/smart_billions.sol#513-535) uses literals with too many digits:
	- hash == 0x1000000 (dataset/bad_randomness/smart_billions.sol#527)
SmartBillions.won() (dataset/bad_randomness/smart_billions.sol#540-591) uses literals with too many digits:
	- hash == 0x1000000 (dataset/bad_randomness/smart_billions.sol#566)
SmartBillions.getHash(uint256) (dataset/bad_randomness/smart_billions.sol#722-730) uses literals with too many digits:
	- (0x1000000) (dataset/bad_randomness/smart_billions.sol#726)
SmartBillions.slitherConstructorVariables() (dataset/bad_randomness/smart_billions.sol#118-771) uses literals with too many digits:
	- investBalanceMax = 200000000000000000000000 (dataset/bad_randomness/smart_billions.sol#144)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Loop condition n < hashes.length (dataset/bad_randomness/smart_billions.sol#681) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

SmartBillions.investBalanceMax (dataset/bad_randomness/smart_billions.sol#144) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/bad_randomness/smart_billions.sol analyzed (6 contracts with 93 detectors), 79 result(s) found
Switched global version to 0.4.15
generating... report/denial_of_service/auction.sol.json
'solc --version' running
'solc dataset/denial_of_service/auction.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/denial_of_service' running

Pragma version^0.4.15 (dataset/denial_of_service/auction.sol#7) allows old versions
solc-0.4.15 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in DosAuction.bid() (dataset/denial_of_service/auction.sol#15-28):
	External calls:
	- require(bool)(currentFrontrunner.send(currentBid)) (dataset/denial_of_service/auction.sol#23)
	State variables written after the call(s):
	- currentBid = msg.value (dataset/denial_of_service/auction.sol#27)
	- currentFrontrunner = msg.sender (dataset/denial_of_service/auction.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/denial_of_service/auction.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.25
generating... report/denial_of_service/dos_address.sol.json
'solc --version' running
'solc dataset/denial_of_service/dos_address.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/denial_of_service' running

DosGas (dataset/denial_of_service/dos_address.sol#9-36) contract sets array length with a user-controlled value:
	- creditorAddresses.push(msg.sender) (dataset/denial_of_service/dos_address.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Pragma version^0.4.25 (dataset/denial_of_service/dos_address.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/denial_of_service/dos_address.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.25
generating... report/denial_of_service/dos_number.sol.json
'solc --version' running
'solc dataset/denial_of_service/dos_number.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/denial_of_service' running

DosNumber.insertNnumbers(uint256,uint256) (dataset/denial_of_service/dos_number.sol#14-24) has costly operations inside a loop:
	- array[numElements ++] = value (dataset/denial_of_service/dos_number.sol#22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

Pragma version^0.4.25 (dataset/denial_of_service/dos_number.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/denial_of_service/dos_number.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.25
generating... report/denial_of_service/dos_simple.sol.json
'solc --version' running
'solc dataset/denial_of_service/dos_simple.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/denial_of_service' running

Pragma version^0.4.25 (dataset/denial_of_service/dos_simple.sol#8) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/denial_of_service/dos_simple.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.0
generating... report/denial_of_service/list_dos.sol.json
'solc --version' running
'solc dataset/denial_of_service/list_dos.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/denial_of_service/list_dos.sol:
dataset/denial_of_service/list_dos.sol:37:14: Warning: Return value of low-level calls not used.
             msg.sender.send(amount);
             ^---------------------^
dataset/denial_of_service/list_dos.sol:39:14: Warning: Return value of low-level calls not used.
             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);
             ^-------------------------------------------------------------------^
dataset/denial_of_service/list_dos.sol:40:14: Warning: Return value of low-level calls not used.
             corruptElite.send(this.balance);
             ^-----------------------------^
dataset/denial_of_service/list_dos.sol:62:18: Warning: Return value of low-level calls not used.
                 corruptElite.send(amount * 5/100);
                 ^-------------------------------^
dataset/denial_of_service/list_dos.sol:70:22: Warning: Return value of low-level calls not used.
                     buddy.send(amount * 5/100);
                     ^------------------------^
dataset/denial_of_service/list_dos.sol:75:22: Warning: Return value of low-level calls not used.
                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);
                     ^---------------------------------------------------------------------------------^
dataset/denial_of_service/list_dos.sol:82:18: Warning: Return value of low-level calls not used.
                 msg.sender.send(amount);
                 ^---------------------^


Government () contract sets array length with a user-controlled value:
	- creditorAmounts.push(amount * 110 / 100) ()
Government () contract sets array length with a user-controlled value:
	- creditorAddresses.push(msg.sender) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Government.lendGovernmentMoney(address) () ignores return value by msg.sender.send(amount) ()
Government.lendGovernmentMoney(address) () ignores return value by creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash) ()
Government.lendGovernmentMoney(address) () ignores return value by corruptElite.send(this.balance) ()
Government.lendGovernmentMoney(address) () ignores return value by corruptElite.send(amount * 5 / 100) ()
Government.lendGovernmentMoney(address) () ignores return value by buddy.send(amount * 5 / 100) ()
Government.lendGovernmentMoney(address) () ignores return value by creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Government.inheritToNextGeneration(address).nextGeneration () lacks a zero-check on :
		- corruptElite = nextGeneration ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Government.lendGovernmentMoney(address) () uses timestamp for comparisons
	Dangerous comparisons:
	- lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Variable Government.TWELVE_HOURS () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in Government.lendGovernmentMoney(address) ():
	External calls:
	- msg.sender.send(amount) ()
	- creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash) ()
	- corruptElite.send(this.balance) ()
	State variables written after the call(s):
	- creditorAddresses = new address[](0) ()
	- creditorAmounts = new uint256[](0) ()
	- lastCreditorPayedOut = 0 ()
	- lastTimeOfNewCredit = block.timestamp ()
	- profitFromCrash = 0 ()
	- round += 1 ()
Reentrancy in Government.lendGovernmentMoney(address) ():
	External calls:
	- corruptElite.send(amount * 5 / 100) ()
	State variables written after the call(s):
	- profitFromCrash += amount * 5 / 100 ()
Reentrancy in Government.lendGovernmentMoney(address) ():
	External calls:
	- corruptElite.send(amount * 5 / 100) ()
	- buddy.send(amount * 5 / 100) ()
	State variables written after the call(s):
	- buddies[msg.sender] += amount * 110 / 100 ()
Reentrancy in Government.lendGovernmentMoney(address) ():
	External calls:
	- corruptElite.send(amount * 5 / 100) ()
	- buddy.send(amount * 5 / 100) ()
	- creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]) ()
	State variables written after the call(s):
	- buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut] ()
	- lastCreditorPayedOut += 1 ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Loop condition i < creditorAmounts.length () should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

Government.TWELVE_HOURS () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/denial_of_service/list_dos.sol analyzed (1 contracts with 93 detectors), 19 result(s) found
Switched global version to 0.4.24
generating... report/denial_of_service/send_loop.sol.json
'solc --version' running
'solc dataset/denial_of_service/send_loop.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/denial_of_service' running
Compilation warnings/errors on dataset/denial_of_service/send_loop.sol:
dataset/denial_of_service/send_loop.sol:17:30: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x79B483371E87d664cd39491b5f06250165e4b185'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        refundAddresses.push(0x79B483371E87d664cd39491b5F06250165e4b185);
                             ^----------------------------------------^
dataset/denial_of_service/send_loop.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    constructor() {
    ^ (Relevant source part starts here and spans across multiple lines).


Refunder.refunds (dataset/denial_of_service/send_loop.sol#13) is never initialized. It is used in:
	- Refunder.refundAll() (dataset/denial_of_service/send_loop.sol#21-26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

Refunder.refundAll() (dataset/denial_of_service/send_loop.sol#21-26) has external calls inside a loop: require(bool)(refundAddresses[x].send(refunds[refundAddresses[x]])) (dataset/denial_of_service/send_loop.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version0.4.24 (dataset/denial_of_service/send_loop.sol#8) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Loop condition x < refundAddresses.length (dataset/denial_of_service/send_loop.sol#22) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length
dataset/denial_of_service/send_loop.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.24
generating... report/front_running/ERC20.sol.json
'solc --version' running
'solc dataset/front_running/ERC20.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/front_running' running
Compilation warnings/errors on dataset/front_running/ERC20.sol:
dataset/front_running/ERC20.sol:86:3: Warning: No visibility specified. Defaulting to "public". 
  constructor(uint totalSupply){
  ^ (Relevant source part starts here and spans across multiple lines).


SafeMath.div(uint256,uint256) (dataset/front_running/ERC20.sol#35-41) is never used and should be removed
SafeMath.mod(uint256,uint256) (dataset/front_running/ERC20.sol#67-70) is never used and should be removed
SafeMath.mul(uint256,uint256) (dataset/front_running/ERC20.sol#18-30) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.24 (dataset/front_running/ERC20.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

ERC20._totalSupply (dataset/front_running/ERC20.sol#84) is never used in ERC20 (dataset/front_running/ERC20.sol#74-130)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

ERC20._totalSupply (dataset/front_running/ERC20.sol#84) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/front_running/ERC20.sol analyzed (2 contracts with 93 detectors), 7 result(s) found
Switched global version to 0.4.16
generating... report/front_running/eth_tx_order_dependence_minimal.sol.json
'solc --version' running
'solc dataset/front_running/eth_tx_order_dependence_minimal.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/front_running' running

EthTxOrderDependenceMinimal.setReward() (dataset/front_running/eth_tx_order_dependence_minimal.sol#18-25) should emit an event for: 
	- reward = msg.value (dataset/front_running/eth_tx_order_dependence_minimal.sol#24) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Pragma version^0.4.16 (dataset/front_running/eth_tx_order_dependence_minimal.sol#7) allows old versions
solc-0.4.16 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in EthTxOrderDependenceMinimal.claimReward(uint256) (dataset/front_running/eth_tx_order_dependence_minimal.sol#27-33):
	External calls:
	- msg.sender.transfer(reward) (dataset/front_running/eth_tx_order_dependence_minimal.sol#31)
	State variables written after the call(s):
	- claimed = true (dataset/front_running/eth_tx_order_dependence_minimal.sol#32)
Reentrancy in EthTxOrderDependenceMinimal.setReward() (dataset/front_running/eth_tx_order_dependence_minimal.sol#18-25):
	External calls:
	- owner.transfer(reward) (dataset/front_running/eth_tx_order_dependence_minimal.sol#23)
	State variables written after the call(s):
	- reward = msg.value (dataset/front_running/eth_tx_order_dependence_minimal.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/front_running/eth_tx_order_dependence_minimal.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.22
generating... report/front_running/FindThisHash.sol.json
'solc --version' running
'solc dataset/front_running/FindThisHash.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/front_running' running
Compilation warnings/errors on dataset/front_running/FindThisHash.sol:
dataset/front_running/FindThisHash.sol:17:25: Warning: "sha3" has been deprecated in favour of "keccak256"
        require(hash == sha3(solution));
                        ^------------^


FindThisHash.solve(string) (dataset/front_running/FindThisHash.sol#14-19) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000000) (dataset/front_running/FindThisHash.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Deprecated standard detected require(bool)(hash == sha3()(solution)) (dataset/front_running/FindThisHash.sol#17):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.22 (dataset/front_running/FindThisHash.sol#7) is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
solc-0.4.22 is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

solve(string) should be declared external:
	- FindThisHash.solve(string) (dataset/front_running/FindThisHash.sol#14-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/front_running/FindThisHash.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Installing solc '0.4.2'...
Version '0.4.2' installed.
Switched global version to 0.4.2
generating... report/front_running/odds_and_evens.sol.json
'solc --version' running
'solc dataset/front_running/odds_and_evens.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

OddsAndEvens.andTheWinnerIs() () sends eth to arbitrary user
	Dangerous calls:
	- res = players[0].addr.send(1800000000000000000) ()
	- res = players[1].addr.send(1800000000000000000) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.2 () allows old versions
solc-0.4.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in OddsAndEvens.andTheWinnerIs() ():
	External calls:
	- res = players[0].addr.send(1800000000000000000) ()
	- res = players[1].addr.send(1800000000000000000) ()
	State variables written after the call(s):
	- delete players ()
	- tot = 0 ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/front_running/odds_and_evens.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.19
generating... report/other/crypto_roulette.sol.json
'solc --version' running
'solc dataset/other/crypto_roulette.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/other' running
Compilation warnings/errors on dataset/other/crypto_roulette.sol:
dataset/other/crypto_roulette.sol:40:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Game game; //Uninitialized storage pointer
        ^-------^
dataset/other/crypto_roulette.sol:34:30: Warning: "sha3" has been deprecated in favour of "keccak256"
        secretNumber = uint8(sha3(now, block.blockhash(block.number-1))) % 20 + 1;
                             ^----------------------------------------^
dataset/other/crypto_roulette.sol:40:9: Warning: Uninitialized storage pointer. Did you mean '<type> memory game'?
        Game game; //Uninitialized storage pointer
        ^-------^
dataset/other/crypto_roulette.sol:56:13: Warning: "suicide" has been deprecated in favour of "selfdestruct"
            suicide(msg.sender);
            ^-----------------^


CryptoRoulette (dataset/other/crypto_roulette.sol#14-61) contract sets array length with a user-controlled value:
	- gamesPlayed.push(game) (dataset/other/crypto_roulette.sol#43)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

CryptoRoulette.shuffle() (dataset/other/crypto_roulette.sol#32-35) uses a weak PRNG: "secretNumber = uint8(sha3()(now,block.blockhash(block.number - 1))) % 20 + 1 (dataset/other/crypto_roulette.sol#34)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

CryptoRoulette.play(uint256).game (dataset/other/crypto_roulette.sol#40) is a storage variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-storage-variables

CryptoRoulette.play(uint256) (dataset/other/crypto_roulette.sol#37-52) uses a dangerous strict equality:
	- number == secretNumber (dataset/other/crypto_roulette.sol#45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

CryptoRoulette.play(uint256) (dataset/other/crypto_roulette.sol#37-52) uses timestamp for comparisons
	Dangerous comparisons:
	- number == secretNumber (dataset/other/crypto_roulette.sol#45)
CryptoRoulette.kill() (dataset/other/crypto_roulette.sol#54-58) uses timestamp for comparisons
	Dangerous comparisons:
	- msg.sender == ownerAddr && now > lastPlayed + 86400 (dataset/other/crypto_roulette.sol#55)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected secretNumber = uint8(sha3()(now,block.blockhash(block.number - 1))) % 20 + 1 (dataset/other/crypto_roulette.sol#34):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected suicide(address)(msg.sender) (dataset/other/crypto_roulette.sol#56):
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (dataset/other/crypto_roulette.sol#5) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in CryptoRoulette.play(uint256) (dataset/other/crypto_roulette.sol#37-52):
	External calls:
	- msg.sender.transfer(this.balance) (dataset/other/crypto_roulette.sol#47)
	State variables written after the call(s):
	- lastPlayed = now (dataset/other/crypto_roulette.sol#51)
	- shuffle() (dataset/other/crypto_roulette.sol#50)
		- secretNumber = uint8(sha3()(now,block.blockhash(block.number - 1))) % 20 + 1 (dataset/other/crypto_roulette.sol#34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

CryptoRoulette.betPrice (dataset/other/crypto_roulette.sol#18) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/other/crypto_roulette.sol analyzed (1 contracts with 93 detectors), 12 result(s) found
Switched global version to 0.4.15
generating... report/other/name_registrar.sol.json
'solc --version' running
'solc dataset/other/name_registrar.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/other' running
Compilation warnings/errors on dataset/other/name_registrar.sol:
dataset/other/name_registrar.sol:23:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        NameRecord newRecord;
        ^------------------^
dataset/other/name_registrar.sol:23:9: Warning: Uninitialized storage pointer. Did you mean '<type> memory newRecord'?
        NameRecord newRecord;
        ^------------------^


NameRegistrar.register(bytes32,address).newRecord (dataset/other/name_registrar.sol#23) is a storage variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-storage-variables

Pragma version^0.4.15 (dataset/other/name_registrar.sol#7) allows old versions
solc-0.4.15 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter NameRegistrar.register(bytes32,address)._name (dataset/other/name_registrar.sol#20) is not in mixedCase
Parameter NameRegistrar.register(bytes32,address)._mappedAddress (dataset/other/name_registrar.sol#20) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

NameRegistrar.unlocked (dataset/other/name_registrar.sol#10) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/other/name_registrar.sol analyzed (1 contracts with 93 detectors), 6 result(s) found
Switched global version to 0.4.19
generating... report/other/open_address_lottery.sol.json
'solc --version' running
'solc dataset/other/open_address_lottery.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/other' running
Compilation warnings/errors on dataset/other/open_address_lottery.sol:
dataset/other/open_address_lottery.sol:41:5: Warning: No visibility specified. Defaulting to "public".
    function OpenAddressLottery() {
    ^
Spanning multiple lines.
dataset/other/open_address_lottery.sol:46:5: Warning: No visibility specified. Defaulting to "public".
    function participate() payable {
    ^
Spanning multiple lines.
dataset/other/open_address_lottery.sol:67:5: Warning: No visibility specified. Defaulting to "public".
    function luckyNumberOfAddress(address addr) constant returns(uint n){
    ^
Spanning multiple lines.
dataset/other/open_address_lottery.sol:82:5: Warning: No visibility specified. Defaulting to "public".
    function kill() {
    ^
Spanning multiple lines.
dataset/other/open_address_lottery.sol:88:5: Warning: No visibility specified. Defaulting to "public".
    function forceReseed() { //reseed initiated by the owner - for testing purposes
    ^
Spanning multiple lines.
dataset/other/open_address_lottery.sol:100:5: Warning: No visibility specified. Defaulting to "public".
    function () payable { //if someone sends money without any function call, just assume he wanted to participate
    ^
Spanning multiple lines.
dataset/other/open_address_lottery.sol:91:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        SeedComponents s;
        ^--------------^
dataset/other/open_address_lottery.sol:91:9: Warning: Uninitialized storage pointer. Did you mean '<type> memory s'?
        SeedComponents s;
        ^--------------^


OpenAddressLottery.luckyNumberOfAddress(address) (dataset/other/open_address_lottery.sol#67-70) uses a weak PRNG: "n = uint256(keccak256()(uint256(addr),secretSeed)[0]) % 8 (dataset/other/open_address_lottery.sol#69)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

OpenAddressLottery.forceReseed().s (dataset/other/open_address_lottery.sol#91) is a storage variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-storage-variables

OpenAddressLottery.participate() (dataset/other/open_address_lottery.sol#46-65) compares to a boolean constant:
	-require(bool)(winner[msg.sender] == false) (dataset/other/open_address_lottery.sol#51)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

Deprecated standard detected s.component2 = uint256(block.blockhash(block.number - 1)) (dataset/other/open_address_lottery.sol#93):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (dataset/other/open_address_lottery.sol#6) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Variable OpenAddressLottery.LuckyNumber (dataset/other/open_address_lottery.sol#37) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in OpenAddressLottery.participate() (dataset/other/open_address_lottery.sol#46-65):
	External calls:
	- msg.sender.transfer(win) (dataset/other/open_address_lottery.sol#60)
	State variables written after the call(s):
	- reseed(SeedComponents(uint256(block.coinbase),block.difficulty,block.gaslimit,block.timestamp)) (dataset/other/open_address_lottery.sol#64)
		- lastReseed = block.number (dataset/other/open_address_lottery.sol#79)
	- reseed(SeedComponents(uint256(block.coinbase),block.difficulty,block.gaslimit,block.timestamp)) (dataset/other/open_address_lottery.sol#64)
		- secretSeed = uint256(keccak256()(components.component1,components.component2,components.component3,components.component4)) (dataset/other/open_address_lottery.sol#73-78)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

OpenAddressLottery.LuckyNumber (dataset/other/open_address_lottery.sol#37) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/other/open_address_lottery.sol analyzed (1 contracts with 93 detectors), 9 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol.json
'solc --version' running
'solc dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

LogFile (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#73-97) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#94)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in PERSONAL_BANK.Collect(uint256) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#47-60):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#54)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#56)
	PERSONAL_BANK.balances (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#11) can be used in cross function reentrancies:
	- PERSONAL_BANK.Collect(uint256) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#47-60)
	- PERSONAL_BANK.Deposit() (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#39-45)
	- PERSONAL_BANK.balances (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in PERSONAL_BANK.Collect(uint256) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#47-60):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#54)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract PERSONAL_BANK (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#9-69) is not in CapWords
Function PERSONAL_BANK.SetMinSum(uint256) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#19-24) is not in mixedCase
Parameter PERSONAL_BANK.SetMinSum(uint256)._val (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#19) is not in mixedCase
Function PERSONAL_BANK.SetLogFile(address) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#26-31) is not in mixedCase
Parameter PERSONAL_BANK.SetLogFile(address)._log (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#26) is not in mixedCase
Function PERSONAL_BANK.Initialized() (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#33-37) is not in mixedCase
Function PERSONAL_BANK.Deposit() (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#39-45) is not in mixedCase
Function PERSONAL_BANK.Collect(uint256) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#47-60) is not in mixedCase
Parameter PERSONAL_BANK.Collect(uint256)._am (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#47) is not in mixedCase
Variable PERSONAL_BANK.MinSum (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#13) is not in mixedCase
Variable PERSONAL_BANK.Log (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#15) is not in mixedCase
Function LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#87-95) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#87) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#87) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#87) is not in mixedCase
Variable LogFile.History (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#83) is not in mixedCase
Variable LogFile.LastMsg (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#85) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

AddMessage(address,uint256,string) should be declared external:
	- LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol#87-95)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol analyzed (2 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol.json
'solc --version' running
'solc dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol:
dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol:17:5: Warning: No visibility specified. Defaulting to "public".
    function PrivateBank(address _log)
    ^
Spanning multiple lines.
dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol:33:5: Warning: No visibility specified. Defaulting to "public".
    function CashOut(uint _am)
    ^
Spanning multiple lines.


Log (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#50-75) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#72)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in PrivateBank.CashOut(uint256) (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#33-44):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#38)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#40)
	PrivateBank.balances (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#11) can be used in cross function reentrancies:
	- PrivateBank.CashOut(uint256) (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#33-44)
	- PrivateBank.Deposit() (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#22-31)
	- PrivateBank.balances (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in PrivateBank.CashOut(uint256) (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#33-44):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function PrivateBank.Deposit() (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#22-31) is not in mixedCase
Function PrivateBank.CashOut(uint256) (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#33-44) is not in mixedCase
Parameter PrivateBank.CashOut(uint256)._am (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#33) is not in mixedCase
Variable PrivateBank.MinDeposit (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#13) is not in mixedCase
Variable PrivateBank.TransferLog (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#15) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#65-73) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#65) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#65) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#65) is not in mixedCase
Variable Log.History (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#61) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#63) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

PrivateBank.MinDeposit (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#13) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#65-73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol analyzed (2 contracts with 93 detectors), 18 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol.json
'solc --version' running
'solc dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

LogFile (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#74-98) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#95)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in ACCURAL_DEPOSIT.Collect(uint256) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#48-61):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#55)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#57)
	ACCURAL_DEPOSIT.balances (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#12) can be used in cross function reentrancies:
	- ACCURAL_DEPOSIT.Collect(uint256) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#48-61)
	- ACCURAL_DEPOSIT.Deposit() (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#40-46)
	- ACCURAL_DEPOSIT.balances (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#12)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#8) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in ACCURAL_DEPOSIT.Collect(uint256) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#48-61):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#55)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract ACCURAL_DEPOSIT (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#10-70) is not in CapWords
Function ACCURAL_DEPOSIT.SetMinSum(uint256) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#20-25) is not in mixedCase
Parameter ACCURAL_DEPOSIT.SetMinSum(uint256)._val (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#20) is not in mixedCase
Function ACCURAL_DEPOSIT.SetLogFile(address) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#27-32) is not in mixedCase
Parameter ACCURAL_DEPOSIT.SetLogFile(address)._log (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#27) is not in mixedCase
Function ACCURAL_DEPOSIT.Initialized() (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#34-38) is not in mixedCase
Function ACCURAL_DEPOSIT.Deposit() (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#40-46) is not in mixedCase
Function ACCURAL_DEPOSIT.Collect(uint256) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#48-61) is not in mixedCase
Parameter ACCURAL_DEPOSIT.Collect(uint256)._am (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#48) is not in mixedCase
Variable ACCURAL_DEPOSIT.MinSum (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#14) is not in mixedCase
Variable ACCURAL_DEPOSIT.Log (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#16) is not in mixedCase
Function LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#88-96) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#88) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#88) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#88) is not in mixedCase
Variable LogFile.History (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#84) is not in mixedCase
Variable LogFile.LastMsg (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#86) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

AddMessage(address,uint256,string) should be declared external:
	- LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol#88-96)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol analyzed (2 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol.json
'solc --version' running
'solc dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

LogFile (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#73-97) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#94)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in PRIVATE_ETH_CELL.Collect(uint256) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#47-60):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#54)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#56)
	PRIVATE_ETH_CELL.balances (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#11) can be used in cross function reentrancies:
	- PRIVATE_ETH_CELL.Collect(uint256) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#47-60)
	- PRIVATE_ETH_CELL.Deposit() (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#39-45)
	- PRIVATE_ETH_CELL.balances (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in PRIVATE_ETH_CELL.Collect(uint256) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#47-60):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#54)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract PRIVATE_ETH_CELL (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#9-69) is not in CapWords
Function PRIVATE_ETH_CELL.SetMinSum(uint256) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#19-24) is not in mixedCase
Parameter PRIVATE_ETH_CELL.SetMinSum(uint256)._val (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#19) is not in mixedCase
Function PRIVATE_ETH_CELL.SetLogFile(address) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#26-31) is not in mixedCase
Parameter PRIVATE_ETH_CELL.SetLogFile(address)._log (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#26) is not in mixedCase
Function PRIVATE_ETH_CELL.Initialized() (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#33-37) is not in mixedCase
Function PRIVATE_ETH_CELL.Deposit() (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#39-45) is not in mixedCase
Function PRIVATE_ETH_CELL.Collect(uint256) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#47-60) is not in mixedCase
Parameter PRIVATE_ETH_CELL.Collect(uint256)._am (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#47) is not in mixedCase
Variable PRIVATE_ETH_CELL.MinSum (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#13) is not in mixedCase
Variable PRIVATE_ETH_CELL.Log (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#15) is not in mixedCase
Function LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#87-95) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#87) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#87) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#87) is not in mixedCase
Variable LogFile.History (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#83) is not in mixedCase
Variable LogFile.LastMsg (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#85) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

AddMessage(address,uint256,string) should be declared external:
	- LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol#87-95)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol analyzed (2 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol.json
'solc --version' running
'solc dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol:
dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol:22:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(intitalized)throw;
                       ^---^
dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol:29:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(intitalized)throw;
                       ^---^


LogFile (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#73-97) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#94)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in BANK_SAFE.Collect(uint256) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#47-60):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#54)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#56)
	BANK_SAFE.balances (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#11) can be used in cross function reentrancies:
	- BANK_SAFE.Collect(uint256) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#47-60)
	- BANK_SAFE.Deposit() (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#39-45)
	- BANK_SAFE.balances (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Deprecated standard detected THROW (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#22):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#29):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in BANK_SAFE.Collect(uint256) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#47-60):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#54)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract BANK_SAFE (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#9-69) is not in CapWords
Function BANK_SAFE.SetMinSum(uint256) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#19-24) is not in mixedCase
Parameter BANK_SAFE.SetMinSum(uint256)._val (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#19) is not in mixedCase
Function BANK_SAFE.SetLogFile(address) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#26-31) is not in mixedCase
Parameter BANK_SAFE.SetLogFile(address)._log (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#26) is not in mixedCase
Function BANK_SAFE.Initialized() (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#33-37) is not in mixedCase
Function BANK_SAFE.Deposit() (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#39-45) is not in mixedCase
Function BANK_SAFE.Collect(uint256) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#47-60) is not in mixedCase
Parameter BANK_SAFE.Collect(uint256)._am (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#47) is not in mixedCase
Variable BANK_SAFE.MinSum (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#13) is not in mixedCase
Variable BANK_SAFE.Log (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#15) is not in mixedCase
Function LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#87-95) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#87) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#87) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#87) is not in mixedCase
Variable LogFile.History (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#83) is not in mixedCase
Variable LogFile.LastMsg (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#85) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

AddMessage(address,uint256,string) should be declared external:
	- LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol#87-95)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x561eac93c92360949ab1f1403323e6db345cbf31.sol analyzed (2 contracts with 93 detectors), 25 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol.json
'solc --version' running
'solc dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:
dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:60:5: Warning: No visibility specified. Defaulting to "public".
    function()
    ^
Spanning multiple lines.
dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:66:5: Warning: No visibility specified. Defaulting to "public".
    function Deposit() 
    ^
Spanning multiple lines.
dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:43:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
                          ^-------------------------------^
dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:43:9: Warning: Return value of low-level calls not used.
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
        ^-------------------------------------------------------------^


Reentrancy in TokenBank.WithdrawToHolder(address,uint256) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#86-99):
	External calls:
	- _addr.call.value(_wei)() (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#94)
	State variables written after the call(s):
	- Holders[_addr] -= _wei (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#96)
	TokenBank.Holders (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#50) can be used in cross function reentrancies:
	- TokenBank.Deposit() (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#66-73)
	- TokenBank.Holders (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#50)
	- TokenBank.WitdrawTokenToHolder(address,address,uint256) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#75-84)
	- TokenBank.WithdrawToHolder(address,uint256) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#86-99)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Token.owner (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#38) shadows:
	- Ownable.owner (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#12)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

Token.WithdrawToken(address,uint256,address) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39-44) ignores return value by token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#43)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Token.WithdrawToken(address,uint256,address).token (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#43)
Token.WithdrawToken(address,uint256,address).to (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#43)
Ownable.changeOwner(address).addr (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#14) lacks a zero-check on :
		- newOwner = addr (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Ownable.onlyOwner() (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#30-33) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Deprecated standard detected token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#43):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Token.WithdrawToken(address,uint256,address) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39-44):
	- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#43)
Low level call in TokenBank.WithdrawToHolder(address,uint256) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#86-99):
	- _addr.call.value(_wei)() (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#94)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Token.WithdrawToken(address,uint256,address) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39-44) is not in mixedCase
Function TokenBank.Deposit() (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#66-73) is not in mixedCase
Function TokenBank.WitdrawTokenToHolder(address,address,uint256) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#75-84) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._to (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#75) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._token (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#75) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._amount (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#75) is not in mixedCase
Function TokenBank.WithdrawToHolder(address,uint256) (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#86-99) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._addr (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#86) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._wei (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#86) is not in mixedCase
Variable TokenBank.MinDeposit (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#49) is not in mixedCase
Variable TokenBank.Holders (dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#50) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/reentrancy/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol analyzed (3 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.25
generating... report/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol.json
'solc --version' running
'solc dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol:
dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol:15:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol:25:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol:56:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function U_BANK(address log) public{
    ^ (Relevant source part starts here and spans across multiple lines).


Log (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#62-86) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in U_BANK.Collect(uint256) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#21-35):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#29)
	State variables written after the call(s):
	- acc.balance -= _am (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#31)
	U_BANK.Acc (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#50) can be used in cross function reentrancies:
	- U_BANK.Acc (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#50)
	- U_BANK.Collect(uint256) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#21-35)
	- U_BANK.Put(uint256) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#11-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

U_BANK.Put(uint256) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#11-19) uses timestamp for comparisons
	Dangerous comparisons:
	- _unlockTime > now (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#17)
U_BANK.Collect(uint256) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#21-35) uses timestamp for comparisons
	Dangerous comparisons:
	- acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.25 (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in U_BANK.Collect(uint256) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#21-35):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract U_BANK (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#9-59) is not in CapWords
Function U_BANK.Put(uint256) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#11-19) is not in mixedCase
Parameter U_BANK.Put(uint256)._unlockTime (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#11) is not in mixedCase
Function U_BANK.Collect(uint256) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#21-35) is not in mixedCase
Parameter U_BANK.Collect(uint256)._am (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#21) is not in mixedCase
Variable U_BANK.Acc (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#50) is not in mixedCase
Variable U_BANK.LogFile (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#52) is not in mixedCase
Variable U_BANK.MinSum (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#54) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#76-84) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#76) is not in mixedCase
Variable Log.History (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#72) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#74) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

U_BANK.MinSum (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#54) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol#76-84)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol analyzed (2 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol.json
'solc --version' running
'solc dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol:
dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol:23:5: Warning: No visibility specified. Defaulting to "public".
    function PrivateDeposit()
    ^
Spanning multiple lines.
dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol:31:5: Warning: No visibility specified. Defaulting to "public".
    function setLog(address _lib) onlyOwner
    ^
Spanning multiple lines.
dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol:47:5: Warning: No visibility specified. Defaulting to "public".
    function CashOut(uint _am)
    ^
Spanning multiple lines.


Log (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#64-89) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#86)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in PrivateDeposit.CashOut(uint256) (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#47-58):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#52)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#54)
	PrivateDeposit.balances (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#11) can be used in cross function reentrancies:
	- PrivateDeposit.CashOut(uint256) (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#47-58)
	- PrivateDeposit.Deposit() (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#36-45)
	- PrivateDeposit.balances (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in PrivateDeposit.CashOut(uint256) (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#47-58):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#52)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter PrivateDeposit.setLog(address)._lib (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#31) is not in mixedCase
Function PrivateDeposit.Deposit() (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#36-45) is not in mixedCase
Function PrivateDeposit.CashOut(uint256) (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#47-58) is not in mixedCase
Parameter PrivateDeposit.CashOut(uint256)._am (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#47) is not in mixedCase
Variable PrivateDeposit.MinDeposit (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#13) is not in mixedCase
Variable PrivateDeposit.TransferLog (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#16) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#79-87) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#79) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#79) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#79) is not in mixedCase
Variable Log.History (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#75) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#77) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

PrivateDeposit.MinDeposit (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#13) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol#79-87)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol analyzed (2 contracts with 93 detectors), 19 result(s) found
Switched global version to 0.4.25
generating... report/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol.json
'solc --version' running
'solc dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol:
dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol:15:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol:25:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol:56:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function W_WALLET(address log) public{
    ^ (Relevant source part starts here and spans across multiple lines).


Log (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#62-86) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in W_WALLET.Collect(uint256) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#21-35):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#29)
	State variables written after the call(s):
	- acc.balance -= _am (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#31)
	W_WALLET.Acc (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#50) can be used in cross function reentrancies:
	- W_WALLET.Acc (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#50)
	- W_WALLET.Collect(uint256) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#21-35)
	- W_WALLET.Put(uint256) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#11-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

W_WALLET.Put(uint256) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#11-19) uses timestamp for comparisons
	Dangerous comparisons:
	- _unlockTime > now (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#17)
W_WALLET.Collect(uint256) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#21-35) uses timestamp for comparisons
	Dangerous comparisons:
	- acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.25 (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in W_WALLET.Collect(uint256) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#21-35):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract W_WALLET (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#9-59) is not in CapWords
Function W_WALLET.Put(uint256) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#11-19) is not in mixedCase
Parameter W_WALLET.Put(uint256)._unlockTime (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#11) is not in mixedCase
Function W_WALLET.Collect(uint256) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#21-35) is not in mixedCase
Parameter W_WALLET.Collect(uint256)._am (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#21) is not in mixedCase
Variable W_WALLET.Acc (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#50) is not in mixedCase
Variable W_WALLET.LogFile (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#52) is not in mixedCase
Variable W_WALLET.MinSum (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#54) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#76-84) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#76) is not in mixedCase
Variable Log.History (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#72) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#74) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

W_WALLET.MinSum (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#54) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#76-84)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol analyzed (2 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol.json
'solc --version' running
'solc dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

Log (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#53-78) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#75)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in ETH_VAULT.CashOut(uint256) (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#34-47):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#41)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#43)
	ETH_VAULT.balances (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#11) can be used in cross function reentrancies:
	- ETH_VAULT.CashOut(uint256) (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#34-47)
	- ETH_VAULT.Deposit() (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#23-32)
	- ETH_VAULT.balances (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in ETH_VAULT.CashOut(uint256) (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#34-47):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#41)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract ETH_VAULT (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#9-51) is not in CapWords
Function ETH_VAULT.Deposit() (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#23-32) is not in mixedCase
Function ETH_VAULT.CashOut(uint256) (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#34-47) is not in mixedCase
Parameter ETH_VAULT.CashOut(uint256)._am (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#34) is not in mixedCase
Variable ETH_VAULT.TransferLog (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#13) is not in mixedCase
Variable ETH_VAULT.MinDeposit (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#15) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#68-76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#68) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#68) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#68) is not in mixedCase
Variable Log.History (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#64) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#66) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

ETH_VAULT.MinDeposit (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#15) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol#68-76)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x8c7777c45481dba411450c228cb692ac3d550344.sol analyzed (2 contracts with 93 detectors), 19 result(s) found
Switched global version to 0.4.25
generating... report/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol.json
'solc --version' running
'solc dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol:
dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol:15:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol:25:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol:56:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function X_WALLET(address log) public{
    ^ (Relevant source part starts here and spans across multiple lines).


Log (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#62-86) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in X_WALLET.Collect(uint256) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#21-35):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#29)
	State variables written after the call(s):
	- acc.balance -= _am (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#31)
	X_WALLET.Acc (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#50) can be used in cross function reentrancies:
	- X_WALLET.Acc (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#50)
	- X_WALLET.Collect(uint256) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#21-35)
	- X_WALLET.Put(uint256) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#11-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

X_WALLET.Put(uint256) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#11-19) uses timestamp for comparisons
	Dangerous comparisons:
	- _unlockTime > now (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#17)
X_WALLET.Collect(uint256) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#21-35) uses timestamp for comparisons
	Dangerous comparisons:
	- acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.25 (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in X_WALLET.Collect(uint256) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#21-35):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract X_WALLET (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#9-59) is not in CapWords
Function X_WALLET.Put(uint256) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#11-19) is not in mixedCase
Parameter X_WALLET.Put(uint256)._unlockTime (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#11) is not in mixedCase
Function X_WALLET.Collect(uint256) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#21-35) is not in mixedCase
Parameter X_WALLET.Collect(uint256)._am (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#21) is not in mixedCase
Variable X_WALLET.Acc (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#50) is not in mixedCase
Variable X_WALLET.LogFile (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#52) is not in mixedCase
Variable X_WALLET.MinSum (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#54) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#76-84) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#76) is not in mixedCase
Variable Log.History (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#72) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#74) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

X_WALLET.MinSum (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#54) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol#76-84)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol analyzed (2 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol.json
'solc --version' running
'solc dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

Log (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#56-81) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#78)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in ETH_FUND.CashOut(uint256) (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#37-50):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#44)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#46)
	ETH_FUND.balances (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#11) can be used in cross function reentrancies:
	- ETH_FUND.CashOut(uint256) (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#37-50)
	- ETH_FUND.Deposit() (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#25-35)
	- ETH_FUND.balances (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Reentrancy in ETH_FUND.Deposit() (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#25-35):
	External calls:
	- TransferLog.AddMessage(msg.sender,msg.value,Deposit) (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#32)
	State variables written after the call(s):
	- lastBlock = block.number (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Pragma version^0.4.19 (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in ETH_FUND.CashOut(uint256) (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#37-50):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract ETH_FUND (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#9-54) is not in CapWords
Function ETH_FUND.Deposit() (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#25-35) is not in mixedCase
Function ETH_FUND.CashOut(uint256) (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#37-50) is not in mixedCase
Parameter ETH_FUND.CashOut(uint256)._am (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#37) is not in mixedCase
Variable ETH_FUND.MinDeposit (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#13) is not in mixedCase
Variable ETH_FUND.TransferLog (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#15) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#71-79) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#71) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#71) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#71) is not in mixedCase
Variable Log.History (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#67) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#69) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

ETH_FUND.MinDeposit (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#13) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol#71-79)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol analyzed (2 contracts with 93 detectors), 20 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol.json
'solc --version' running
'solc dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol:
dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol:28:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(intitalized)throw;
                       ^---^
dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol:35:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(intitalized)throw;
                       ^---^


LogFile (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#81-105) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in PENNY_BY_PENNY.Collect(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#55-69):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#63)
	State variables written after the call(s):
	- acc.balance -= _am (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#65)
	PENNY_BY_PENNY.Acc (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#17) can be used in cross function reentrancies:
	- PENNY_BY_PENNY.Acc (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#17)
	- PENNY_BY_PENNY.Collect(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#55-69)
	- PENNY_BY_PENNY.Put(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#45-53)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

PENNY_BY_PENNY.Put(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#45-53) uses timestamp for comparisons
	Dangerous comparisons:
	- now + _lockTime > acc.unlockTime (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#51)
PENNY_BY_PENNY.Collect(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#55-69) uses timestamp for comparisons
	Dangerous comparisons:
	- acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#60)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected THROW (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#28):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#35):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in PENNY_BY_PENNY.Collect(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#55-69):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#63)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract PENNY_BY_PENNY (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#9-78) is not in CapWords
Function PENNY_BY_PENNY.SetMinSum(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#25-30) is not in mixedCase
Parameter PENNY_BY_PENNY.SetMinSum(uint256)._val (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#25) is not in mixedCase
Function PENNY_BY_PENNY.SetLogFile(address) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#32-37) is not in mixedCase
Parameter PENNY_BY_PENNY.SetLogFile(address)._log (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#32) is not in mixedCase
Function PENNY_BY_PENNY.Initialized() (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#39-43) is not in mixedCase
Function PENNY_BY_PENNY.Put(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#45-53) is not in mixedCase
Parameter PENNY_BY_PENNY.Put(uint256)._lockTime (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#45) is not in mixedCase
Function PENNY_BY_PENNY.Collect(uint256) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#55-69) is not in mixedCase
Parameter PENNY_BY_PENNY.Collect(uint256)._am (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#55) is not in mixedCase
Variable PENNY_BY_PENNY.Acc (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#17) is not in mixedCase
Variable PENNY_BY_PENNY.MinSum (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#19) is not in mixedCase
Variable PENNY_BY_PENNY.Log (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#21) is not in mixedCase
Function LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#95-103) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#95) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._val (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#95) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._data (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#95) is not in mixedCase
Variable LogFile.History (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#91) is not in mixedCase
Variable LogFile.LastMsg (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#93) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

AddMessage(address,uint256,string) should be declared external:
	- LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#95-103)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol analyzed (2 contracts with 93 detectors), 29 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol.json
'solc --version' running
'solc dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol:
dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol:22:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(intitalized)throw;
                       ^---^
dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol:29:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(intitalized)throw;
                       ^---^


LogFile (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#72-96) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#93)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in DEP_BANK.Collect(uint256) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#47-60):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#54)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#56)
	DEP_BANK.balances (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#11) can be used in cross function reentrancies:
	- DEP_BANK.Collect(uint256) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#47-60)
	- DEP_BANK.Deposit() (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#39-45)
	- DEP_BANK.balances (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Deprecated standard detected THROW (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#22):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#29):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in DEP_BANK.Collect(uint256) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#47-60):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#54)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract DEP_BANK (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#9-69) is not in CapWords
Function DEP_BANK.SetMinSum(uint256) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#19-24) is not in mixedCase
Parameter DEP_BANK.SetMinSum(uint256)._val (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#19) is not in mixedCase
Function DEP_BANK.SetLogFile(address) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#26-31) is not in mixedCase
Parameter DEP_BANK.SetLogFile(address)._log (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#26) is not in mixedCase
Function DEP_BANK.Initialized() (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#33-37) is not in mixedCase
Function DEP_BANK.Deposit() (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#39-45) is not in mixedCase
Function DEP_BANK.Collect(uint256) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#47-60) is not in mixedCase
Parameter DEP_BANK.Collect(uint256)._am (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#47) is not in mixedCase
Variable DEP_BANK.MinSum (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#13) is not in mixedCase
Variable DEP_BANK.Log (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#15) is not in mixedCase
Function LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#86-94) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#86) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._val (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#86) is not in mixedCase
Parameter LogFile.AddMessage(address,uint256,string)._data (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#86) is not in mixedCase
Variable LogFile.History (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#82) is not in mixedCase
Variable LogFile.LastMsg (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#84) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

AddMessage(address,uint256,string) should be declared external:
	- LogFile.AddMessage(address,uint256,string) (dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#86-94)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol analyzed (2 contracts with 93 detectors), 25 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol.json
'solc --version' running
'solc dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol:
dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol:17:5: Warning: No visibility specified. Defaulting to "public".
    function Private_Bank(address _log)
    ^
Spanning multiple lines.


Log (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#52-77) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#74)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in Private_Bank.CashOut(uint256) (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#33-46):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#40)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#42)
	Private_Bank.balances (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#11) can be used in cross function reentrancies:
	- Private_Bank.CashOut(uint256) (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#33-46)
	- Private_Bank.Deposit() (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#22-31)
	- Private_Bank.balances (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Private_Bank.CashOut(uint256) (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#33-46):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#40)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract Private_Bank (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#9-50) is not in CapWords
Function Private_Bank.Deposit() (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#22-31) is not in mixedCase
Function Private_Bank.CashOut(uint256) (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#33-46) is not in mixedCase
Parameter Private_Bank.CashOut(uint256)._am (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#33) is not in mixedCase
Variable Private_Bank.MinDeposit (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#13) is not in mixedCase
Variable Private_Bank.TransferLog (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#15) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#67-75) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#67) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#67) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#67) is not in mixedCase
Variable Log.History (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#63) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#65) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Private_Bank.MinDeposit (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#13) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol#67-75)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol analyzed (2 contracts with 93 detectors), 19 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol.json
'solc --version' running
'solc dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol:
dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol:17:5: Warning: No visibility specified. Defaulting to "public".
    function PrivateBank(address _lib)
    ^
Spanning multiple lines.
dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol:33:5: Warning: No visibility specified. Defaulting to "public".
    function CashOut(uint _am)
    ^
Spanning multiple lines.


Log (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#50-75) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#72)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in PrivateBank.CashOut(uint256) (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#33-44):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#38)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#40)
	PrivateBank.balances (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#11) can be used in cross function reentrancies:
	- PrivateBank.CashOut(uint256) (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#33-44)
	- PrivateBank.Deposit() (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#22-31)
	- PrivateBank.balances (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in PrivateBank.CashOut(uint256) (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#33-44):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function PrivateBank.Deposit() (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#22-31) is not in mixedCase
Function PrivateBank.CashOut(uint256) (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#33-44) is not in mixedCase
Parameter PrivateBank.CashOut(uint256)._am (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#33) is not in mixedCase
Variable PrivateBank.MinDeposit (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#13) is not in mixedCase
Variable PrivateBank.TransferLog (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#15) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#65-73) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#65) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#65) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#65) is not in mixedCase
Variable Log.History (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#61) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#63) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

PrivateBank.MinDeposit (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#13) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol#65-73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol analyzed (2 contracts with 93 detectors), 18 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol.json
'solc --version' running
'solc dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

Log (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#53-78) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#75)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in ETH_VAULT.CashOut(uint256) (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#34-47):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#41)
	State variables written after the call(s):
	- balances[msg.sender] -= _am (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#43)
	ETH_VAULT.balances (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#11) can be used in cross function reentrancies:
	- ETH_VAULT.CashOut(uint256) (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#34-47)
	- ETH_VAULT.Deposit() (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#23-32)
	- ETH_VAULT.balances (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in ETH_VAULT.CashOut(uint256) (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#34-47):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#41)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract ETH_VAULT (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#9-51) is not in CapWords
Function ETH_VAULT.Deposit() (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#23-32) is not in mixedCase
Function ETH_VAULT.CashOut(uint256) (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#34-47) is not in mixedCase
Parameter ETH_VAULT.CashOut(uint256)._am (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#34) is not in mixedCase
Variable ETH_VAULT.MinDeposit (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#13) is not in mixedCase
Variable ETH_VAULT.TransferLog (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#15) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#68-76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#68) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#68) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#68) is not in mixedCase
Variable Log.History (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#64) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#66) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

ETH_VAULT.MinDeposit (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#13) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol#68-76)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol analyzed (2 contracts with 93 detectors), 19 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol.json
'solc --version' running
'solc dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol:
dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol:28:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(intitalized)throw;
                       ^---^
dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol:35:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(intitalized)throw;
                       ^---^


Log (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#81-105) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in MONEY_BOX.Collect(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#55-69):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#63)
	State variables written after the call(s):
	- acc.balance -= _am (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#65)
	MONEY_BOX.Acc (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#17) can be used in cross function reentrancies:
	- MONEY_BOX.Acc (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#17)
	- MONEY_BOX.Collect(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#55-69)
	- MONEY_BOX.Put(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#45-53)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

MONEY_BOX.Put(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#45-53) uses timestamp for comparisons
	Dangerous comparisons:
	- now + _lockTime > acc.unlockTime (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#51)
MONEY_BOX.Collect(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#55-69) uses timestamp for comparisons
	Dangerous comparisons:
	- acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#60)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected THROW (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#28):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#35):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in MONEY_BOX.Collect(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#55-69):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#63)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract MONEY_BOX (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#9-78) is not in CapWords
Function MONEY_BOX.SetMinSum(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#25-30) is not in mixedCase
Parameter MONEY_BOX.SetMinSum(uint256)._val (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#25) is not in mixedCase
Function MONEY_BOX.SetLogFile(address) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#32-37) is not in mixedCase
Parameter MONEY_BOX.SetLogFile(address)._log (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#32) is not in mixedCase
Function MONEY_BOX.Initialized() (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#39-43) is not in mixedCase
Function MONEY_BOX.Put(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#45-53) is not in mixedCase
Parameter MONEY_BOX.Put(uint256)._lockTime (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#45) is not in mixedCase
Function MONEY_BOX.Collect(uint256) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#55-69) is not in mixedCase
Parameter MONEY_BOX.Collect(uint256)._am (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#55) is not in mixedCase
Variable MONEY_BOX.Acc (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#17) is not in mixedCase
Variable MONEY_BOX.MinSum (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#19) is not in mixedCase
Variable MONEY_BOX.LogFile (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#21) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#95-103) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#95) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#95) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#95) is not in mixedCase
Variable Log.History (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#91) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#93) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol#95-103)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol analyzed (2 contracts with 93 detectors), 29 result(s) found
Switched global version to 0.4.25
generating... report/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol.json
'solc --version' running
'solc dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol:
dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol:15:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol:25:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol:56:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function WALLET(address log) public{
    ^ (Relevant source part starts here and spans across multiple lines).


Log (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#62-86) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in WALLET.Collect(uint256) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#21-35):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#29)
	State variables written after the call(s):
	- acc.balance -= _am (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#31)
	WALLET.Acc (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#50) can be used in cross function reentrancies:
	- WALLET.Acc (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#50)
	- WALLET.Collect(uint256) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#21-35)
	- WALLET.Put(uint256) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#11-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

WALLET.Put(uint256) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#11-19) uses timestamp for comparisons
	Dangerous comparisons:
	- _unlockTime > now (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#17)
WALLET.Collect(uint256) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#21-35) uses timestamp for comparisons
	Dangerous comparisons:
	- acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.25 (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in WALLET.Collect(uint256) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#21-35):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function WALLET.Put(uint256) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#11-19) is not in mixedCase
Parameter WALLET.Put(uint256)._unlockTime (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#11) is not in mixedCase
Function WALLET.Collect(uint256) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#21-35) is not in mixedCase
Parameter WALLET.Collect(uint256)._am (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#21) is not in mixedCase
Variable WALLET.Acc (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#50) is not in mixedCase
Variable WALLET.LogFile (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#52) is not in mixedCase
Variable WALLET.MinSum (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#54) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#76-84) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#76) is not in mixedCase
Variable Log.History (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#72) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#74) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

WALLET.MinSum (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#54) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#76-84)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol analyzed (2 contracts with 93 detectors), 22 result(s) found
Switched global version to 0.4.25
generating... report/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol.json
'solc --version' running
'solc dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol:
dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol:15:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol:25:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^
dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol:56:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MY_BANK(address log) public{
    ^ (Relevant source part starts here and spans across multiple lines).


Log (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#62-86) contract sets array length with a user-controlled value:
	- History.push(LastMsg) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Reentrancy in MY_BANK.Collect(uint256) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#21-35):
	External calls:
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#29)
	State variables written after the call(s):
	- acc.balance -= _am (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#31)
	MY_BANK.Acc (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#50) can be used in cross function reentrancies:
	- MY_BANK.Acc (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#50)
	- MY_BANK.Collect(uint256) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#21-35)
	- MY_BANK.Put(uint256) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#11-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

MY_BANK.Put(uint256) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#11-19) uses timestamp for comparisons
	Dangerous comparisons:
	- _unlockTime > now (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#17)
MY_BANK.Collect(uint256) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#21-35) uses timestamp for comparisons
	Dangerous comparisons:
	- acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.25 (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in MY_BANK.Collect(uint256) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#21-35):
	- msg.sender.call.value(_am)() (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract MY_BANK (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#9-59) is not in CapWords
Function MY_BANK.Put(uint256) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#11-19) is not in mixedCase
Parameter MY_BANK.Put(uint256)._unlockTime (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#11) is not in mixedCase
Function MY_BANK.Collect(uint256) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#21-35) is not in mixedCase
Parameter MY_BANK.Collect(uint256)._am (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#21) is not in mixedCase
Variable MY_BANK.Acc (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#50) is not in mixedCase
Variable MY_BANK.LogFile (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#52) is not in mixedCase
Variable MY_BANK.MinSum (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#54) is not in mixedCase
Function Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#76-84) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._adr (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._val (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#76) is not in mixedCase
Parameter Log.AddMessage(address,uint256,string)._data (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#76) is not in mixedCase
Variable Log.History (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#72) is not in mixedCase
Variable Log.LastMsg (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#74) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

MY_BANK.MinSum (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#54) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AddMessage(address,uint256,string) should be declared external:
	- Log.AddMessage(address,uint256,string) (dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol#76-84)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol analyzed (2 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.0
generating... report/reentrancy/etherbank.sol.json
'solc --version' running
'solc dataset/reentrancy/etherbank.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

Reentrancy in EtherBank.withdrawBalance() ():
	External calls:
	- ! (msg.sender.call.value(amountToWithdraw)()) ()
	State variables written after the call(s):
	- userBalances[msg.sender] = 0 ()
	EtherBank.userBalances () can be used in cross function reentrancies:
	- EtherBank.addToBalance() ()
	- EtherBank.getBalance(address) ()
	- EtherBank.withdrawBalance() ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in EtherBank.withdrawBalance() ():
	- ! (msg.sender.call.value(amountToWithdraw)()) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/reentrancy/etherbank.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.10
generating... report/reentrancy/etherstore.sol.json
'solc --version' running
'solc dataset/reentrancy/etherstore.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

Reentrancy in EtherStore.withdrawFunds(uint256) ():
	External calls:
	- require(bool)(msg.sender.call.value(_weiToWithdraw)()) ()
	State variables written after the call(s):
	- balances[msg.sender] -= _weiToWithdraw ()
	EtherStore.balances () can be used in cross function reentrancies:
	- EtherStore.depositFunds() ()
	- EtherStore.withdrawFunds(uint256) ()
	- lastWithdrawTime[msg.sender] = now ()
	EtherStore.lastWithdrawTime () can be used in cross function reentrancies:
	- EtherStore.withdrawFunds(uint256) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

EtherStore.withdrawFunds(uint256) () uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now >= lastWithdrawTime[msg.sender] + 604800) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.10 () allows old versions
solc-0.4.10 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in EtherStore.withdrawFunds(uint256) ():
	- require(bool)(msg.sender.call.value(_weiToWithdraw)()) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter EtherStore.withdrawFunds(uint256)._weiToWithdraw () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

EtherStore.withdrawalLimit () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/reentrancy/etherstore.sol analyzed (1 contracts with 93 detectors), 7 result(s) found
Switched global version to 0.4.24
generating... report/reentrancy/modifier_reentrancy.sol.json
'solc --version' running
'solc dataset/reentrancy/modifier_reentrancy.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

Reentrancy in ModifierEntrancy.airDrop() (dataset/reentrancy/modifier_reentrancy.sol#15-17):
	External calls:
	- supportsToken() (dataset/reentrancy/modifier_reentrancy.sol#15)
		- require(bool)(keccak256()(abi.encodePacked(Nu Token)) == Bank(msg.sender).supportsToken()) (dataset/reentrancy/modifier_reentrancy.sol#21)
	State variables written after the call(s):
	- tokenBalance[msg.sender] += 20 (dataset/reentrancy/modifier_reentrancy.sol#16)
	ModifierEntrancy.tokenBalance (dataset/reentrancy/modifier_reentrancy.sol#10) can be used in cross function reentrancies:
	- ModifierEntrancy.airDrop() (dataset/reentrancy/modifier_reentrancy.sol#15-17)
	- ModifierEntrancy.hasNoBalance() (dataset/reentrancy/modifier_reentrancy.sol#25-28)
	- ModifierEntrancy.tokenBalance (dataset/reentrancy/modifier_reentrancy.sol#10)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Pragma version^0.4.24 (dataset/reentrancy/modifier_reentrancy.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract attack (dataset/reentrancy/modifier_reentrancy.sol#37-49) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

ModifierEntrancy.name (dataset/reentrancy/modifier_reentrancy.sol#11) is never used in ModifierEntrancy (dataset/reentrancy/modifier_reentrancy.sol#9-29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
dataset/reentrancy/modifier_reentrancy.sol analyzed (3 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.18
generating... report/reentrancy/reentrance.sol.json
'solc --version' running
'solc dataset/reentrancy/reentrance.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

Reentrancy in Reentrance.withdraw(uint256) (dataset/reentrancy/reentrance.sol#21-29):
	External calls:
	- msg.sender.call.value(_amount)() (dataset/reentrancy/reentrance.sol#24)
	State variables written after the call(s):
	- balances[msg.sender] -= _amount (dataset/reentrancy/reentrance.sol#27)
	Reentrance.balances (dataset/reentrancy/reentrance.sol#11) can be used in cross function reentrancies:
	- Reentrance.balanceOf(address) (dataset/reentrancy/reentrance.sol#17-19)
	- Reentrance.balances (dataset/reentrancy/reentrance.sol#11)
	- Reentrance.donate(address) (dataset/reentrancy/reentrance.sol#13-15)
	- Reentrance.withdraw(uint256) (dataset/reentrancy/reentrance.sol#21-29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.18 (dataset/reentrancy/reentrance.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Reentrance.withdraw(uint256) (dataset/reentrancy/reentrance.sol#21-29):
	- msg.sender.call.value(_amount)() (dataset/reentrancy/reentrance.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Reentrance.donate(address)._to (dataset/reentrancy/reentrance.sol#13) is not in mixedCase
Parameter Reentrance.balanceOf(address)._who (dataset/reentrancy/reentrance.sol#17) is not in mixedCase
Parameter Reentrance.withdraw(uint256)._amount (dataset/reentrancy/reentrance.sol#21) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "_amount (dataset/reentrancy/reentrance.sol#25)" inReentrance (dataset/reentrancy/reentrance.sol#9-32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
dataset/reentrancy/reentrance.sol analyzed (1 contracts with 93 detectors), 8 result(s) found
Switched global version to 0.4.24
generating... report/reentrancy/reentrancy_bonus.sol.json
'solc --version' running
'solc dataset/reentrancy/reentrancy_bonus.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/reentrancy_bonus.sol:
dataset/reentrancy/reentrancy_bonus.sol:19:9: Warning: Different number of components on the left hand side (2) than on the right hand side (1).
        (bool success, ) = recipient.call.value(amountToWithdraw)("");
        ^-----------------------------------------------------------^


Reentrancy_bonus.withdrawReward(address) (dataset/reentrancy/reentrancy_bonus.sol#16-21) sends eth to arbitrary user
	Dangerous calls:
	- (success) = recipient.call.value(amountToWithdraw)() (dataset/reentrancy/reentrancy_bonus.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Reentrancy in Reentrancy_bonus.getFirstWithdrawalBonus(address) (dataset/reentrancy/reentrancy_bonus.sol#23-30):
	External calls:
	- withdrawReward(recipient) (dataset/reentrancy/reentrancy_bonus.sol#28)
		- (success) = recipient.call.value(amountToWithdraw)() (dataset/reentrancy/reentrancy_bonus.sol#19)
	State variables written after the call(s):
	- claimedBonus[recipient] = true (dataset/reentrancy/reentrancy_bonus.sol#29)
	Reentrancy_bonus.claimedBonus (dataset/reentrancy/reentrancy_bonus.sol#13) can be used in cross function reentrancies:
	- Reentrancy_bonus.getFirstWithdrawalBonus(address) (dataset/reentrancy/reentrancy_bonus.sol#23-30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Reentrancy_bonus.withdrawReward(address).recipient (dataset/reentrancy/reentrancy_bonus.sol#16) lacks a zero-check on :
		- (success) = recipient.call.value(amountToWithdraw)() (dataset/reentrancy/reentrancy_bonus.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.24 (dataset/reentrancy/reentrancy_bonus.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Reentrancy_bonus.withdrawReward(address) (dataset/reentrancy/reentrancy_bonus.sol#16-21):
	- (success) = recipient.call.value(amountToWithdraw)() (dataset/reentrancy/reentrancy_bonus.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract Reentrancy_bonus (dataset/reentrancy/reentrancy_bonus.sol#9-31) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy_bonus.userBalances (dataset/reentrancy/reentrancy_bonus.sol#12) is never used in Reentrancy_bonus (dataset/reentrancy/reentrancy_bonus.sol#9-31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
dataset/reentrancy/reentrancy_bonus.sol analyzed (1 contracts with 93 detectors), 8 result(s) found
Switched global version to 0.4.24
generating... report/reentrancy/reentrancy_cross_function.sol.json
'solc --version' running
'solc dataset/reentrancy/reentrancy_cross_function.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/reentrancy_cross_function.sol:
dataset/reentrancy/reentrancy_cross_function.sol:24:9: Warning: Different number of components on the left hand side (2) than on the right hand side (1).
        (bool success, ) = msg.sender.call.value(amountToWithdraw)(""); // At this point, the caller's code is executed, and can call transfer()
        ^------------------------------------------------------------^
dataset/reentrancy/reentrancy_cross_function.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint amount) {
    ^ (Relevant source part starts here and spans across multiple lines).


Reentrancy in Reentrancy_cross_function.withdrawBalance() (dataset/reentrancy/reentrancy_cross_function.sol#21-27):
	External calls:
	- (success) = msg.sender.call.value(amountToWithdraw)() (dataset/reentrancy/reentrancy_cross_function.sol#24)
	State variables written after the call(s):
	- userBalances[msg.sender] = 0 (dataset/reentrancy/reentrancy_cross_function.sol#26)
	Reentrancy_cross_function.userBalances (dataset/reentrancy/reentrancy_cross_function.sol#12) can be used in cross function reentrancies:
	- Reentrancy_cross_function.transfer(address,uint256) (dataset/reentrancy/reentrancy_cross_function.sol#14-19)
	- Reentrancy_cross_function.withdrawBalance() (dataset/reentrancy/reentrancy_cross_function.sol#21-27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Reentrancy_cross_function (dataset/reentrancy/reentrancy_cross_function.sol#9-28) has incorrect ERC20 function interface:Reentrancy_cross_function.transfer(address,uint256) (dataset/reentrancy/reentrancy_cross_function.sol#14-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

Pragma version^0.4.24 (dataset/reentrancy/reentrancy_cross_function.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Reentrancy_cross_function.withdrawBalance() (dataset/reentrancy/reentrancy_cross_function.sol#21-27):
	- (success) = msg.sender.call.value(amountToWithdraw)() (dataset/reentrancy/reentrancy_cross_function.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract Reentrancy_cross_function (dataset/reentrancy/reentrancy_cross_function.sol#9-28) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/reentrancy/reentrancy_cross_function.sol analyzed (1 contracts with 93 detectors), 6 result(s) found
Switched global version to 0.4.19
generating... report/reentrancy/reentrancy_dao.sol.json
'solc --version' running
'solc dataset/reentrancy/reentrancy_dao.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

Reentrancy in ReentrancyDAO.withdrawAll() (dataset/reentrancy/reentrancy_dao.sol#13-22):
	External calls:
	- callResult = msg.sender.call.value(oCredit)() (dataset/reentrancy/reentrancy_dao.sol#18)
	State variables written after the call(s):
	- credit[msg.sender] = 0 (dataset/reentrancy/reentrancy_dao.sol#20)
	ReentrancyDAO.credit (dataset/reentrancy/reentrancy_dao.sol#10) can be used in cross function reentrancies:
	- ReentrancyDAO.deposit() (dataset/reentrancy/reentrancy_dao.sol#24-27)
	- ReentrancyDAO.withdrawAll() (dataset/reentrancy/reentrancy_dao.sol#13-22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.19 (dataset/reentrancy/reentrancy_dao.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in ReentrancyDAO.withdrawAll() (dataset/reentrancy/reentrancy_dao.sol#13-22):
	- callResult = msg.sender.call.value(oCredit)() (dataset/reentrancy/reentrancy_dao.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/reentrancy/reentrancy_dao.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Installing solc '0.5.0'...
Version '0.5.0' installed.
Switched global version to 0.5.0
generating... report/reentrancy/reentrancy_insecure.sol.json
'solc --version' running
'solc dataset/reentrancy/reentrancy_insecure.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

Reentrancy in Reentrancy_insecure.withdrawBalance() (dataset/reentrancy/reentrancy_insecure.sol#14-20):
	External calls:
	- (success) = msg.sender.call.value(amountToWithdraw)() (dataset/reentrancy/reentrancy_insecure.sol#17)
	State variables written after the call(s):
	- userBalances[msg.sender] = 0 (dataset/reentrancy/reentrancy_insecure.sol#19)
	Reentrancy_insecure.userBalances (dataset/reentrancy/reentrancy_insecure.sol#12) can be used in cross function reentrancies:
	- Reentrancy_insecure.withdrawBalance() (dataset/reentrancy/reentrancy_insecure.sol#14-20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.5.0 (dataset/reentrancy/reentrancy_insecure.sol#7) allows old versions
solc-0.5.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Reentrancy_insecure.withdrawBalance() (dataset/reentrancy/reentrancy_insecure.sol#14-20):
	- (success) = msg.sender.call.value(amountToWithdraw)() (dataset/reentrancy/reentrancy_insecure.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract Reentrancy_insecure (dataset/reentrancy/reentrancy_insecure.sol#9-21) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/reentrancy/reentrancy_insecure.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.15
generating... report/reentrancy/reentrancy_simple.sol.json
'solc --version' running
'solc dataset/reentrancy/reentrancy_simple.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running
Compilation warnings/errors on dataset/reentrancy/reentrancy_simple.sol:
dataset/reentrancy/reentrancy_simple.sol:25:14: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
             throw;
             ^---^


Reentrancy in Reentrance.withdrawBalance() (dataset/reentrancy/reentrancy_simple.sol#20-28):
	External calls:
	- ! (msg.sender.call.value(userBalance[msg.sender])()) (dataset/reentrancy/reentrancy_simple.sol#24)
	State variables written after the call(s):
	- userBalance[msg.sender] = 0 (dataset/reentrancy/reentrancy_simple.sol#27)
	Reentrance.userBalance (dataset/reentrancy/reentrancy_simple.sol#10) can be used in cross function reentrancies:
	- Reentrance.addToBalance() (dataset/reentrancy/reentrancy_simple.sol#16-18)
	- Reentrance.getBalance(address) (dataset/reentrancy/reentrancy_simple.sol#12-14)
	- Reentrance.withdrawBalance() (dataset/reentrancy/reentrancy_simple.sol#20-28)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Deprecated standard detected THROW (dataset/reentrancy/reentrancy_simple.sol#25):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.15 (dataset/reentrancy/reentrancy_simple.sol#7) allows old versions
solc-0.4.15 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Reentrance.withdrawBalance() (dataset/reentrancy/reentrancy_simple.sol#20-28):
	- ! (msg.sender.call.value(userBalance[msg.sender])()) (dataset/reentrancy/reentrancy_simple.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/reentrancy/reentrancy_simple.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.2
generating... report/reentrancy/simple_dao.sol.json
'solc --version' running
'solc dataset/reentrancy/simple_dao.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running

Reentrancy in SimpleDAO.withdraw(uint256) ():
	External calls:
	- res = msg.sender.call.value(amount)() ()
	State variables written after the call(s):
	- credit[msg.sender] -= amount ()
	SimpleDAO.credit () can be used in cross function reentrancies:
	- SimpleDAO.donate(address) ()
	- SimpleDAO.queryCredit(address) ()
	- SimpleDAO.withdraw(uint256) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.4.2 () allows old versions
solc-0.4.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in SimpleDAO.withdraw(uint256) ():
	- res = msg.sender.call.value(amount)() ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/reentrancy/simple_dao.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Switched global version to 0.4.23
generating... report/reentrancy/spank_chain_payment.sol.json
'solc --version' running
'solc dataset/reentrancy/spank_chain_payment.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/reentrancy' running

LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546) sends eth to arbitrary user
	Dangerous calls:
	- Channels[_lcID].partyAddresses[0].transfer(_balances[0]) (dataset/reentrancy/spank_chain_payment.sol#534)
	- Channels[_lcID].partyAddresses[1].transfer(_balances[1]) (dataset/reentrancy/spank_chain_payment.sol#535)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Reentrancy in LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],Channels[_lcID].erc20Balances[0]),CreateChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#430)
	External calls sending eth:
	- Channels[_lcID].partyAddresses[0].transfer(Channels[_lcID].ethBalances[0]) (dataset/reentrancy/spank_chain_payment.sol#426)
	State variables written after the call(s):
	- delete Channels[_lcID] (dataset/reentrancy/spank_chain_payment.sol#436)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
Reentrancy in LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817):
	External calls:
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[0],tokenbalanceA),byzantineCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#803-806)
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[1],tokenbalanceI),byzantineCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#807-810)
	External calls sending eth:
	- channel.partyAddresses[0].transfer(ethbalanceA) (dataset/reentrancy/spank_chain_payment.sol#798)
	- channel.partyAddresses[1].transfer(ethbalanceI) (dataset/reentrancy/spank_chain_payment.sol#799)
	State variables written after the call(s):
	- channel.isOpen = false (dataset/reentrancy/spank_chain_payment.sol#813)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

ECTools.recoverSigner(bytes32,string) (dataset/reentrancy/spank_chain_payment.sol#62-88) is declared view but contains assembly code
ECTools.uintToBytes32(uint256) (dataset/reentrancy/spank_chain_payment.sol#132-135) is declared view but contains assembly code
LedgerChannel._isContained(bytes32,bytes,bytes32) (dataset/reentrancy/spank_chain_payment.sol#819-834) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code

LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false) (dataset/reentrancy/spank_chain_payment.sol#421)
LedgerChannel._isContained(bytes32,bytes,bytes32) (dataset/reentrancy/spank_chain_payment.sol#819-834) uses a dangerous strict equality:
	- cursor == _root (dataset/reentrancy/spank_chain_payment.sol#833)
LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546) uses a dangerous strict equality:
	- require(bool)(Channels[_lcID].isOpen == true) (dataset/reentrancy/spank_chain_payment.sol#506)
LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546) uses a dangerous strict equality:
	- require(bool)(totalEthDeposit == _balances[0] + _balances[1]) (dataset/reentrancy/spank_chain_payment.sol#509)
LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546) uses a dangerous strict equality:
	- require(bool)(totalTokenDeposit == _balances[2] + _balances[3]) (dataset/reentrancy/spank_chain_payment.sol#510)
LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492) uses a dangerous strict equality:
	- require(bool,string)(Channels[_lcID].isOpen == true,Tried adding funds to a closed channel) (dataset/reentrancy/spank_chain_payment.sol#466)
LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657) uses a dangerous strict equality:
	- require(bool)(_isContained(_initState,_proof,Channels[_lcID].VCrootHash) == true) (dataset/reentrancy/spank_chain_payment.sol#643)
LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460) uses a dangerous strict equality:
	- require(bool)(Channels[_lcID].isOpen == false) (dataset/reentrancy/spank_chain_payment.sol#441)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),CreateChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#406)
	State variables written after the call(s):
	- Channels[_lcID].erc20Balances[0] = _balances[1] (dataset/reentrancy/spank_chain_payment.sol#407)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
	- Channels[_lcID].sequence = 0 (dataset/reentrancy/spank_chain_payment.sol#410)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
	- Channels[_lcID].confirmTime = _confirmTime (dataset/reentrancy/spank_chain_payment.sol#411)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
	- Channels[_lcID].LCopenTimeout = now + _confirmTime (dataset/reentrancy/spank_chain_payment.sol#414)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
	- Channels[_lcID].initialDeposit = _balances (dataset/reentrancy/spank_chain_payment.sol#415)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
Reentrancy in LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#473)
	State variables written after the call(s):
	- Channels[_lcID].erc20Balances[2] += _balance (dataset/reentrancy/spank_chain_payment.sol#474)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
	- Channels[_lcID].ethBalances[3] += msg.value (dataset/reentrancy/spank_chain_payment.sol#487)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
Reentrancy in LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#473)
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#483)
	State variables written after the call(s):
	- Channels[_lcID].erc20Balances[3] += _balance (dataset/reentrancy/spank_chain_payment.sol#484)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
Reentrancy in LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),joinChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#449)
	State variables written after the call(s):
	- Channels[_lcID].erc20Balances[1] = _balances[1] (dataset/reentrancy/spank_chain_payment.sol#450)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
	- Channels[_lcID].initialDeposit[0] += _balances[0] (dataset/reentrancy/spank_chain_payment.sol#453)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
	- Channels[_lcID].initialDeposit[1] += _balances[1] (dataset/reentrancy/spank_chain_payment.sol#454)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
	- Channels[_lcID].isOpen = true (dataset/reentrancy/spank_chain_payment.sol#456)
	LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) can be used in cross function reentrancies:
	- LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378)
	- LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437)
	- LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817)
	- LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752)
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
	- LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492)
	- LedgerChannel.getChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#837-866)
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

ECTools.substring(string,uint256,uint256) (dataset/reentrancy/spank_chain_payment.sol#167-178) contains a tautology or contradiction:
	- require(bool)(_startIndex >= 0) (dataset/reentrancy/spank_chain_payment.sol#170)
LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418) contains a tautology or contradiction:
	- require(bool,string)(_balances[0] >= 0 && _balances[1] >= 0,Balances cannot be negative) (dataset/reentrancy/spank_chain_payment.sol#392)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction

Reentrancy in LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817):
	External calls:
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[0],tokenbalanceA),byzantineCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#803-806)
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[1],tokenbalanceI),byzantineCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#807-810)
	External calls sending eth:
	- channel.partyAddresses[0].transfer(ethbalanceA) (dataset/reentrancy/spank_chain_payment.sol#798)
	- channel.partyAddresses[1].transfer(ethbalanceI) (dataset/reentrancy/spank_chain_payment.sol#799)
	State variables written after the call(s):
	- numChannels -- (dataset/reentrancy/spank_chain_payment.sol#814)
Reentrancy in LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],_balances[2]),happyCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#539)
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[1],_balances[3]),happyCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#540)
	External calls sending eth:
	- Channels[_lcID].partyAddresses[0].transfer(_balances[0]) (dataset/reentrancy/spank_chain_payment.sol#534)
	- Channels[_lcID].partyAddresses[1].transfer(_balances[1]) (dataset/reentrancy/spank_chain_payment.sol#535)
	State variables written after the call(s):
	- numChannels -- (dataset/reentrancy/spank_chain_payment.sol#543)
Reentrancy in LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),joinChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#449)
	State variables written after the call(s):
	- numChannels ++ (dataset/reentrancy/spank_chain_payment.sol#457)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],Channels[_lcID].erc20Balances[0]),CreateChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#430)
	External calls sending eth:
	- Channels[_lcID].partyAddresses[0].transfer(Channels[_lcID].ethBalances[0]) (dataset/reentrancy/spank_chain_payment.sol#426)
	Event emitted after the call(s):
	- DidLCClose(_lcID,0,Channels[_lcID].ethBalances[0],Channels[_lcID].erc20Balances[0],0,0) (dataset/reentrancy/spank_chain_payment.sol#433)
Reentrancy in LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817):
	External calls:
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[0],tokenbalanceA),byzantineCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#803-806)
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[1],tokenbalanceI),byzantineCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#807-810)
	External calls sending eth:
	- channel.partyAddresses[0].transfer(ethbalanceA) (dataset/reentrancy/spank_chain_payment.sol#798)
	- channel.partyAddresses[1].transfer(ethbalanceI) (dataset/reentrancy/spank_chain_payment.sol#799)
	Event emitted after the call(s):
	- DidLCClose(_lcID,channel.sequence,ethbalanceA,ethbalanceI,tokenbalanceA,tokenbalanceI) (dataset/reentrancy/spank_chain_payment.sol#816)
Reentrancy in LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],_balances[2]),happyCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#539)
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[1],_balances[3]),happyCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#540)
	External calls sending eth:
	- Channels[_lcID].partyAddresses[0].transfer(_balances[0]) (dataset/reentrancy/spank_chain_payment.sol#534)
	- Channels[_lcID].partyAddresses[1].transfer(_balances[1]) (dataset/reentrancy/spank_chain_payment.sol#535)
	Event emitted after the call(s):
	- DidLCClose(_lcID,_sequence,_balances[0],_balances[1],_balances[2],_balances[3]) (dataset/reentrancy/spank_chain_payment.sol#545)
Reentrancy in LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),CreateChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#406)
	Event emitted after the call(s):
	- DidLCOpen(_lcID,msg.sender,_partyI,_balances[0],_token,_balances[1],Channels[_lcID].LCopenTimeout) (dataset/reentrancy/spank_chain_payment.sol#417)
Reentrancy in LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#473)
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#483)
	Event emitted after the call(s):
	- DidLCDeposit(_lcID,recipient,_balance,isToken) (dataset/reentrancy/spank_chain_payment.sol#491)
Reentrancy in LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),joinChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#449)
	Event emitted after the call(s):
	- DidLCJoin(_lcID,_balances[0],_balances[1]) (dataset/reentrancy/spank_chain_payment.sol#459)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(Channels[_lcID].partyAddresses[0] == address(0),Channel has already been created.) (dataset/reentrancy/spank_chain_payment.sol#390)
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),CreateChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#406)
LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false) (dataset/reentrancy/spank_chain_payment.sol#421)
	- require(bool)(now > Channels[_lcID].LCopenTimeout) (dataset/reentrancy/spank_chain_payment.sol#422)
	- Channels[_lcID].initialDeposit[0] != 0 (dataset/reentrancy/spank_chain_payment.sol#424)
	- Channels[_lcID].initialDeposit[1] != 0 (dataset/reentrancy/spank_chain_payment.sol#428)
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],Channels[_lcID].erc20Balances[0]),CreateChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#430)
LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(Channels[_lcID].isOpen == false) (dataset/reentrancy/spank_chain_payment.sol#441)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[1]) (dataset/reentrancy/spank_chain_payment.sol#442)
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),joinChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#449)
LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(Channels[_lcID].isOpen == true,Tried adding funds to a closed channel) (dataset/reentrancy/spank_chain_payment.sol#466)
	- require(bool)(recipient == Channels[_lcID].partyAddresses[0] || recipient == Channels[_lcID].partyAddresses[1]) (dataset/reentrancy/spank_chain_payment.sol#467)
	- Channels[_lcID].partyAddresses[0] == recipient (dataset/reentrancy/spank_chain_payment.sol#471)
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#473)
	- Channels[_lcID].partyAddresses[1] == recipient (dataset/reentrancy/spank_chain_payment.sol#481)
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#483)
LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(Channels[_lcID].isOpen == true) (dataset/reentrancy/spank_chain_payment.sol#506)
	- require(bool)(totalEthDeposit == _balances[0] + _balances[1]) (dataset/reentrancy/spank_chain_payment.sol#509)
	- require(bool)(totalTokenDeposit == _balances[2] + _balances[3]) (dataset/reentrancy/spank_chain_payment.sol#510)
	- require(bool)(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state,_sigA)) (dataset/reentrancy/spank_chain_payment.sol#528)
	- require(bool)(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state,_sigI)) (dataset/reentrancy/spank_chain_payment.sol#529)
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],_balances[2]),happyCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#539)
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[1],_balances[3]),happyCloseChannel: token transfer failure) (dataset/reentrancy/spank_chain_payment.sol#540)
LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(channel.isOpen) (dataset/reentrancy/spank_chain_payment.sol#560)
	- require(bool)(channel.sequence < updateParams[0]) (dataset/reentrancy/spank_chain_payment.sol#561)
	- require(bool)(channel.ethBalances[0] + channel.ethBalances[1] >= updateParams[2] + updateParams[3]) (dataset/reentrancy/spank_chain_payment.sol#562)
	- require(bool)(channel.erc20Balances[0] + channel.erc20Balances[1] >= updateParams[4] + updateParams[5]) (dataset/reentrancy/spank_chain_payment.sol#563)
	- require(bool)(channel.updateLCtimeout > now) (dataset/reentrancy/spank_chain_payment.sol#566)
	- require(bool)(channel.partyAddresses[0] == ECTools.recoverSigner(_state,_sigA)) (dataset/reentrancy/spank_chain_payment.sol#585)
	- require(bool)(channel.partyAddresses[1] == ECTools.recoverSigner(_state,_sigI)) (dataset/reentrancy/spank_chain_payment.sol#586)
LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(Channels[_lcID].isOpen,LC is closed.) (dataset/reentrancy/spank_chain_payment.sol#627)
	- require(bool,string)(Channels[_lcID].updateLCtimeout < now,LC timeout not over.) (dataset/reentrancy/spank_chain_payment.sol#631)
	- require(bool)(_isContained(_initState,_proof,Channels[_lcID].VCrootHash) == true) (dataset/reentrancy/spank_chain_payment.sol#643)
LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(Channels[_lcID].isOpen,LC is closed.) (dataset/reentrancy/spank_chain_payment.sol#673)
	- require(bool)(Channels[_lcID].updateLCtimeout < now) (dataset/reentrancy/spank_chain_payment.sol#689)
LedgerChannel.closeVirtualChannel(bytes32,bytes32) (dataset/reentrancy/spank_chain_payment.sol#725-752) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(Channels[_lcID].isOpen,LC is closed.) (dataset/reentrancy/spank_chain_payment.sol#727)
	- require(bool,string)(virtualChannels[_vcID].updateVCtimeout < now,Update vc timeout has not elapsed.) (dataset/reentrancy/spank_chain_payment.sol#729)
	- virtualChannels[_vcID].partyA == Channels[_lcID].partyAddresses[0] (dataset/reentrancy/spank_chain_payment.sol#737)
	- virtualChannels[_vcID].partyB == Channels[_lcID].partyAddresses[0] (dataset/reentrancy/spank_chain_payment.sol#743)
LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(channel.updateLCtimeout < now,LC timeout over.) (dataset/reentrancy/spank_chain_payment.sol#763)
LedgerChannel._isContained(bytes32,bytes,bytes32) (dataset/reentrancy/spank_chain_payment.sol#819-834) uses timestamp for comparisons
	Dangerous comparisons:
	- cursor == _root (dataset/reentrancy/spank_chain_payment.sol#833)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

ECTools.recoverSigner(bytes32,string) (dataset/reentrancy/spank_chain_payment.sol#62-88) uses assembly
	- INLINE ASM (dataset/reentrancy/spank_chain_payment.sol#76-81)
ECTools.uintToBytes32(uint256) (dataset/reentrancy/spank_chain_payment.sol#132-135) uses assembly
	- INLINE ASM (dataset/reentrancy/spank_chain_payment.sol#134-135)
LedgerChannel._isContained(bytes32,bytes,bytes32) (dataset/reentrancy/spank_chain_payment.sol#819-834) uses assembly
	- INLINE ASM (dataset/reentrancy/spank_chain_payment.sol#824-826)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437) compares to a boolean constant:
	-require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false) (dataset/reentrancy/spank_chain_payment.sol#421)
LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460) compares to a boolean constant:
	-require(bool)(Channels[_lcID].isOpen == false) (dataset/reentrancy/spank_chain_payment.sol#441)
LedgerChannel.deposit(bytes32,address,uint256,bool) (dataset/reentrancy/spank_chain_payment.sol#465-492) compares to a boolean constant:
	-require(bool,string)(Channels[_lcID].isOpen == true,Tried adding funds to a closed channel) (dataset/reentrancy/spank_chain_payment.sol#466)
LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546) compares to a boolean constant:
	-require(bool)(Channels[_lcID].isOpen == true) (dataset/reentrancy/spank_chain_payment.sol#506)
LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612) compares to a boolean constant:
	-channel.isUpdateLCSettling == true (dataset/reentrancy/spank_chain_payment.sol#565)
LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657) compares to a boolean constant:
	-require(bool)(_isContained(_initState,_proof,Channels[_lcID].VCrootHash) == true) (dataset/reentrancy/spank_chain_payment.sol#643)
LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817) compares to a boolean constant:
	-require(bool)(channel.isUpdateLCSettling == true) (dataset/reentrancy/spank_chain_payment.sol#761)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

Pragma version^0.4.23 (dataset/reentrancy/spank_chain_payment.sol#9) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in HumanStandardToken.approveAndCall(address,uint256,bytes) (dataset/reentrancy/spank_chain_payment.sol#252-261):
	- require(bool)(_spender.call(bytes4(bytes32(keccak256()(receiveApproval(address,uint256,address,bytes)))),msg.sender,_value,this,_extraData)) (dataset/reentrancy/spank_chain_payment.sol#259)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter ECTools.recoverSigner(bytes32,string)._hashedMsg (dataset/reentrancy/spank_chain_payment.sol#62) is not in mixedCase
Parameter ECTools.recoverSigner(bytes32,string)._sig (dataset/reentrancy/spank_chain_payment.sol#62) is not in mixedCase
Parameter ECTools.isSignedBy(bytes32,string,address)._hashedMsg (dataset/reentrancy/spank_chain_payment.sol#91) is not in mixedCase
Parameter ECTools.isSignedBy(bytes32,string,address)._sig (dataset/reentrancy/spank_chain_payment.sol#91) is not in mixedCase
Parameter ECTools.isSignedBy(bytes32,string,address)._addr (dataset/reentrancy/spank_chain_payment.sol#91) is not in mixedCase
Parameter ECTools.hexstrToBytes(string)._hexstr (dataset/reentrancy/spank_chain_payment.sol#98) is not in mixedCase
Parameter ECTools.parseInt16Char(string)._char (dataset/reentrancy/spank_chain_payment.sol#116) is not in mixedCase
Parameter ECTools.toEthereumSignedMessage(string)._msg (dataset/reentrancy/spank_chain_payment.sol#139) is not in mixedCase
Parameter ECTools.uintToString(uint256)._uint (dataset/reentrancy/spank_chain_payment.sol#147) is not in mixedCase
Parameter ECTools.substring(string,uint256,uint256)._str (dataset/reentrancy/spank_chain_payment.sol#167) is not in mixedCase
Parameter ECTools.substring(string,uint256,uint256)._startIndex (dataset/reentrancy/spank_chain_payment.sol#167) is not in mixedCase
Parameter ECTools.substring(string,uint256,uint256)._endIndex (dataset/reentrancy/spank_chain_payment.sol#167) is not in mixedCase
Parameter StandardToken.transfer(address,uint256)._to (dataset/reentrancy/spank_chain_payment.sol#182) is not in mixedCase
Parameter StandardToken.transfer(address,uint256)._value (dataset/reentrancy/spank_chain_payment.sol#182) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (dataset/reentrancy/spank_chain_payment.sol#194) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (dataset/reentrancy/spank_chain_payment.sol#194) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (dataset/reentrancy/spank_chain_payment.sol#194) is not in mixedCase
Parameter StandardToken.balanceOf(address)._owner (dataset/reentrancy/spank_chain_payment.sol#205) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (dataset/reentrancy/spank_chain_payment.sol#209) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (dataset/reentrancy/spank_chain_payment.sol#209) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (dataset/reentrancy/spank_chain_payment.sol#215) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (dataset/reentrancy/spank_chain_payment.sol#215) is not in mixedCase
Parameter HumanStandardToken.approveAndCall(address,uint256,bytes)._spender (dataset/reentrancy/spank_chain_payment.sol#252) is not in mixedCase
Parameter HumanStandardToken.approveAndCall(address,uint256,bytes)._value (dataset/reentrancy/spank_chain_payment.sol#252) is not in mixedCase
Parameter HumanStandardToken.approveAndCall(address,uint256,bytes)._extraData (dataset/reentrancy/spank_chain_payment.sol#252) is not in mixedCase
Parameter LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2])._lcID (dataset/reentrancy/spank_chain_payment.sol#381) is not in mixedCase
Parameter LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2])._partyI (dataset/reentrancy/spank_chain_payment.sol#382) is not in mixedCase
Parameter LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2])._confirmTime (dataset/reentrancy/spank_chain_payment.sol#383) is not in mixedCase
Parameter LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2])._token (dataset/reentrancy/spank_chain_payment.sol#384) is not in mixedCase
Parameter LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2])._balances (dataset/reentrancy/spank_chain_payment.sol#385) is not in mixedCase
Function LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437) is not in mixedCase
Parameter LedgerChannel.LCOpenTimeout(bytes32)._lcID (dataset/reentrancy/spank_chain_payment.sol#420) is not in mixedCase
Parameter LedgerChannel.joinChannel(bytes32,uint256[2])._lcID (dataset/reentrancy/spank_chain_payment.sol#439) is not in mixedCase
Parameter LedgerChannel.joinChannel(bytes32,uint256[2])._balances (dataset/reentrancy/spank_chain_payment.sol#439) is not in mixedCase
Parameter LedgerChannel.deposit(bytes32,address,uint256,bool)._lcID (dataset/reentrancy/spank_chain_payment.sol#465) is not in mixedCase
Parameter LedgerChannel.deposit(bytes32,address,uint256,bool)._balance (dataset/reentrancy/spank_chain_payment.sol#465) is not in mixedCase
Parameter LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string)._lcID (dataset/reentrancy/spank_chain_payment.sol#496) is not in mixedCase
Parameter LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string)._sequence (dataset/reentrancy/spank_chain_payment.sol#497) is not in mixedCase
Parameter LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string)._balances (dataset/reentrancy/spank_chain_payment.sol#498) is not in mixedCase
Parameter LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string)._sigA (dataset/reentrancy/spank_chain_payment.sol#499) is not in mixedCase
Parameter LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string)._sigI (dataset/reentrancy/spank_chain_payment.sol#500) is not in mixedCase
Parameter LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string)._lcID (dataset/reentrancy/spank_chain_payment.sol#551) is not in mixedCase
Parameter LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string)._VCroot (dataset/reentrancy/spank_chain_payment.sol#553) is not in mixedCase
Parameter LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string)._sigA (dataset/reentrancy/spank_chain_payment.sol#554) is not in mixedCase
Parameter LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string)._sigI (dataset/reentrancy/spank_chain_payment.sol#555) is not in mixedCase
Parameter LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)._lcID (dataset/reentrancy/spank_chain_payment.sol#616) is not in mixedCase
Parameter LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)._vcID (dataset/reentrancy/spank_chain_payment.sol#617) is not in mixedCase
Parameter LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)._proof (dataset/reentrancy/spank_chain_payment.sol#618) is not in mixedCase
Parameter LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)._partyA (dataset/reentrancy/spank_chain_payment.sol#619) is not in mixedCase
Parameter LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)._partyB (dataset/reentrancy/spank_chain_payment.sol#620) is not in mixedCase
Parameter LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)._bond (dataset/reentrancy/spank_chain_payment.sol#621) is not in mixedCase
Parameter LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)._balances (dataset/reentrancy/spank_chain_payment.sol#622) is not in mixedCase
Parameter LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)._lcID (dataset/reentrancy/spank_chain_payment.sol#663) is not in mixedCase
Parameter LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)._vcID (dataset/reentrancy/spank_chain_payment.sol#664) is not in mixedCase
Parameter LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)._partyA (dataset/reentrancy/spank_chain_payment.sol#666) is not in mixedCase
Parameter LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)._partyB (dataset/reentrancy/spank_chain_payment.sol#667) is not in mixedCase
Parameter LedgerChannel.closeVirtualChannel(bytes32,bytes32)._lcID (dataset/reentrancy/spank_chain_payment.sol#725) is not in mixedCase
Parameter LedgerChannel.closeVirtualChannel(bytes32,bytes32)._vcID (dataset/reentrancy/spank_chain_payment.sol#725) is not in mixedCase
Parameter LedgerChannel.byzantineCloseChannel(bytes32)._lcID (dataset/reentrancy/spank_chain_payment.sol#756) is not in mixedCase
Variable LedgerChannel.Channels (dataset/reentrancy/spank_chain_payment.sol#378) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in LedgerChannel.LCOpenTimeout(bytes32) (dataset/reentrancy/spank_chain_payment.sol#420-437):
	External calls:
	- Channels[_lcID].partyAddresses[0].transfer(Channels[_lcID].ethBalances[0]) (dataset/reentrancy/spank_chain_payment.sol#426)
	State variables written after the call(s):
	- delete Channels[_lcID] (dataset/reentrancy/spank_chain_payment.sol#436)
	Event emitted after the call(s):
	- DidLCClose(_lcID,0,Channels[_lcID].ethBalances[0],Channels[_lcID].erc20Balances[0],0,0) (dataset/reentrancy/spank_chain_payment.sol#433)
Reentrancy in LedgerChannel.byzantineCloseChannel(bytes32) (dataset/reentrancy/spank_chain_payment.sol#756-817):
	External calls:
	- channel.partyAddresses[0].transfer(ethbalanceA) (dataset/reentrancy/spank_chain_payment.sol#798)
	- channel.partyAddresses[1].transfer(ethbalanceI) (dataset/reentrancy/spank_chain_payment.sol#799)
	State variables written after the call(s):
	- channel.isOpen = false (dataset/reentrancy/spank_chain_payment.sol#813)
	- numChannels -- (dataset/reentrancy/spank_chain_payment.sol#814)
	Event emitted after the call(s):
	- DidLCClose(_lcID,channel.sequence,ethbalanceA,ethbalanceI,tokenbalanceA,tokenbalanceI) (dataset/reentrancy/spank_chain_payment.sol#816)
Reentrancy in LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546):
	External calls:
	- Channels[_lcID].partyAddresses[0].transfer(_balances[0]) (dataset/reentrancy/spank_chain_payment.sol#534)
	- Channels[_lcID].partyAddresses[1].transfer(_balances[1]) (dataset/reentrancy/spank_chain_payment.sol#535)
	State variables written after the call(s):
	- numChannels -- (dataset/reentrancy/spank_chain_payment.sol#543)
	Event emitted after the call(s):
	- DidLCClose(_lcID,_sequence,_balances[0],_balances[1],_balances[2],_balances[3]) (dataset/reentrancy/spank_chain_payment.sol#545)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Variable LedgerChannel.byzantineCloseChannel(bytes32).ethbalanceA (dataset/reentrancy/spank_chain_payment.sol#787) is too similar to LedgerChannel.byzantineCloseChannel(bytes32).ethbalanceI (dataset/reentrancy/spank_chain_payment.sol#788)
Variable LedgerChannel.byzantineCloseChannel(bytes32).tokenbalanceA (dataset/reentrancy/spank_chain_payment.sol#789) is too similar to LedgerChannel.byzantineCloseChannel(bytes32).tokenbalanceI (dataset/reentrancy/spank_chain_payment.sol#790)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

HumanStandardToken.version (dataset/reentrancy/spank_chain_payment.sol#236) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

isSignedBy(bytes32,string,address) should be declared external:
	- ECTools.isSignedBy(bytes32,string,address) (dataset/reentrancy/spank_chain_payment.sol#91-95)
toEthereumSignedMessage(string) should be declared external:
	- ECTools.toEthereumSignedMessage(string) (dataset/reentrancy/spank_chain_payment.sol#139-144)
approveAndCall(address,uint256,bytes) should be declared external:
	- HumanStandardToken.approveAndCall(address,uint256,bytes) (dataset/reentrancy/spank_chain_payment.sol#252-261)
createChannel(bytes32,address,uint256,address,uint256[2]) should be declared external:
	- LedgerChannel.createChannel(bytes32,address,uint256,address,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#380-418)
joinChannel(bytes32,uint256[2]) should be declared external:
	- LedgerChannel.joinChannel(bytes32,uint256[2]) (dataset/reentrancy/spank_chain_payment.sol#439-460)
consensusCloseChannel(bytes32,uint256,uint256[4],string,string) should be declared external:
	- LedgerChannel.consensusCloseChannel(bytes32,uint256,uint256[4],string,string) (dataset/reentrancy/spank_chain_payment.sol#495-546)
updateLCstate(bytes32,uint256[6],bytes32,string,string) should be declared external:
	- LedgerChannel.updateLCstate(bytes32,uint256[6],bytes32,string,string) (dataset/reentrancy/spank_chain_payment.sol#550-612)
initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) should be declared external:
	- LedgerChannel.initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#615-657)
settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) should be declared external:
	- LedgerChannel.settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) (dataset/reentrancy/spank_chain_payment.sol#662-723)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/reentrancy/spank_chain_payment.sol analyzed (5 contracts with 93 detectors), 128 result(s) found
Switched global version to 0.4.11
generating... report/short_addresses/short_address_example.sol.json
'solc --version' running
'solc dataset/short_addresses/short_address_example.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc --allow-paths .,/share/dataset/short_addresses' running

Pragma version^0.4.11 (dataset/short_addresses/short_address_example.sol#7) allows old versions
solc-0.4.11 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/short_addresses/short_address_example.sol analyzed (1 contracts with 93 detectors), 2 result(s) found
Switched global version to 0.4.15
generating... report/time_manipulation/ether_lotto.sol.json
'solc --version' running
'solc dataset/time_manipulation/ether_lotto.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/time_manipulation' running

EtherLotto.play() (dataset/time_manipulation/ether_lotto.sol#33-57) sends eth to arbitrary user
	Dangerous calls:
	- bank.transfer(FEE_AMOUNT) (dataset/time_manipulation/ether_lotto.sol#49)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

EtherLotto.play() (dataset/time_manipulation/ether_lotto.sol#33-57) uses a weak PRNG: "random = uint256(sha3()(block.timestamp)) % 2 (dataset/time_manipulation/ether_lotto.sol#43)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

EtherLotto.play() (dataset/time_manipulation/ether_lotto.sol#33-57) uses a dangerous strict equality:
	- random == 0 (dataset/time_manipulation/ether_lotto.sol#46)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

EtherLotto.play() (dataset/time_manipulation/ether_lotto.sol#33-57) uses timestamp for comparisons
	Dangerous comparisons:
	- random == 0 (dataset/time_manipulation/ether_lotto.sol#46)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected random = uint256(sha3()(block.timestamp)) % 2 (dataset/time_manipulation/ether_lotto.sol#43):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.15 (dataset/time_manipulation/ether_lotto.sol#8) allows old versions
solc-0.4.15 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in EtherLotto.play() (dataset/time_manipulation/ether_lotto.sol#33-57):
	External calls:
	- bank.transfer(FEE_AMOUNT) (dataset/time_manipulation/ether_lotto.sol#49)
	- msg.sender.transfer(pot - FEE_AMOUNT) (dataset/time_manipulation/ether_lotto.sol#52)
	State variables written after the call(s):
	- pot = 0 (dataset/time_manipulation/ether_lotto.sol#55)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/time_manipulation/ether_lotto.sol analyzed (1 contracts with 93 detectors), 8 result(s) found
Switched global version to 0.4.0
generating... report/time_manipulation/governmental_survey.sol.json
'solc --version' running
'solc dataset/time_manipulation/governmental_survey.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/time_manipulation/governmental_survey.sol:
dataset/time_manipulation/governmental_survey.sol:34:5: Warning: Return value of low-level calls not used.
    lastInvestor.send(jackpot);
    ^------------------------^
dataset/time_manipulation/governmental_survey.sol:35:5: Warning: Return value of low-level calls not used.
    owner.send(this.balance-1 ether);
    ^------------------------------^


Governmental.resetInvestment() () sends eth to arbitrary user
	Dangerous calls:
	- owner.send(this.balance - 1000000000000000000) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Attacker.attack(address,uint256) () contains a tautology or contradiction:
	- 0 <= count && count < 1023 ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction

Governmental.resetInvestment() () ignores return value by lastInvestor.send(jackpot) ()
Governmental.resetInvestment() () ignores return value by owner.send(this.balance - 1000000000000000000) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Governmental.resetInvestment() () uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < lastInvestmentTimestamp + ONE_MINUTE ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected this.attack.gas(msg.gas - 2000)(target,count + 1) ():
	- Usage of "msg.gas" should be replaced with "gasleft()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Variable Governmental.ONE_MINUTE () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in Governmental.resetInvestment() ():
	External calls:
	- lastInvestor.send(jackpot) ()
	- owner.send(this.balance - 1000000000000000000) ()
	State variables written after the call(s):
	- jackpot = 1000000000000000000 ()
	- lastInvestmentTimestamp = 0 ()
	- lastInvestor = 0 ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Governmental.ONE_MINUTE () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/time_manipulation/governmental_survey.sol analyzed (2 contracts with 93 detectors), 12 result(s) found
Switched global version to 0.4.0
generating... report/time_manipulation/lottopollo.sol.json
'solc --version' running
'solc dataset/time_manipulation/lottopollo.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/time_manipulation/lottopollo.sol:
dataset/time_manipulation/lottopollo.sol:14:7: Warning: Return value of low-level calls not used.
      msg.sender.send( msg.value );
      ^--------------------------^
dataset/time_manipulation/lottopollo.sol:17:9: Warning: Return value of low-level calls not used.
        leader.send( this.balance );
        ^-------------------------^


lottopollo.payOut(uint256) () sends eth to arbitrary user
	Dangerous calls:
	- leader.send(this.balance) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

lottopollo.payOut(uint256) () ignores return value by msg.sender.send(msg.value) ()
lottopollo.payOut(uint256) () ignores return value by leader.send(this.balance) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

lottopollo.payOut(uint256) () uses timestamp for comparisons
	Dangerous comparisons:
	- rand > 0 && now - rand > 86400 ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract lottopollo () is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/time_manipulation/lottopollo.sol analyzed (1 contracts with 93 detectors), 7 result(s) found
Switched global version to 0.4.25
generating... report/time_manipulation/roulette.sol.json
'solc --version' running
'solc dataset/time_manipulation/roulette.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/time_manipulation' running
Compilation warnings/errors on dataset/time_manipulation/roulette.sol:
dataset/time_manipulation/roulette.sol:22:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            msg.sender.transfer(this.balance);
                                ^----------^


Roulette.fallback() (dataset/time_manipulation/roulette.sol#15-24) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/time_manipulation/roulette.sol#22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Roulette.fallback() (dataset/time_manipulation/roulette.sol#15-24) uses a weak PRNG: "now % 15 == 0 (dataset/time_manipulation/roulette.sol#21)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

Roulette.fallback() (dataset/time_manipulation/roulette.sol#15-24) uses a dangerous strict equality:
	- now % 15 == 0 (dataset/time_manipulation/roulette.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Roulette.fallback() (dataset/time_manipulation/roulette.sol#15-24) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now != pastBlockTime) (dataset/time_manipulation/roulette.sol#18)
	- now % 15 == 0 (dataset/time_manipulation/roulette.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.25 (dataset/time_manipulation/roulette.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/time_manipulation/roulette.sol analyzed (1 contracts with 93 detectors), 6 result(s) found
Switched global version to 0.4.25
generating... report/time_manipulation/timed_crowdsale.sol.json
'solc --version' running
'solc dataset/time_manipulation/timed_crowdsale.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/time_manipulation' running

TimedCrowdsale.isSaleFinished() (dataset/time_manipulation/timed_crowdsale.sol#11-14) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= 1546300800 (dataset/time_manipulation/timed_crowdsale.sol#13)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.25 (dataset/time_manipulation/timed_crowdsale.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/time_manipulation/timed_crowdsale.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol:
dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol:201:9: Warning: Return value of low-level calls not used.
        whale.call.value(amount)(bytes4(keccak256("donate()")));
        ^-----------------------------------------------------^
dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol:213:9: Warning: Return value of low-level calls not used.
        whale.call.value(amount)(bytes4(keccak256("donate()")));
        ^-----------------------------------------------------^


PoCGame.payout(address) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#185-192) sends eth to arbitrary user
	Dangerous calls:
	- winner.transfer(ethToTransfer) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#190)
PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#209-216) sends eth to arbitrary user
	Dangerous calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#213)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

PoCGame.play() (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#141-169) uses a weak PRNG: "winningNumber = uint256(keccak256()(abi.encodePacked(blockhash(uint256)(blockNumber),msg.sender))) % difficulty + 1 (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#153)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

PoCGame.donateToWhale(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#197-204) ignores return value by whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#201)
PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#209-216) ignores return value by whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#213)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

PoCGame.constructor(address,uint256).whaleAddress (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#67) lacks a zero-check on :
		- whale = whaleAddress (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in PoCGame.donateToWhale(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#197-204):
	External calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#201)
	State variables written after the call(s):
	- totalDonated += amount (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#202)
Reentrancy in PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#209-216):
	External calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#213)
	State variables written after the call(s):
	- totalDonated += amount (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in PoCGame.donateToWhale(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#197-204):
	External calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#201)
	Event emitted after the call(s):
	- Donate(amount,whale,msg.sender) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#203)
Reentrancy in PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#209-216):
	External calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#213)
	Event emitted after the call(s):
	- Lose(amount,msg.sender) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#215)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in PoCGame.donateToWhale(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#197-204):
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#201)
Low level call in PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#209-216):
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#213)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function PoCGame.OpenToThePublic() (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#83-88) is not in mixedCase
Function PoCGame.AdjustBetAmounts(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#93-100) is not in mixedCase
Function PoCGame.AdjustDifficulty(uint256) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#105-112) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in PoCGame.payout(address) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#185-192):
	External calls:
	- winner.transfer(ethToTransfer) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#190)
	Event emitted after the call(s):
	- Win(ethToTransfer,winner) (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#191)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

PoCGame.randomSeed (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#57) is never used in PoCGame (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#9-291)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

PoCGame.randomSeed (dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol#57) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol analyzed (2 contracts with 93 detectors), 20 result(s) found
Switched global version to 0.4.10
generating... report/unchecked_low_level_calls/0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol:
dataset/unchecked_low_level_calls/0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol:12:9: Warning: Return value of low-level calls not used.
        a.call();
        ^------^


Caller.callAddress(address) () ignores return value by a.call() ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Caller.callAddress(address).a () lacks a zero-check on :
		- a.call() ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.10 () allows old versions
solc-0.4.10 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Caller.callAddress(address) ():
	- a.call() ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/unchecked_low_level_calls/0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol analyzed (1 contracts with 93 detectors), 5 result(s) found
Switched global version to 0.4.11
generating... report/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:
dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:439:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        owner.send(this.balance - SubX);
        ^-----------------------------^
dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:465:3: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
		owner.send(this.balance);
		^----------------------^


daoPOLSKAtokens.FundsTransfer() (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#431-434) sends eth to arbitrary user
	Dangerous calls:
	- ! owner.send(this.balance) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#433)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

daoPOLSKAtokens.sendTokenAw(address,address,uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#366-376) ignores return value by t.coinContract.transfer(receiver,amount) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#374)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

Reentrancy in daoPOLSKAtokens.sendTokenAw(address,address,uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#366-376):
	External calls:
	- t.coinContract.transfer(receiver,amount) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#374)
	State variables written after the call(s):
	- numTransfers ++ (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#375)
	daoPOLSKAtokens.numTransfers (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#186) can be used in cross function reentrancies:
	- daoPOLSKAtokens.sendTokenAw(address,address,uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#366-376)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

daoPOLSKAtokens.PartialFundsTransfer(uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#436-440) ignores return value by owner.send(this.balance - SubX) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#439)
daoPOLSKAtokens.finalize() (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#457-466) ignores return value by owner.send(this.balance) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#465)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

SafeMath.assert(bool) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#75-79) (function) shadows built-in symbol"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#builtin-symbol-shadowing

daoPOLSKAtokens.setSupply(uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#209-220) should emit an event for: 
	- supplylimit = supplyLOCKER ** uint256(decimals) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#218) 
daoPOLSKAtokens.setBonusCreationRate(uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#424-429) should emit an event for: 
	- CreationRate = tokenCreationRate + bonusCreationRate (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#427) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

daoPOLSKAtokens.setChainsAddresses(address,int256).chainAd (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#349) lacks a zero-check on :
		- Chain1 = chainAd (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#354)
		- Chain2 = chainAd (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#355)
		- Chain3 = chainAd (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#356)
		- Chain4 = chainAd (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#357)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in daoPOLSKAtokens.migrate(uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#467-481):
	External calls:
	- MigrationAgent(migrationAgent).migrateFrom(msg.sender,_value) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#479)
	Event emitted after the call(s):
	- Migrate(msg.sender,migrationAgent,_value) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#480)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

daoPOLSKAtokens.setSupply(uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#209-220) compares to a boolean constant:
	-supplylimitset != false (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#213)
daoPOLSKAtokens.setotherchainstotalsupply(uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#221-232) compares to a boolean constant:
	-supplylimitset != false (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#225)
daoPOLSKAtokens.FundsTransfer() (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#431-434) compares to a boolean constant:
	-funding == true (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#432)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

SafeMath.max256(uint256,uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#67-69) is never used and should be removed
SafeMath.max64(uint64,uint64) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#59-61) is never used and should be removed
SafeMath.min256(uint256,uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#71-73) is never used and should be removed
SafeMath.min64(uint64,uint64) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#63-65) is never used and should be removed
SafeMath.safeDiv(uint256,uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#41-46) is never used and should be removed
SafeMath.safeMul(uint256,uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#35-39) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#77):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#134):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#211):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#214):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#223):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#226):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#330):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#341):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#352):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#368):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#389):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#392):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#395):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#432):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#433):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#437):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#442):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#447):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#451):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#458):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#469):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#473):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#474):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#485):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#486):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#490):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.11 (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#8) allows old versions
solc-0.4.11 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

daoPOLSKAtokens (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#151-503) should inherit from ERC20 (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#17-27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance

Contract tokenRecipient (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#9) is not in CapWords
Parameter StandardToken.transfer(address,uint256)._to (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#107) is not in mixedCase
Parameter StandardToken.transfer(address,uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#107) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#114) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#114) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#114) is not in mixedCase
Parameter StandardToken.balanceOf(address)._owner (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#124) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#128) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#128) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#141) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#141) is not in mixedCase
Contract daoPOLSKAtokens (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#151-503) is not in CapWords
Struct daoPOLSKAtokens.sendTokenAway (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#180-184) is not in CapWords
Event daoPOLSKAtokens.receivedEther(address,uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#195) is not in CapWords
Parameter daoPOLSKAtokens.approveAndCall(address,uint256,bytes)._spender (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#242) is not in mixedCase
Parameter daoPOLSKAtokens.approveAndCall(address,uint256,bytes)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#242) is not in mixedCase
Parameter daoPOLSKAtokens.approveAndCall(address,uint256,bytes)._extraData (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#242) is not in mixedCase
Parameter daoPOLSKAtokens.burn(uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#259) is not in mixedCase
Parameter daoPOLSKAtokens.burnFrom(address,uint256)._from (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#275) is not in mixedCase
Parameter daoPOLSKAtokens.burnFrom(address,uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#275) is not in mixedCase
Parameter daoPOLSKAtokens.transfer(address,uint256)._to (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#285) is not in mixedCase
Parameter daoPOLSKAtokens.transfer(address,uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#285) is not in mixedCase
Parameter daoPOLSKAtokens.transferFrom(address,address,uint256)._from (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#298) is not in mixedCase
Parameter daoPOLSKAtokens.transferFrom(address,address,uint256)._to (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#298) is not in mixedCase
Parameter daoPOLSKAtokens.transferFrom(address,address,uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#298) is not in mixedCase
Parameter daoPOLSKAtokens.balanceOf(address)._owner (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#310) is not in mixedCase
Parameter daoPOLSKAtokens.approve(address,uint256)._spender (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#314) is not in mixedCase
Parameter daoPOLSKAtokens.approve(address,uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#314) is not in mixedCase
Parameter daoPOLSKAtokens.allowance(address,address)._owner (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#320) is not in mixedCase
Parameter daoPOLSKAtokens.allowance(address,address)._spender (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#320) is not in mixedCase
Parameter daoPOLSKAtokens.setTokenInformation(string,string)._name (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#338) is not in mixedCase
Parameter daoPOLSKAtokens.setTokenInformation(string,string)._symbol (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#338) is not in mixedCase
Function daoPOLSKAtokens.DAOPolskaTokenICOregulations() (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#360-362) is not in mixedCase
Parameter daoPOLSKAtokens.sendTokenAw(address,address,uint256).StandardTokenAddress (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#366) is not in mixedCase
Function daoPOLSKAtokens.FundsTransfer() (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#431-434) is not in mixedCase
Function daoPOLSKAtokens.PartialFundsTransfer(uint256) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#436-440) is not in mixedCase
Parameter daoPOLSKAtokens.PartialFundsTransfer(uint256).SubX (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#436) is not in mixedCase
Parameter daoPOLSKAtokens.migrate(uint256)._value (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#467) is not in mixedCase
Variable daoPOLSKAtokens.Chain1 (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#167) is not in mixedCase
Variable daoPOLSKAtokens.Chain2 (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#168) is not in mixedCase
Variable daoPOLSKAtokens.Chain3 (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#169) is not in mixedCase
Variable daoPOLSKAtokens.Chain4 (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#170) is not in mixedCase
Variable daoPOLSKAtokens.CreationRate (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#381) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

StandardToken.balancesRAW (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#98) is never used in StandardToken (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#90-147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

ERC20.totalSupply (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#18) should be constant 
daoPOLSKAtokens.fundingEndBlock (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#383) should be constant 
daoPOLSKAtokens.migrationAgent (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#172) should be constant 
daoPOLSKAtokens.tokenCreationRate (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#379) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#9)
approveAndCall(address,uint256,bytes) should be declared external:
	- daoPOLSKAtokens.approveAndCall(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#242-250)
setTokenInformation(string,string) should be declared external:
	- daoPOLSKAtokens.setTokenInformation(string,string) (dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#338-347)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol analyzed (6 contracts with 93 detectors), 99 result(s) found
Switched global version to 0.4.25
generating... report/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol:
dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol:14:13: Warning: Return value of low-level calls not used.
            caddress.call(id,from,_tos[i],v[i]);
            ^---------------------------------^


demo.transfer(address,address,address[],uint256[]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#9-17) ignores return value by caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

demo.transfer(address,address,address[],uint256[]).from (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#9) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#14)
demo.transfer(address,address,address[],uint256[]).caddress (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#9) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

demo.transfer(address,address,address[],uint256[]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#9-17) has external calls inside a loop: caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.25 (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in demo.transfer(address,address,address[],uint256[]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#9-17):
	- caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract demo (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#8-19) is not in CapWords
Parameter demo.transfer(address,address,address[],uint256[])._tos (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#9) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

transfer(address,address,address[],uint256[]) should be declared external:
	- demo.transfer(address,address,address[],uint256[]) (dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol#9-17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol:
dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol:61:5: Warning: No visibility specified. Defaulting to "public".
    function()
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol:67:5: Warning: No visibility specified. Defaulting to "public".
    function Deposit() 
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol:44:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
                          ^-------------------------------^
dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol:44:9: Warning: Return value of low-level calls not used.
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
        ^-------------------------------------------------------------^


Token.owner (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#38) shadows:
	- Ownable.owner (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#12)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

Contract locking ether found:
	Contract TokenBank (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#48-105) has payable functions:
	 - TokenBank.fallback() (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#61-65)
	 - TokenBank.Deposit() (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#67-74)
	 - TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#87-101)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether

Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#39-45) ignores return value by token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Token.WithdrawToken(address,uint256,address).to (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#44)
Token.WithdrawToken(address,uint256,address).token (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#44)
Ownable.changeOwner(address).addr (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#14) lacks a zero-check on :
		- newOwner = addr (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Ownable.onlyOwner() (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#30-33) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Deprecated standard detected token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#44):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#39-45):
	- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#39-45) is not in mixedCase
Function TokenBank.Deposit() (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#67-74) is not in mixedCase
Function TokenBank.WitdrawTokenToHolder(address,address,uint256) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#76-85) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._to (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#76) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._token (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#76) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._amount (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#76) is not in mixedCase
Function TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#87-101) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._addr (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#87) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._wei (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#87) is not in mixedCase
Variable TokenBank.MinDeposit (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#50) is not in mixedCase
Variable TokenBank.Holders (dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol#51) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/unchecked_low_level_calls/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol analyzed (3 contracts with 93 detectors), 22 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol:
dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol:61:5: Warning: No visibility specified. Defaulting to "public".
    function()
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol:67:5: Warning: No visibility specified. Defaulting to "public".
    function Deposit() 
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol:44:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
                          ^-------------------------------^
dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol:44:9: Warning: Return value of low-level calls not used.
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
        ^-------------------------------------------------------------^


Token.owner (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#38) shadows:
	- Ownable.owner (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#12)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

Contract locking ether found:
	Contract TokenBank (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#48-105) has payable functions:
	 - TokenBank.fallback() (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#61-65)
	 - TokenBank.Deposit() (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#67-74)
	 - TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#87-101)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether

Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#39-45) ignores return value by token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Token.WithdrawToken(address,uint256,address).to (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#44)
Token.WithdrawToken(address,uint256,address).token (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#44)
Ownable.changeOwner(address).addr (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#14) lacks a zero-check on :
		- newOwner = addr (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Ownable.onlyOwner() (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#30-33) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Deprecated standard detected token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#44):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#39-45):
	- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#39-45) is not in mixedCase
Function TokenBank.Deposit() (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#67-74) is not in mixedCase
Function TokenBank.WitdrawTokenToHolder(address,address,uint256) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#76-85) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._to (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#76) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._token (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#76) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._amount (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#76) is not in mixedCase
Function TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#87-101) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._addr (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#87) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._wei (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#87) is not in mixedCase
Function TokenBank.Bal() (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#103) is not in mixedCase
Variable TokenBank.MinDeposit (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#50) is not in mixedCase
Variable TokenBank.Holders (dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol#51) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/unchecked_low_level_calls/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol analyzed (3 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol:
dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol:29:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


MultiplicatorX4.Command(address,bytes) (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#23-30) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

MultiplicatorX4.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#23) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#29)
MultiplicatorX4.multiplicate(address).adr (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#32) lacks a zero-check on :
		- adr.transfer(this.balance + msg.value) (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in MultiplicatorX4.Command(address,bytes) (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#23-30):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function MultiplicatorX4.Command(address,bytes) (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#23-30) is not in mixedCase
Variable MultiplicatorX4.Owner (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- MultiplicatorX4.Command(address,bytes) (dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol#23-30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol analyzed (1 contracts with 93 detectors), 9 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol:
dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol:45:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


WhaleGiveaway2.redeem() (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#21-29) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

WhaleGiveaway2.Command(address,bytes) (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#39-46) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

WhaleGiveaway2.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#39) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in WhaleGiveaway2.Command(address,bytes) (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#39-46):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function WhaleGiveaway2.Command(address,bytes) (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#39-46) is not in mixedCase
Variable WhaleGiveaway2.Owner (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- WhaleGiveaway2.Command(address,bytes) (dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#39-46)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol analyzed (1 contracts with 93 detectors), 9 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol:
dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol:16:13: Warning: Return value of low-level calls not used.
            caddress.call(id,from,_tos[i],v);
            ^------------------------------^


airdrop.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#11-19) ignores return value by caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

airdrop.transfer(address,address,address[],uint256).caddress (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#11) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#16)
airdrop.transfer(address,address,address[],uint256).from (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#11) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

airdrop.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#11-19) has external calls inside a loop: caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in airdrop.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#11-19):
	- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract airdrop (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#9-21) is not in CapWords
Parameter airdrop.transfer(address,address,address[],uint256)._tos (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

transfer(address,address,address[],uint256) should be declared external:
	- airdrop.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol#11-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x4051334adc52057aca763453820cb0e045076ef3.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol:
dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol:19:13: Warning: Return value of low-level calls not used.
            caddress.call(id,from,_tos[i],v[i]*1000000000000000000);
            ^-----------------------------------------------------^


EBU.transfer(address[],uint256[]) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#13-22) ignores return value by caddress.call(id,from,_tos[i],v[i] * 1000000000000000000) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

EBU.transfer(address[],uint256[]) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#13-22) has external calls inside a loop: caddress.call(id,from,_tos[i],v[i] * 1000000000000000000) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in EBU.transfer(address[],uint256[]) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#13-22):
	- caddress.call(id,from,_tos[i],v[i] * 1000000000000000000) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter EBU.transfer(address[],uint256[])._tos (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#13) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

EBU.transfer(address[],uint256[]) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#13-22) uses literals with too many digits:
	- caddress.call(id,from,_tos[i],v[i] * 1000000000000000000) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

EBU.caddress (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#11) should be constant 
EBU.from (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#10) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

transfer(address[],uint256[]) should be declared external:
	- EBU.transfer(address[],uint256[]) (dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol#13-22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol:
dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol:17:13: Warning: Return value of low-level calls not used.
            caddress.call(id,from,_tos[i],v);
            ^------------------------------^


airPort.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12-20) ignores return value by caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

airPort.transfer(address,address,address[],uint256).from (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#17)
airPort.transfer(address,address,address[],uint256).caddress (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

airPort.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12-20) has external calls inside a loop: caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in airPort.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12-20):
	- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract airPort (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#10-22) is not in CapWords
Parameter airPort.transfer(address,address,address[],uint256)._tos (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

transfer(address,address,address[],uint256) should be declared external:
	- airPort.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12-20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.13
generating... report/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol:
dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol:13:22: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
		contract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a;
		                   ^----------------------------------------^
dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol:19:8: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
		c2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79;	
		     ^----------------------------------------^
dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol:21:3: Warning: Return value of low-level calls not used.
		contract_address.call("register", "CentraToken");
		^----------------------------------------------^
dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol:14:3: Warning: Unused local variable
		address c1;		
		^--------^


Centra4.transfer() (dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol#11-25) ignores return value by contract_address.call(register,CentraToken) (dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Pragma version^0.4.13 (dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol#7) allows old versions
solc-0.4.13 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Centra4.transfer() (dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol#11-25):
	- contract_address.call(register,CentraToken) (dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol#21)
	- ! contract_address.call(bytes4(keccak256()(transfer(address,uint256))),c2,k) (dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol#22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/unchecked_low_level_calls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol:
dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol:9:5: Warning: No visibility specified. Defaulting to "public".
    function transfer(address _to, uint _value) returns (bool success);
    ^-----------------------------------------------------------------^
dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol:10:5: Warning: No visibility specified. Defaulting to "public".
    function balanceOf(address _owner) constant returns (uint balance);
    ^-----------------------------------------------------------------^
dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol:14:5: Warning: No visibility specified. Defaulting to "public".
    function EtherGet() {
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol:27:13: Warning: Return value of low-level calls not used.
            addr.call.value(0 wei)();
            ^----------------------^


EtherGet.withdrawEther() (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#21-23) sends eth to arbitrary user
	Dangerous calls:
	- owner.transfer(this.balance) (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#22)
EtherGet.getTokens(uint256,address) (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#24-29) sends eth to arbitrary user
	Dangerous calls:
	- addr.call.value(0)() (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

EtherGet.withdrawTokens(address) (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#17-20) ignores return value by tc.transfer(owner,tc.balanceOf(this)) (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

EtherGet.getTokens(uint256,address) (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#24-29) ignores return value by addr.call.value(0)() (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

EtherGet.getTokens(uint256,address).addr (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#24) lacks a zero-check on :
		- addr.call.value(0)() (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

EtherGet.getTokens(uint256,address) (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#24-29) has external calls inside a loop: addr.call.value(0)() (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in EtherGet.getTokens(uint256,address) (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#24-29):
	- addr.call.value(0)() (dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/unchecked_low_level_calls/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol analyzed (2 contracts with 93 detectors), 9 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol:
dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol:29:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


MultiplicatorX3.Command(address,bytes) (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#23-30) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

MultiplicatorX3.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#23) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#29)
MultiplicatorX3.multiplicate(address).adr (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#32) lacks a zero-check on :
		- adr.transfer(this.balance + msg.value) (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in MultiplicatorX3.Command(address,bytes) (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#23-30):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function MultiplicatorX3.Command(address,bytes) (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#23-30) is not in mixedCase
Variable MultiplicatorX3.Owner (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- MultiplicatorX3.Command(address,bytes) (dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol#23-30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol analyzed (1 contracts with 93 detectors), 9 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol:
dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol:33:9: Warning: Return value of low-level calls not used.
        _target.call.value(_value)(_data);
        ^-------------------------------^


SimpleWallet.sendMoney(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31-34) ignores return value by _target.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

SimpleWallet.sendMoney(address,uint256,bytes)._target (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31) lacks a zero-check on :
		- _target.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in SimpleWallet.sendMoney(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31-34):
	- _target.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter SimpleWallet.withdraw(uint256)._value (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#27) is not in mixedCase
Parameter SimpleWallet.sendMoney(address,uint256,bytes)._target (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31) is not in mixedCase
Parameter SimpleWallet.sendMoney(address,uint256,bytes)._value (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31) is not in mixedCase
Parameter SimpleWallet.sendMoney(address,uint256,bytes)._data (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

sendMoney(address,uint256,bytes) should be declared external:
	- SimpleWallet.sendMoney(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31-34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:
dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:61:5: Warning: No visibility specified. Defaulting to "public".
    function()
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:67:5: Warning: No visibility specified. Defaulting to "public".
    function Deposit() 
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:44:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
                          ^-------------------------------^
dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:44:9: Warning: Return value of low-level calls not used.
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
        ^-------------------------------------------------------------^


Reentrancy in TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#87-99):
	External calls:
	- _addr.call.value(_wei)() (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#94)
	State variables written after the call(s):
	- Holders[_addr] -= _wei (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#96)
	TokenBank.Holders (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#51) can be used in cross function reentrancies:
	- TokenBank.Deposit() (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#67-74)
	- TokenBank.Holders (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#51)
	- TokenBank.WitdrawTokenToHolder(address,address,uint256) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#76-85)
	- TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#87-99)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Token.owner (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#38) shadows:
	- Ownable.owner (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#12)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39-45) ignores return value by token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Token.WithdrawToken(address,uint256,address).token (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#44)
Token.WithdrawToken(address,uint256,address).to (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#44)
Ownable.changeOwner(address).addr (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#14) lacks a zero-check on :
		- newOwner = addr (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Ownable.onlyOwner() (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#30-33) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Deprecated standard detected token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#44):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39-45):
	- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#44)
Low level call in TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#87-99):
	- _addr.call.value(_wei)() (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#94)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#39-45) is not in mixedCase
Function TokenBank.Deposit() (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#67-74) is not in mixedCase
Function TokenBank.WitdrawTokenToHolder(address,address,uint256) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#76-85) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._to (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#76) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._token (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#76) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._amount (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#76) is not in mixedCase
Function TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#87-99) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._addr (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#87) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._wei (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#87) is not in mixedCase
Variable TokenBank.MinDeposit (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#50) is not in mixedCase
Variable TokenBank.Holders (dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#51) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol analyzed (3 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:35:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:770:9: Warning: Use of the "var" keyword is deprecated.
        var outputString = new string(_stringLength);
        ^--------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1474:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ClockAuction(address _nftAddress, uint256 _cut) public {
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1627:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SiringClockAuction(address _nftAddr, uint256 _cut) public
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1706:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaleClockAuction(address _nftAddr, uint256 _cut) public
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1858:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaleClockAuctionERC20(address _nftAddr, uint256 _cut) public
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:2360:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PandaCore() public {
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:404:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _tokenId);
        ^----------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:491:9: Warning: Invoking events without "emit" prefix is deprecated.
        Birth(
        ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:662:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _to, _tokenId);
        ^---------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1025:9: Warning: Invoking events without "emit" prefix is deprecated.
        Pregnant(pandaIndexToOwner[_matronId], _matronId, _sireId, matron.cooldownEndBlock);
        ^---------------------------------------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1131:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (uint256(keccak256(block.blockhash(block.number - 2), now)) % 100 < probability) {
                    ^-----------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1136:13: Warning: Invoking events without "emit" prefix is deprecated.
            Abortion(pandaIndexToOwner[_matronId], _matronId, sireId);
            ^-------------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1152:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(autoBirthFee);
        ^---------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1237:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionCreated(
        ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1249:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionCancelled(_tokenId);
        ^------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1310:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionSuccessful(_tokenId, price, msg.sender);
        ^--------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1444:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1453:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1496:36: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        bool res = nftAddress.send(this.balance);
                                   ^----------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1808:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 bHash = keccak256(block.blockhash(block.number),block.blockhash(block.number-1));
                        ^----------------------------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1918:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionERC20Created(
        ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:2013:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionSuccessful(_tokenId, price, msg.sender);
        ^--------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:2398:9: Warning: Invoking events without "emit" prefix is deprecated.
        ContractUpgrade(_v2Address);
        ^-------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:2461:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint256 balance = this.balance;
                          ^----------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:2467:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            cfoAddress.send(balance - subtractFees);
            ^-------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint supply);
    ^----------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:12:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf( address who ) constant returns (uint value);
    ^--------------------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance( address owner, address spender ) constant returns (uint _allowance);
    ^--------------------------------------------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer( address to, uint value) returns (bool ok);
    ^-----------------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom( address from, address to, uint value) returns (bool ok);
    ^-----------------------------------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:17:5: Warning: No visibility specified. Defaulting to "public". 
    function approve( address spender, uint value ) returns (bool ok);
    ^----------------------------------------------------------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:35:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:53:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1131:31: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        if (uint256(keccak256(block.blockhash(block.number - 2), now)) % 100 < probability) {
                              ^-------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1442:3: Warning: No visibility specified. Defaulting to "public". 
  function pause() onlyOwner whenNotPaused returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1451:3: Warning: No visibility specified. Defaulting to "public". 
  function unpause() onlyOwner whenPaused returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1496:9: Warning: Unused local variable.
        bool res = nftAddress.send(this.balance);
        ^------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1808:35: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        bytes32 bHash = keccak256(block.blockhash(block.number),block.blockhash(block.number-1));
                                  ^-------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1808:65: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        bytes32 bHash = keccak256(block.blockhash(block.number),block.blockhash(block.number-1));
                                                                ^-------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1927:18: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function bid(uint256 _tokenId)
                 ^--------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1939:9: Warning: Unused local variable.
        address seller = tokenIdToAuction[_tokenId].seller;
        ^------------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1942:9: Warning: Unused local variable.
        uint256 price = _bidERC20(_erc20address,msg.sender,_tokenId, _amount);
        ^-----------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:1958:88: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function withdrawERC20Balance(address _erc20Address, address _to) external returns(bool res)  {
                                                                                       ^------^
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:516:5: Warning: Function state mutability can be restricted to pure
    function getMetadata(uint256 _tokenId, string) public view returns (bytes32[4] buffer, uint256 count) {
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:747:5: Warning: Function state mutability can be restricted to pure
    function _memcpy(uint _dest, uint _src, uint _len) private view {
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol:990:5: Warning: Function state mutability can be restricted to view
    function _exchangeMatronSireId(uint256 _matronId, uint256 _sireId) internal returns(uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).


ClockAuctionBase._bid(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1254-1313) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(bidExcess) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1307)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

SaleClockAuction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1689-1836) contract sets array length with a user-controlled value:
	- CommonPanda.push(_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1798)
SaleClockAuction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1689-1836) contract sets array length with a user-controlled value:
	- RarePanda.push(_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1800)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158) uses a weak PRNG: "uint256(keccak256()(block.blockhash(block.number - 2),now)) % 100 < probability (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1131)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

Reentrancy in PandaAuction.bidOnSiringAuction(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2166-2186):
	External calls:
	- require(bool)(_canBreedWithViaAuction(_matronId,_sireId)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2177)
		- geneScience.getSex(_matron.genes) + geneScience.getSex(_sire.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#953)
	- currentPrice = siringAuction.getCurrentPrice(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2180)
	- siringAuction.bid.value(msg.value - autoBirthFee)(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2184)
	- _breedWith(uint32(_matronId),uint32(_sireId),msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2185)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	External calls sending eth:
	- siringAuction.bid.value(msg.value - autoBirthFee)(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2184)
	State variables written after the call(s):
	- _breedWith(uint32(_matronId),uint32(_sireId),msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2185)
		- matron.siringWithId = uint32(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1008)
	PandaBase.pandas (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#325) can be used in cross function reentrancies:
	- PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026)
	- PandaBreeding._canBreedWithViaAuction(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#963-970)
	- PandaBase._createPanda(uint256,uint256,uint256,uint256[2],address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#416-504)
	- PandaBreeding._exchangeMatronSireId(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#990-996)
	- PandaBreeding.breedWithAuto(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033-1081)
	- PandaBreeding.canBreedWith(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#978-988)
	- PandaBase.getWizzTypeOf(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#384-387)
	- PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158)
	- PandaBreeding.isPregnant(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#901-908)
	- PandaBreeding.isReadyToBreed(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#890-897)
	- PandaOwnership.totalSupply() (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#696-698)
Reentrancy in PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158):
	External calls:
	- probability = (geneScience.getPureFromGene(matron.genes) + geneScience.getPureFromGene(sire.genes)) / 2 + _factors[0] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1122)
	- kittenId = _createPanda(_matronId,matron.siringWithId,parentGen + 1,childGenes,owner) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1134)
		- pureDegree = uint16(geneScience.getPureFromGene(_genes)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#439)
		- _tp = geneScience.getWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#453)
		- _genes = geneScience.clearWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#455)
	External calls sending eth:
	- msg.sender.send(autoBirthFee) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1152)
	State variables written after the call(s):
	- delete childOwner[_matronId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1154)
	PandaBreeding.childOwner (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#810) can be used in cross function reentrancies:
	- PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026)
	- PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

SaleClockAuctionERC20.withdrawERC20Balance(address,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1958-1962) ignores return value by ERC20(_erc20Address).transfer(_to,balances[_erc20Address]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1961)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

PandaOwnership._memcpy(uint256,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#747-764) is declared view but contains assembly code
PandaOwnership._toString(bytes32[4],uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#769-782) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code

SaleClockAuction.bid(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1776-1791) uses a dangerous strict equality:
	- isGen0 == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1786)
PandaBreeding._exchangeMatronSireId(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#990-996) uses a dangerous strict equality:
	- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026):
	External calls:
	- (_matronId,_sireId) = _exchangeMatronSireId(_matronId,_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1002)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
	State variables written after the call(s):
	- matron.siringWithId = uint32(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1008)
	PandaBase.pandas (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#325) can be used in cross function reentrancies:
	- PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026)
	- PandaBase._createPanda(uint256,uint256,uint256,uint256[2],address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#416-504)
	- PandaBreeding._exchangeMatronSireId(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#990-996)
	- PandaBreeding.breedWithAuto(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033-1081)
	- PandaBreeding.canBreedWith(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#978-988)
	- PandaBase.getWizzTypeOf(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#384-387)
	- PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158)
	- PandaBreeding.isPregnant(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#901-908)
	- PandaBreeding.isReadyToBreed(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#890-897)
	- PandaOwnership.totalSupply() (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#696-698)
Reentrancy in PandaBase._createPanda(uint256,uint256,uint256,uint256[2],address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#416-504):
	External calls:
	- pureDegree = uint16(geneScience.getPureFromGene(_genes)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#439)
	- _tp = geneScience.getWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#453)
	- _genes = geneScience.clearWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#455)
	State variables written after the call(s):
	- newKittenId = pandas.push(_panda) - 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#484)
	PandaBase.pandas (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#325) can be used in cross function reentrancies:
	- PandaBase.getWizzTypeOf(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#384-387)
	- wizzPandaCount[_tp] = wizzPandaCount[_tp] + 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#465)
	PandaBase.wizzPandaCount (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#366) can be used in cross function reentrancies:
	- PandaBase.getWizzPandaCountOf(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#374-376)
	- PandaBase.wizzPandaCount (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#366)
Reentrancy in SaleClockAuctionERC20.bidERC20(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1935-1945):
	External calls:
	- price = _bidERC20(_erc20address,msg.sender,_tokenId,_amount) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1942)
		- require(bool)(ERC20(_erc20Address).transferFrom(_buyerAddress,seller,sellerProceeds)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2005)
		- require(bool)(ERC20(_erc20Address).transferFrom(_buyerAddress,address(this),auctioneerCut)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2007)
	- _transfer(msg.sender,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1943)
		- nonFungibleContract.transfer(_receiver,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1223)
	State variables written after the call(s):
	- delete tokenIdToErc20Address[_tokenId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1944)
	SaleClockAuctionERC20.tokenIdToErc20Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1851) can be used in cross function reentrancies:
	- SaleClockAuctionERC20._bidERC20(address,address,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1966-2016)
	- SaleClockAuctionERC20.bidERC20(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1935-1945)
	- SaleClockAuctionERC20.cancelAuction(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1947-1956)
	- SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1874-1905)
	- SaleClockAuctionERC20.tokenIdToErc20Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1851)
Reentrancy in PandaBreeding.breedWithAuto(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033-1081):
	External calls:
	- require(bool)(_isValidMatingPair(matron,_matronId,sire,_sireId)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1072-1077)
		- geneScience.getSex(_matron.genes) + geneScience.getSex(_sire.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#953)
	- _breedWith(_matronId,_sireId,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1080)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	State variables written after the call(s):
	- _breedWith(_matronId,_sireId,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1080)
		- matron.siringWithId = uint32(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1008)
	PandaBase.pandas (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#325) can be used in cross function reentrancies:
	- PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026)
	- PandaBase._createPanda(uint256,uint256,uint256,uint256[2],address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#416-504)
	- PandaBreeding._exchangeMatronSireId(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#990-996)
	- PandaBreeding.breedWithAuto(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033-1081)
	- PandaBreeding.canBreedWith(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#978-988)
	- PandaBase.getWizzTypeOf(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#384-387)
	- PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158)
	- PandaBreeding.isPregnant(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#901-908)
	- PandaBreeding.isReadyToBreed(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#890-897)
	- PandaOwnership.totalSupply() (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#696-698)
	- _breedWith(_matronId,_sireId,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1080)
		- delete sireAllowedToAddress[_matronId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1016)
		- delete sireAllowedToAddress[_sireId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1017)
	PandaBase.sireAllowedToAddress (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#343) can be used in cross function reentrancies:
	- PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026)
	- PandaBreeding._isSiringPermitted(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#838-845)
	- PandaBase._transfer(address,address,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#390-405)
	- PandaBreeding.approveSiring(address,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#867-872)
	- PandaBase.sireAllowedToAddress (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#343)
Reentrancy in PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158):
	External calls:
	- probability = (geneScience.getPureFromGene(matron.genes) + geneScience.getPureFromGene(sire.genes)) / 2 + _factors[0] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1122)
	- kittenId = _createPanda(_matronId,matron.siringWithId,parentGen + 1,childGenes,owner) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1134)
		- pureDegree = uint16(geneScience.getPureFromGene(_genes)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#439)
		- _tp = geneScience.getWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#453)
		- _genes = geneScience.clearWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#455)
	State variables written after the call(s):
	- kittenId = _createPanda(_matronId,matron.siringWithId,parentGen + 1,childGenes,owner) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1134)
		- newKittenId = pandas.push(_panda) - 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#484)
	PandaBase.pandas (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#325) can be used in cross function reentrancies:
	- PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026)
	- PandaBase._createPanda(uint256,uint256,uint256,uint256[2],address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#416-504)
	- PandaBreeding._exchangeMatronSireId(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#990-996)
	- PandaBreeding.breedWithAuto(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033-1081)
	- PandaBreeding.canBreedWith(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#978-988)
	- PandaBase.getWizzTypeOf(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#384-387)
	- PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158)
	- PandaBreeding.isPregnant(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#901-908)
	- PandaBreeding.isReadyToBreed(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#890-897)
	- PandaOwnership.totalSupply() (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#696-698)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158) ignores return value by msg.sender.send(autoBirthFee) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1152)
PandaCore.withdrawBalance() (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2460-2469) ignores return value by cfoAddress.send(balance - subtractFees) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2467)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

PandaAuction.withdrawERC20Balance(address,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2197-2200) ignores return value by saleAuctionERC20.withdrawERC20Balance(_erc20Address,_to) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2199)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Ownable.transferOwnership(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#53-57) should emit an event for: 
	- owner = newOwner (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#55) 
PandaAccessControl.setCEO(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#168-172) should emit an event for: 
	- ceoAddress = _newCEO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#171) 
	- ceoAddress = _newCEO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#171) 
PandaAccessControl.setCFO(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#176-180) should emit an event for: 
	- cfoAddress = _newCFO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#179) 
	- cfoAddress = _newCFO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#179) 
PandaAccessControl.setCOO(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#184-188) should emit an event for: 
	- cooAddress = _newCOO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#187) 
	- cooAddress = _newCOO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#187) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

PandaCore.setNewAddress(address)._v2Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2395) lacks a zero-check on :
		- newContractAddress = _v2Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2397)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in SaleClockAuctionERC20._bidERC20(address,address,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1966-2016):
	External calls:
	- require(bool)(ERC20(_erc20Address).transferFrom(_buyerAddress,seller,sellerProceeds)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2005)
	- require(bool)(ERC20(_erc20Address).transferFrom(_buyerAddress,address(this),auctioneerCut)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2007)
	State variables written after the call(s):
	- balances[_erc20Address] += auctioneerCut (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2008)
Reentrancy in PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026):
	External calls:
	- (_matronId,_sireId) = _exchangeMatronSireId(_matronId,_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1002)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
	- _triggerCooldown(sire) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1011)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	- _triggerCooldown(matron) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1012)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	State variables written after the call(s):
	- childOwner[_matronId] = _owner (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1022)
	- pregnantPandas ++ (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1020)
	- delete sireAllowedToAddress[_matronId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1016)
	- delete sireAllowedToAddress[_sireId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1017)
Reentrancy in PandaBase._createPanda(uint256,uint256,uint256,uint256[2],address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#416-504):
	External calls:
	- pureDegree = uint16(geneScience.getPureFromGene(_genes)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#439)
	- _tp = geneScience.getWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#453)
	- _genes = geneScience.clearWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#455)
	State variables written after the call(s):
	- gen0CreatedCount ++ (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#470)
	- _transfer(0,_owner,newKittenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#501)
		- ownershipTokenCount[_to] ++ (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#392)
		- ownershipTokenCount[_from] -- (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#397)
	- _transfer(0,_owner,newKittenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#501)
		- delete pandaIndexToApproved[_tokenId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#401)
	- _transfer(0,_owner,newKittenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#501)
		- pandaIndexToOwner[_tokenId] = _to (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#394)
	- _transfer(0,_owner,newKittenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#501)
		- delete sireAllowedToAddress[_tokenId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#399)
Reentrancy in SaleClockAuction.bid(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1776-1791):
	External calls:
	- _transfer(msg.sender,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1783)
		- nonFungibleContract.transfer(_receiver,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1223)
	External calls sending eth:
	- price = _bid(_tokenId,msg.value) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1782)
		- seller.transfer(sellerProceeds) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1295)
		- msg.sender.transfer(bidExcess) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1307)
	State variables written after the call(s):
	- gen0SaleCount ++ (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1789)
	- lastGen0SalePrices[gen0SaleCount % 5] = price (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1788)
Reentrancy in PandaAuction.bidOnSiringAuction(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2166-2186):
	External calls:
	- require(bool)(_canBreedWithViaAuction(_matronId,_sireId)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2177)
		- geneScience.getSex(_matron.genes) + geneScience.getSex(_sire.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#953)
	- currentPrice = siringAuction.getCurrentPrice(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2180)
	- siringAuction.bid.value(msg.value - autoBirthFee)(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2184)
	- _breedWith(uint32(_matronId),uint32(_sireId),msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2185)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	External calls sending eth:
	- siringAuction.bid.value(msg.value - autoBirthFee)(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2184)
	State variables written after the call(s):
	- _breedWith(uint32(_matronId),uint32(_sireId),msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2185)
		- childOwner[_matronId] = _owner (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1022)
Reentrancy in PandaBreeding.breedWithAuto(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033-1081):
	External calls:
	- require(bool)(_isValidMatingPair(matron,_matronId,sire,_sireId)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1072-1077)
		- geneScience.getSex(_matron.genes) + geneScience.getSex(_sire.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#953)
	- _breedWith(_matronId,_sireId,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1080)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	State variables written after the call(s):
	- _breedWith(_matronId,_sireId,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1080)
		- childOwner[_matronId] = _owner (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1022)
Reentrancy in SaleClockAuctionERC20.cancelAuction(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1947-1956):
	External calls:
	- _cancelAuction(_tokenId,seller) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1954)
		- nonFungibleContract.transfer(_receiver,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1223)
	State variables written after the call(s):
	- delete tokenIdToErc20Address[_tokenId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1955)
Reentrancy in ClockAuction.createAuction(uint256,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1506-1533):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1522)
		- (nonFungibleContract.ownerOf(_tokenId) == _claimant) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1205)
	- _escrow(msg.sender,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1523)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	State variables written after the call(s):
	- _addAuction(_tokenId,auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1532)
		- tokenIdToAuction[_tokenId] = _auction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1235)
Reentrancy in SiringClockAuction.createAuction(uint256,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1637-1663):
	External calls:
	- _escrow(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1653)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	State variables written after the call(s):
	- _addAuction(_tokenId,auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1662)
		- tokenIdToAuction[_tokenId] = _auction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1235)
Reentrancy in SaleClockAuction.createAuction(uint256,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1718-1744):
	External calls:
	- _escrow(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1734)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	State variables written after the call(s):
	- _addAuction(_tokenId,auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1743)
		- tokenIdToAuction[_tokenId] = _auction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1235)
Reentrancy in SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1874-1905):
	External calls:
	- _escrow(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1894)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	State variables written after the call(s):
	- _addAuctionERC20(_tokenId,auction,_erc20Address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1903)
		- tokenIdToAuction[_tokenId] = _auction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1916)
	- tokenIdToErc20Address[_tokenId] = _erc20Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1904)
Reentrancy in SaleClockAuction.createGen0Auction(uint256,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1746-1772):
	External calls:
	- _escrow(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1762)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	State variables written after the call(s):
	- _addAuction(_tokenId,auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1771)
		- tokenIdToAuction[_tokenId] = _auction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1235)
Reentrancy in PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158):
	External calls:
	- probability = (geneScience.getPureFromGene(matron.genes) + geneScience.getPureFromGene(sire.genes)) / 2 + _factors[0] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1122)
	- kittenId = _createPanda(_matronId,matron.siringWithId,parentGen + 1,childGenes,owner) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1134)
		- pureDegree = uint16(geneScience.getPureFromGene(_genes)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#439)
		- _tp = geneScience.getWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#453)
		- _genes = geneScience.clearWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#455)
	State variables written after the call(s):
	- kittenId = _createPanda(_matronId,matron.siringWithId,parentGen + 1,childGenes,owner) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1134)
		- pandaIndexToOwner[_tokenId] = _to (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#394)
	- pregnantPandas -- (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1148)
Reentrancy in PandaBreeding.setGeneScienceAddress(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#815-823):
	External calls:
	- require(bool)(candidateContract.isGeneScience()) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#819)
	State variables written after the call(s):
	- geneScience = candidateContract (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#822)
Reentrancy in PandaAuction.setSaleAuctionAddress(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2032-2040):
	External calls:
	- require(bool)(candidateContract.isSaleClockAuction()) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2036)
	State variables written after the call(s):
	- saleAuction = candidateContract (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2039)
Reentrancy in PandaAuction.setSaleAuctionERC20Address(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2042-2050):
	External calls:
	- require(bool)(candidateContract.isSaleClockAuctionERC20()) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2046)
	State variables written after the call(s):
	- saleAuctionERC20 = candidateContract (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2049)
Reentrancy in PandaAuction.setSiringAuctionAddress(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2054-2062):
	External calls:
	- require(bool)(candidateContract.isSiringClockAuction()) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2058)
	State variables written after the call(s):
	- siringAuction = candidateContract (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2061)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in SaleClockAuctionERC20._bidERC20(address,address,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1966-2016):
	External calls:
	- require(bool)(ERC20(_erc20Address).transferFrom(_buyerAddress,seller,sellerProceeds)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2005)
	- require(bool)(ERC20(_erc20Address).transferFrom(_buyerAddress,address(this),auctioneerCut)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2007)
	Event emitted after the call(s):
	- AuctionSuccessful(_tokenId,price,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2013)
Reentrancy in PandaBreeding._breedWith(uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1000-1026):
	External calls:
	- (_matronId,_sireId) = _exchangeMatronSireId(_matronId,_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1002)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
	- _triggerCooldown(sire) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1011)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	- _triggerCooldown(matron) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1012)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	Event emitted after the call(s):
	- Pregnant(pandaIndexToOwner[_matronId],_matronId,_sireId,matron.cooldownEndBlock) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1025)
Reentrancy in ClockAuctionBase._cancelAuction(uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1246-1250):
	External calls:
	- _transfer(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1248)
		- nonFungibleContract.transfer(_receiver,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1223)
	Event emitted after the call(s):
	- AuctionCancelled(_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1249)
Reentrancy in PandaBase._createPanda(uint256,uint256,uint256,uint256[2],address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#416-504):
	External calls:
	- pureDegree = uint16(geneScience.getPureFromGene(_genes)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#439)
	- _tp = geneScience.getWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#453)
	- _genes = geneScience.clearWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#455)
	Event emitted after the call(s):
	- Birth(_owner,newKittenId,uint256(_panda.matronId),uint256(_panda.sireId),_panda.genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#491-497)
	- Transfer(_from,_to,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#404)
		- _transfer(0,_owner,newKittenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#501)
Reentrancy in PandaAuction.bidOnSiringAuction(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2166-2186):
	External calls:
	- require(bool)(_canBreedWithViaAuction(_matronId,_sireId)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2177)
		- geneScience.getSex(_matron.genes) + geneScience.getSex(_sire.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#953)
	- currentPrice = siringAuction.getCurrentPrice(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2180)
	- siringAuction.bid.value(msg.value - autoBirthFee)(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2184)
	- _breedWith(uint32(_matronId),uint32(_sireId),msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2185)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	External calls sending eth:
	- siringAuction.bid.value(msg.value - autoBirthFee)(_sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2184)
	Event emitted after the call(s):
	- Pregnant(pandaIndexToOwner[_matronId],_matronId,_sireId,matron.cooldownEndBlock) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1025)
		- _breedWith(uint32(_matronId),uint32(_sireId),msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2185)
Reentrancy in PandaBreeding.breedWithAuto(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033-1081):
	External calls:
	- require(bool)(_isValidMatingPair(matron,_matronId,sire,_sireId)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1072-1077)
		- geneScience.getSex(_matron.genes) + geneScience.getSex(_sire.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#953)
	- _breedWith(_matronId,_sireId,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1080)
		- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
		- _kitten.cooldownIndex < 8 && geneScience.getWizzType(_kitten.genes) != 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#858)
	Event emitted after the call(s):
	- Pregnant(pandaIndexToOwner[_matronId],_matronId,_sireId,matron.cooldownEndBlock) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1025)
		- _breedWith(_matronId,_sireId,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1080)
Reentrancy in ClockAuction.createAuction(uint256,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1506-1533):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1522)
		- (nonFungibleContract.ownerOf(_tokenId) == _claimant) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1205)
	- _escrow(msg.sender,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1523)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	Event emitted after the call(s):
	- AuctionCreated(uint256(_tokenId),uint256(_auction.startingPrice),uint256(_auction.endingPrice),uint256(_auction.duration)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1237-1242)
		- _addAuction(_tokenId,auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1532)
Reentrancy in SiringClockAuction.createAuction(uint256,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1637-1663):
	External calls:
	- _escrow(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1653)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	Event emitted after the call(s):
	- AuctionCreated(uint256(_tokenId),uint256(_auction.startingPrice),uint256(_auction.endingPrice),uint256(_auction.duration)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1237-1242)
		- _addAuction(_tokenId,auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1662)
Reentrancy in SaleClockAuction.createAuction(uint256,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1718-1744):
	External calls:
	- _escrow(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1734)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	Event emitted after the call(s):
	- AuctionCreated(uint256(_tokenId),uint256(_auction.startingPrice),uint256(_auction.endingPrice),uint256(_auction.duration)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1237-1242)
		- _addAuction(_tokenId,auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1743)
Reentrancy in SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1874-1905):
	External calls:
	- _escrow(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1894)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	Event emitted after the call(s):
	- AuctionERC20Created(uint256(_tokenId),uint256(_auction.startingPrice),uint256(_auction.endingPrice),uint256(_auction.duration),_erc20address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1918-1924)
		- _addAuctionERC20(_tokenId,auction,_erc20Address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1903)
Reentrancy in SaleClockAuction.createGen0Auction(uint256,uint256,uint256,uint256,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1746-1772):
	External calls:
	- _escrow(_seller,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1762)
		- nonFungibleContract.transferFrom(_owner,this,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1214)
	Event emitted after the call(s):
	- AuctionCreated(uint256(_tokenId),uint256(_auction.startingPrice),uint256(_auction.endingPrice),uint256(_auction.duration)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1237-1242)
		- _addAuction(_tokenId,auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1771)
Reentrancy in PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158):
	External calls:
	- probability = (geneScience.getPureFromGene(matron.genes) + geneScience.getPureFromGene(sire.genes)) / 2 + _factors[0] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1122)
	- kittenId = _createPanda(_matronId,matron.siringWithId,parentGen + 1,childGenes,owner) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1134)
		- pureDegree = uint16(geneScience.getPureFromGene(_genes)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#439)
		- _tp = geneScience.getWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#453)
		- _genes = geneScience.clearWizzType(_genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#455)
	Event emitted after the call(s):
	- Birth(_owner,newKittenId,uint256(_panda.matronId),uint256(_panda.sireId),_panda.genes) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#491-497)
		- kittenId = _createPanda(_matronId,matron.siringWithId,parentGen + 1,childGenes,owner) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1134)
	- Transfer(_from,_to,_tokenId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#404)
		- kittenId = _createPanda(_matronId,matron.siringWithId,parentGen + 1,childGenes,owner) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1134)
Reentrancy in PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158):
	External calls:
	- probability = (geneScience.getPureFromGene(matron.genes) + geneScience.getPureFromGene(sire.genes)) / 2 + _factors[0] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1122)
	Event emitted after the call(s):
	- Abortion(pandaIndexToOwner[_matronId],_matronId,sireId) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1136)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

PandaBase._createPanda(uint256,uint256,uint256,uint256[2],address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#416-504) uses timestamp for comparisons
	Dangerous comparisons:
	- pandas.length > 0 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#438)
PandaOwnership.tokensOfOwner(address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#718-742) uses timestamp for comparisons
	Dangerous comparisons:
	- catId <= totalCats (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#733)
PandaBreeding.isPregnant(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#901-908) uses timestamp for comparisons
	Dangerous comparisons:
	- pandas[_pandaId].siringWithId != 0 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#907)
PandaBreeding._exchangeMatronSireId(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#990-996) uses timestamp for comparisons
	Dangerous comparisons:
	- geneScience.getSex(pandas[_matronId].genes) == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#991)
PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158) uses timestamp for comparisons
	Dangerous comparisons:
	- uint256(keccak256()(block.blockhash(block.number - 2),now)) % 100 < probability (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1131)
ClockAuctionBase._bid(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1254-1313) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_bidAmount >= price) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1269)
	- price > 0 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1280)
ClockAuctionBase._currentPrice(ClockAuctionBase.Auction) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1333-1353) uses timestamp for comparisons
	Dangerous comparisons:
	- now > _auction.startedAt (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1343)
ClockAuctionBase._computeCurrentPrice(uint256,uint256,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1359-1394) uses timestamp for comparisons
	Dangerous comparisons:
	- _secondsPassed >= _duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1374)
SaleClockAuction.bid(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1776-1791) uses timestamp for comparisons
	Dangerous comparisons:
	- isGen0 == 1 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1786)
SaleClockAuctionERC20._addAuctionERC20(uint256,ClockAuctionBase.Auction,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1911-1925) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_auction.duration >= 60) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1914)
SaleClockAuctionERC20.withdrawERC20Balance(address,address) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1958-1962) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(balances[_erc20Address] > 0) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1959)
SaleClockAuctionERC20._bidERC20(address,address,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1966-2016) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_bidAmount >= price) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1985)
	- price > 0 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1996)
	- require(bool)(ERC20(_erc20Address).transferFrom(_buyerAddress,seller,sellerProceeds)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2005)
	- auctioneerCut > 0 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2006)
	- require(bool)(ERC20(_erc20Address).transferFrom(_buyerAddress,address(this),auctioneerCut)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2007)
PandaCore.init() (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2379-2387) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(pandas.length == 0) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2381)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

PandaOwnership._memcpy(uint256,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#747-764) uses assembly
	- INLINE ASM (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#750-753)
	- INLINE ASM (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#759-764)
PandaOwnership._toString(bytes32[4],uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#769-782) uses assembly
	- INLINE ASM (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#774-779)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

PandaOwnership._memcpy(uint256,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#747-764) is never used and should be removed
PandaOwnership._toString(bytes32[4],uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#769-782) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected uint256(keccak256()(block.blockhash(block.number - 2),now)) % 100 < probability (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1131):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected bHash = keccak256()(block.blockhash(block.number),block.blockhash(block.number - 1)) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1808):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter PandaAccessControl.setCEO(address)._newCEO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#168) is not in mixedCase
Parameter PandaAccessControl.setCFO(address)._newCFO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#176) is not in mixedCase
Parameter PandaAccessControl.setCOO(address)._newCOO (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#184) is not in mixedCase
Parameter PandaBase.getWizzPandaQuotaOf(uint256)._tp (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#370) is not in mixedCase
Parameter PandaBase.getWizzPandaCountOf(uint256)._tp (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#374) is not in mixedCase
Parameter PandaBase.setTotalWizzPandaOf(uint256,uint256)._tp (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#378) is not in mixedCase
Parameter PandaBase.setTotalWizzPandaOf(uint256,uint256)._total (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#378) is not in mixedCase
Parameter PandaBase.getWizzTypeOf(uint256)._id (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#384) is not in mixedCase
Parameter ERC721Metadata.getMetadata(uint256,string)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#516) is not in mixedCase
Parameter PandaOwnership.supportsInterface(bytes4)._interfaceID (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#568) is not in mixedCase
Parameter PandaOwnership.balanceOf(address)._owner (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#606) is not in mixedCase
Parameter PandaOwnership.transfer(address,uint256)._to (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#617) is not in mixedCase
Parameter PandaOwnership.transfer(address,uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#618) is not in mixedCase
Parameter PandaOwnership.approve(address,uint256)._to (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#649) is not in mixedCase
Parameter PandaOwnership.approve(address,uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#650) is not in mixedCase
Parameter PandaOwnership.transferFrom(address,address,uint256)._from (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#673) is not in mixedCase
Parameter PandaOwnership.transferFrom(address,address,uint256)._to (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#674) is not in mixedCase
Parameter PandaOwnership.transferFrom(address,address,uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#675) is not in mixedCase
Parameter PandaOwnership.ownerOf(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#702) is not in mixedCase
Parameter PandaOwnership.tokensOfOwner(address)._owner (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#718) is not in mixedCase
Constant PandaOwnership.InterfaceSignature_ERC165 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#550-551) is not in UPPER_CASE_WITH_UNDERSCORES
Constant PandaOwnership.InterfaceSignature_ERC721 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#553-563) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter PandaBreeding.setGeneScienceAddress(address)._address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#815) is not in mixedCase
Parameter PandaBreeding.approveSiring(address,uint256)._addr (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#867) is not in mixedCase
Parameter PandaBreeding.approveSiring(address,uint256)._sireId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#867) is not in mixedCase
Parameter PandaBreeding.isReadyToBreed(uint256)._pandaId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#890) is not in mixedCase
Parameter PandaBreeding.isPregnant(uint256)._pandaId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#901) is not in mixedCase
Parameter PandaBreeding.canBreedWith(uint256,uint256)._matronId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#978) is not in mixedCase
Parameter PandaBreeding.canBreedWith(uint256,uint256)._sireId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#978) is not in mixedCase
Parameter PandaBreeding.breedWithAuto(uint256,uint256)._matronId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033) is not in mixedCase
Parameter PandaBreeding.breedWithAuto(uint256,uint256)._sireId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1033) is not in mixedCase
Parameter PandaBreeding.giveBirth(uint256,uint256[2],uint256[2])._matronId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091) is not in mixedCase
Parameter PandaBreeding.giveBirth(uint256,uint256[2],uint256[2])._childGenes (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091) is not in mixedCase
Parameter PandaBreeding.giveBirth(uint256,uint256[2],uint256[2])._factors (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091) is not in mixedCase
Parameter ClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1507) is not in mixedCase
Parameter ClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._startingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1508) is not in mixedCase
Parameter ClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._endingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1509) is not in mixedCase
Parameter ClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1510) is not in mixedCase
Parameter ClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._seller (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1511) is not in mixedCase
Parameter ClockAuction.bid(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1538) is not in mixedCase
Parameter ClockAuction.cancelAuction(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1553) is not in mixedCase
Parameter ClockAuction.cancelAuctionWhenPaused(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1567) is not in mixedCase
Parameter ClockAuction.getAuction(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1579) is not in mixedCase
Parameter ClockAuction.getCurrentPrice(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1603) is not in mixedCase
Constant ClockAuction.InterfaceSignature_ERC721 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1466) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter SiringClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1638) is not in mixedCase
Parameter SiringClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._startingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1639) is not in mixedCase
Parameter SiringClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._endingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1640) is not in mixedCase
Parameter SiringClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1641) is not in mixedCase
Parameter SiringClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._seller (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1642) is not in mixedCase
Parameter SiringClockAuction.bid(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1669) is not in mixedCase
Parameter SaleClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1719) is not in mixedCase
Parameter SaleClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._startingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1720) is not in mixedCase
Parameter SaleClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._endingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1721) is not in mixedCase
Parameter SaleClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1722) is not in mixedCase
Parameter SaleClockAuction.createAuction(uint256,uint256,uint256,uint256,address)._seller (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1723) is not in mixedCase
Parameter SaleClockAuction.createGen0Auction(uint256,uint256,uint256,uint256,address)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1747) is not in mixedCase
Parameter SaleClockAuction.createGen0Auction(uint256,uint256,uint256,uint256,address)._startingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1748) is not in mixedCase
Parameter SaleClockAuction.createGen0Auction(uint256,uint256,uint256,uint256,address)._endingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1749) is not in mixedCase
Parameter SaleClockAuction.createGen0Auction(uint256,uint256,uint256,uint256,address)._duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1750) is not in mixedCase
Parameter SaleClockAuction.createGen0Auction(uint256,uint256,uint256,uint256,address)._seller (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1751) is not in mixedCase
Parameter SaleClockAuction.bid(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1776) is not in mixedCase
Parameter SaleClockAuction.createPanda(uint256,uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1793) is not in mixedCase
Parameter SaleClockAuction.createPanda(uint256,uint256)._type (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1793) is not in mixedCase
Variable SaleClockAuction.CommonPanda (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1700) is not in mixedCase
Variable SaleClockAuction.RarePanda (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1701) is not in mixedCase
Variable SaleClockAuction.CommonPandaIndex (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1702) is not in mixedCase
Variable SaleClockAuction.RarePandaIndex (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1703) is not in mixedCase
Parameter SaleClockAuctionERC20.erc20ContractSwitch(address,uint256)._erc20address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1861) is not in mixedCase
Parameter SaleClockAuctionERC20.erc20ContractSwitch(address,uint256)._onoff (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1861) is not in mixedCase
Parameter SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1875) is not in mixedCase
Parameter SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address)._erc20Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1876) is not in mixedCase
Parameter SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address)._startingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1877) is not in mixedCase
Parameter SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address)._endingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1878) is not in mixedCase
Parameter SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address)._duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1879) is not in mixedCase
Parameter SaleClockAuctionERC20.createAuction(uint256,address,uint256,uint256,uint256,address)._seller (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1880) is not in mixedCase
Parameter SaleClockAuctionERC20.bidERC20(uint256,uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1935) is not in mixedCase
Parameter SaleClockAuctionERC20.bidERC20(uint256,uint256)._amount (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1935) is not in mixedCase
Parameter SaleClockAuctionERC20.cancelAuction(uint256)._tokenId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1947) is not in mixedCase
Parameter SaleClockAuctionERC20.withdrawERC20Balance(address,address)._erc20Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1958) is not in mixedCase
Parameter SaleClockAuctionERC20.withdrawERC20Balance(address,address)._to (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1958) is not in mixedCase
Parameter PandaAuction.setSaleAuctionAddress(address)._address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2032) is not in mixedCase
Parameter PandaAuction.setSaleAuctionERC20Address(address)._address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2042) is not in mixedCase
Parameter PandaAuction.setSiringAuctionAddress(address)._address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2054) is not in mixedCase
Parameter PandaAuction.createSaleAuction(uint256,uint256,uint256,uint256)._pandaId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2067) is not in mixedCase
Parameter PandaAuction.createSaleAuction(uint256,uint256,uint256,uint256)._startingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2068) is not in mixedCase
Parameter PandaAuction.createSaleAuction(uint256,uint256,uint256,uint256)._endingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2069) is not in mixedCase
Parameter PandaAuction.createSaleAuction(uint256,uint256,uint256,uint256)._duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2070) is not in mixedCase
Parameter PandaAuction.createSaleAuctionERC20(uint256,address,uint256,uint256,uint256)._pandaId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2098) is not in mixedCase
Parameter PandaAuction.createSaleAuctionERC20(uint256,address,uint256,uint256,uint256)._erc20address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2099) is not in mixedCase
Parameter PandaAuction.createSaleAuctionERC20(uint256,address,uint256,uint256,uint256)._startingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2100) is not in mixedCase
Parameter PandaAuction.createSaleAuctionERC20(uint256,address,uint256,uint256,uint256)._endingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2101) is not in mixedCase
Parameter PandaAuction.createSaleAuctionERC20(uint256,address,uint256,uint256,uint256)._duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2102) is not in mixedCase
Parameter PandaAuction.switchSaleAuctionERC20For(address,uint256)._erc20address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2128) is not in mixedCase
Parameter PandaAuction.switchSaleAuctionERC20For(address,uint256)._onoff (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2128) is not in mixedCase
Parameter PandaAuction.createSiringAuction(uint256,uint256,uint256,uint256)._pandaId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2137) is not in mixedCase
Parameter PandaAuction.createSiringAuction(uint256,uint256,uint256,uint256)._startingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2138) is not in mixedCase
Parameter PandaAuction.createSiringAuction(uint256,uint256,uint256,uint256)._endingPrice (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2139) is not in mixedCase
Parameter PandaAuction.createSiringAuction(uint256,uint256,uint256,uint256)._duration (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2140) is not in mixedCase
Parameter PandaAuction.bidOnSiringAuction(uint256,uint256)._sireId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2167) is not in mixedCase
Parameter PandaAuction.bidOnSiringAuction(uint256,uint256)._matronId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2168) is not in mixedCase
Parameter PandaAuction.withdrawERC20Balance(address,address)._erc20Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2197) is not in mixedCase
Parameter PandaAuction.withdrawERC20Balance(address,address)._to (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2197) is not in mixedCase
Parameter PandaMinting.createWizzPanda(uint256[2],uint256,address)._genes (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2228) is not in mixedCase
Parameter PandaMinting.createWizzPanda(uint256[2],uint256,address)._generation (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2228) is not in mixedCase
Parameter PandaMinting.createWizzPanda(uint256[2],uint256,address)._owner (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2228) is not in mixedCase
Parameter PandaMinting.createPanda(uint256[2],uint256,uint256)._genes (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2240) is not in mixedCase
Parameter PandaMinting.createPanda(uint256[2],uint256,uint256)._generation (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2240) is not in mixedCase
Parameter PandaMinting.createPanda(uint256[2],uint256,uint256)._type (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2240) is not in mixedCase
Parameter PandaMinting.createGen0Auction(uint256)._pandaId (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2277) is not in mixedCase
Parameter PandaCore.setNewAddress(address)._v2Address (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2395) is not in mixedCase
Parameter PandaCore.getPanda(uint256)._id (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#2414) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in ClockAuctionBase._bid(uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1254-1313):
	External calls:
	- seller.transfer(sellerProceeds) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1295)
	- msg.sender.transfer(bidExcess) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1307)
	Event emitted after the call(s):
	- AuctionSuccessful(_tokenId,price,msg.sender) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1310)
Reentrancy in SaleClockAuction.bid(uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1776-1791):
	External calls:
	- price = _bid(_tokenId,msg.value) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1782)
		- seller.transfer(sellerProceeds) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1295)
		- msg.sender.transfer(bidExcess) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1307)
	State variables written after the call(s):
	- gen0SaleCount ++ (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1789)
	- lastGen0SalePrices[gen0SaleCount % 5] = price (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1788)
Reentrancy in PandaBreeding.giveBirth(uint256,uint256[2],uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1091-1158):
	External calls:
	- msg.sender.send(autoBirthFee) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1152)
	State variables written after the call(s):
	- delete childOwner[_matronId] (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1154)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Variable PandaOwnership.InterfaceSignature_ERC165 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#550-551) is too similar to PandaOwnership.InterfaceSignature_ERC721 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#553-563)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

SaleClockAuction.isSaleClockAuction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1693) should be constant 
SaleClockAuctionERC20.isSaleClockAuctionERC20 (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1849) should be constant 
SiringClockAuction.isSiringClockAuction (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#1624) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

mixGenes(uint256[2],uint256[2],uint256,uint256,uint256) should be declared external:
	- GeneScienceInterface.mixGenes(uint256[2],uint256[2],uint256,uint256,uint256) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#94)
getPureFromGene(uint256[2]) should be declared external:
	- GeneScienceInterface.getPureFromGene(uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#96)
getSex(uint256[2]) should be declared external:
	- GeneScienceInterface.getSex(uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#99)
getWizzType(uint256[2]) should be declared external:
	- GeneScienceInterface.getWizzType(uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#102)
clearWizzType(uint256[2]) should be declared external:
	- GeneScienceInterface.clearWizzType(uint256[2]) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#104)
getMetadata(uint256,string) should be declared external:
	- ERC721Metadata.getMetadata(uint256,string) (dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol#516-531)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x663e4229142a27f00bafb5d087e1e730648314c3.sol analyzed (18 contracts with 93 detectors), 200 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol:
dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol:29:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


HomeyJar.GetHoneyFromJar() (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#14-19) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

HomeyJar.Command(address,bytes) (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#26-30) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

HomeyJar.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#26) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in HomeyJar.Command(address,bytes) (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#26-30):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function HomeyJar.GetHoneyFromJar() (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#14-19) is not in mixedCase
Function HomeyJar.Command(address,bytes) (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#26-30) is not in mixedCase
Variable HomeyJar.Owner (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#10) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- HomeyJar.Command(address,bytes) (dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol#26-30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol:
dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol:45:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


WhaleGiveaway1.redeem() (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#21-29) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

WhaleGiveaway1.Command(address,bytes) (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#39-46) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

WhaleGiveaway1.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#39) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in WhaleGiveaway1.Command(address,bytes) (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#39-46):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function WhaleGiveaway1.Command(address,bytes) (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#39-46) is not in mixedCase
Variable WhaleGiveaway1.Owner (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- WhaleGiveaway1.Command(address,bytes) (dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol#39-46)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol analyzed (1 contracts with 93 detectors), 9 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol:
dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol:44:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


WhaleGiveaway1.GetFreebie() (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#20-28) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

WhaleGiveaway1.Command(address,bytes) (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#38-45) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

WhaleGiveaway1.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#38) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in WhaleGiveaway1.Command(address,bytes) (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#38-45):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function WhaleGiveaway1.GetFreebie() (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#20-28) is not in mixedCase
Function WhaleGiveaway1.Command(address,bytes) (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#38-45) is not in mixedCase
Variable WhaleGiveaway1.Owner (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- WhaleGiveaway1.Command(address,bytes) (dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol#38-45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol:
dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol:198:9: Warning: Return value of low-level calls not used.
        whale.call.value(amount)(bytes4(keccak256("donate()")));
        ^-----------------------------------------------------^
dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol:210:9: Warning: Return value of low-level calls not used.
        whale.call.value(amount)(bytes4(keccak256("donate()")));
        ^-----------------------------------------------------^


PoCGame.payout(address) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#182-189) sends eth to arbitrary user
	Dangerous calls:
	- winner.transfer(ethToTransfer) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#187)
PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#206-213) sends eth to arbitrary user
	Dangerous calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#210)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

PoCGame.play() (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#138-166) uses a weak PRNG: "winningNumber = uint256(keccak256()(abi.encodePacked(blockhash(uint256)(blockNumber),msg.sender))) % difficulty + 1 (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#150)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

PoCGame.donateToWhale(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#194-201) ignores return value by whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#198)
PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#206-213) ignores return value by whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#210)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

PoCGame.constructor(address,uint256).whaleAddress (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#67) lacks a zero-check on :
		- whale = whaleAddress (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in PoCGame.donateToWhale(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#194-201):
	External calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#198)
	State variables written after the call(s):
	- totalDonated += amount (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#199)
Reentrancy in PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#206-213):
	External calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#210)
	State variables written after the call(s):
	- totalDonated += amount (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#211)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in PoCGame.donateToWhale(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#194-201):
	External calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#198)
	Event emitted after the call(s):
	- Donate(amount,whale,msg.sender) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#200)
Reentrancy in PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#206-213):
	External calls:
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#210)
	Event emitted after the call(s):
	- Lose(amount,msg.sender) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#212)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in PoCGame.donateToWhale(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#194-201):
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#198)
Low level call in PoCGame.loseWager(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#206-213):
	- whale.call.value(amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#210)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function PoCGame.OpenToThePublic() (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#83-88) is not in mixedCase
Function PoCGame.AdjustBetAmounts(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#93-100) is not in mixedCase
Function PoCGame.AdjustDifficulty(uint256) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#105-112) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in PoCGame.payout(address) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#182-189):
	External calls:
	- winner.transfer(ethToTransfer) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#187)
	Event emitted after the call(s):
	- Win(ethToTransfer,winner) (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#188)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

PoCGame.randomSeed (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#57) is never used in PoCGame (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#9-288)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

PoCGame.randomSeed (dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol#57) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol analyzed (2 contracts with 93 detectors), 20 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol:
dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol:44:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


Pie.GetPie() (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#20-28) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Pie.Command(address,bytes) (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#38-45) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Pie.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#38) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Pie.Command(address,bytes) (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#38-45):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Pie.GetPie() (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#20-28) is not in mixedCase
Function Pie.Command(address,bytes) (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#38-45) is not in mixedCase
Variable Pie.Owner (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- Pie.Command(address,bytes) (dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol#38-45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.16
generating... report/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:87:25: Warning: This declaration shadows an existing declaration.
    function writeIndex(uint indexdate, string wedaddress, string partnernames, uint weddingdate, uint displaymultisig) {
                        ^------------^
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:67:5: The shadowed declaration is here:
    uint public indexdate;
    ^-------------------^

dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:87:41: Warning: This declaration shadows an existing declaration.
    function writeIndex(uint indexdate, string wedaddress, string partnernames, uint weddingdate, uint displaymultisig) {
                                        ^---------------^
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:65:5: The shadowed declaration is here:
    string public wedaddress;
    ^----------------------^

dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:87:60: Warning: This declaration shadows an existing declaration.
    function writeIndex(uint indexdate, string wedaddress, string partnernames, uint weddingdate, uint displaymultisig) {
                                                           ^-----------------^
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:66:5: The shadowed declaration is here:
    string public partnernames;
    ^------------------------^

dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:87:81: Warning: This declaration shadows an existing declaration.
    function writeIndex(uint indexdate, string wedaddress, string partnernames, uint weddingdate, uint displaymultisig) {
                                                                                ^--------------^
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:68:5: The shadowed declaration is here:
    uint public weddingdate;
    ^---------------------^

dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:87:99: Warning: This declaration shadows an existing declaration.
    function writeIndex(uint indexdate, string wedaddress, string partnernames, uint weddingdate, uint displaymultisig) {
                                                                                                  ^------------------^
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:69:5: The shadowed declaration is here:
    uint public displaymultisig;
    ^-------------------------^

dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:93:77: Warning: This declaration shadows an existing declaration.
    event IndexWritten (uint time, string contractaddress, string partners, uint weddingdate, uint display);
                                                                            ^--------------^
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:68:5: The shadowed declaration is here:
    uint public weddingdate;
    ^---------------------^

dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:56:9: Warning: Return value of low-level calls not used.
        _dst.call.value(_value)(_data);
        ^----------------------------^
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol:87:25: Warning: Unused local variable
    function writeIndex(uint indexdate, string wedaddress, string partnernames, uint weddingdate, uint displaymultisig) {
                        ^------------^


WedIndex (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#62-95) contract sets array length with a user-controlled value:
	- indexarray.push(IndexArray(now,wedaddress,partnernames,weddingdate,displaymultisig)) (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#88)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#54-57) ignores return value by _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#56)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

WedIndex.writeIndex(uint256,string,string,uint256,uint256).indexdate (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#87) shadows:
	- WedIndex.indexdate (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#67) (state variable)
WedIndex.writeIndex(uint256,string,string,uint256,uint256).wedaddress (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#87) shadows:
	- WedIndex.wedaddress (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#65) (state variable)
WedIndex.writeIndex(uint256,string,string,uint256,uint256).partnernames (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#87) shadows:
	- WedIndex.partnernames (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#66) (state variable)
WedIndex.writeIndex(uint256,string,string,uint256,uint256).weddingdate (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#87) shadows:
	- WedIndex.weddingdate (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#68) (state variable)
WedIndex.writeIndex(uint256,string,string,uint256,uint256).displaymultisig (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#87) shadows:
	- WedIndex.displaymultisig (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#69) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Owned.changeOwner(address)._newOwner (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#38) lacks a zero-check on :
		- newOwner = _newOwner (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#39)
Owned.execute(address,uint256,bytes)._dst (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#54) lacks a zero-check on :
		- _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#56)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.16 (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#7) allows old versions
solc-0.4.16 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#54-57):
	- _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#56)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Owned.changeOwner(address)._newOwner (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#38) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._dst (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#54) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._value (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#54) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._data (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#54) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

WedIndex.displaymultisig (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#69) should be constant 
WedIndex.indexdate (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#67) should be constant 
WedIndex.partnernames (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#66) should be constant 
WedIndex.wedaddress (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#65) should be constant 
WedIndex.weddingdate (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#68) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

execute(address,uint256,bytes) should be declared external:
	- Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#54-57)
writeIndex(uint256,string,string,uint256,uint256) should be declared external:
	- WedIndex.writeIndex(uint256,string,string,uint256,uint256) (dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol#87-90)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol analyzed (2 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.9
generating... report/unchecked_low_level_calls/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol:
dataset/unchecked_low_level_calls/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol:162:13: Warning: Return value of low-level calls not used.
            SGX_ADDRESS.send(CANCELLATION_FEE);
            ^--------------------------------^
dataset/unchecked_low_level_calls/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol:175:13: Warning: Return value of low-level calls not used.
            SGX_ADDRESS.send(fee);         
            ^-------------------^
dataset/unchecked_low_level_calls/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol:180:13: Warning: Return value of low-level calls not used.
            requests[requestId].requester.call.gas(2300).value(fee)();
            ^-------------------------------------------------------^
dataset/unchecked_low_level_calls/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol:192:9: Warning: Return value of low-level calls not used.
        requests[requestId].callbackAddr.call.gas(callbackGas)(requests[requestId].callbackFID, requestId, error, respData); // call the callback function in the application contract
        ^-----------------------------------------------------------------------------------------------------------------^


Reentrancy in TownCrier.cancel(uint64) ():
	External calls:
	- ! msg.sender.call.value(fee - CANCELLATION_FEE)() ()
	State variables written after the call(s):
	- externalCallFlag = false ()
	TownCrier.externalCallFlag () can be used in cross function reentrancies:
	- TownCrier.TownCrier() ()
	- TownCrier.cancel(uint64) ()
	- TownCrier.deliver(uint64,bytes32,uint64,bytes32) ()
	- TownCrier.request(uint8,address,bytes4,uint256,bytes32[]) ()
Reentrancy in TownCrier.request(uint8,address,bytes4,uint256,bytes32[]) ():
	External calls:
	- ! msg.sender.call.value(msg.value)() ()
	State variables written after the call(s):
	- externalCallFlag = false ()
	TownCrier.externalCallFlag () can be used in cross function reentrancies:
	- TownCrier.TownCrier() ()
	- TownCrier.cancel(uint64) ()
	- TownCrier.deliver(uint64,bytes32,uint64,bytes32) ()
	- TownCrier.request(uint8,address,bytes4,uint256,bytes32[]) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

TownCrier.deliver(uint64,bytes32,uint64,bytes32) () ignores return value by requests[requestId].requester.call.gas(2300).value(fee)() ()
TownCrier.deliver(uint64,bytes32,uint64,bytes32) () ignores return value by requests[requestId].callbackAddr.call.gas(callbackGas)(requests[requestId].callbackFID,requestId,error,respData) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

TownCrier.deliver(uint64,bytes32,uint64,bytes32) () ignores return value by SGX_ADDRESS.send(CANCELLATION_FEE) ()
TownCrier.deliver(uint64,bytes32,uint64,bytes32) () ignores return value by SGX_ADDRESS.send(fee) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Reentrancy in TownCrier.deliver(uint64,bytes32,uint64,bytes32) ():
	External calls:
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	State variables written after the call(s):
	- externalCallFlag = false ()
Reentrancy in TownCrier.deliver(uint64,bytes32,uint64,bytes32) ():
	External calls:
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	External calls sending eth:
	- SGX_ADDRESS.send(fee) ()
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	State variables written after the call(s):
	- externalCallFlag = true ()
Reentrancy in TownCrier.deliver(uint64,bytes32,uint64,bytes32) ():
	External calls:
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	- requests[requestId].callbackAddr.call.gas(callbackGas)(requests[requestId].callbackFID,requestId,error,respData) ()
	External calls sending eth:
	- SGX_ADDRESS.send(fee) ()
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	State variables written after the call(s):
	- externalCallFlag = false ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in TownCrier.cancel(uint64) ():
	External calls:
	- ! msg.sender.call.value(fee - CANCELLATION_FEE)() ()
	Event emitted after the call(s):
	- Cancel(requestId,msg.sender,requests[requestId].requester,requests[requestId].fee,1) ()
Reentrancy in TownCrier.deliver(uint64,bytes32,uint64,bytes32) ():
	External calls:
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	External calls sending eth:
	- SGX_ADDRESS.send(fee) ()
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	Event emitted after the call(s):
	- DeliverInfo(requestId,fee,tx.gasprice,msg.gas,callbackGas,paramsHash,error,respData) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Deprecated standard detected THROW ():
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected paramsHash = sha3()(requestType,requestData) ():
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected DeliverInfo(requestId,fee,tx.gasprice,msg.gas,callbackGas,paramsHash,error,respData) ():
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected callbackGas > msg.gas - 5000 ():
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected callbackGas = msg.gas - 5000 ():
	- Usage of "msg.gas" should be replaced with "gasleft()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

TownCrier.MIN_FEE () is set pre-construction with a non-constant function or state variable:
	- 30000 * GAS_PRICE
TownCrier.CANCELLATION_FEE () is set pre-construction with a non-constant function or state variable:
	- 25000 * GAS_PRICE
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Pragma version^0.4.9 () allows old versions
solc-0.4.9 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in TownCrier.withdraw() ():
	- ! requests[0].requester.call.value(this.balance)() ()
Low level call in TownCrier.request(uint8,address,bytes4,uint256,bytes32[]) ():
	- ! msg.sender.call.value(msg.value)() ()
	- ! msg.sender.call.value(msg.value)() ()
Low level call in TownCrier.deliver(uint64,bytes32,uint64,bytes32) ():
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	- requests[requestId].callbackAddr.call.gas(callbackGas)(requests[requestId].callbackFID,requestId,error,respData) ()
Low level call in TownCrier.cancel(uint64) ():
	- ! msg.sender.call.value(fee - CANCELLATION_FEE)() ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Variable TownCrier.SGX_ADDRESS () is not in mixedCase
Variable TownCrier.GAS_PRICE () is not in mixedCase
Variable TownCrier.MIN_FEE () is not in mixedCase
Variable TownCrier.CANCELLATION_FEE () is not in mixedCase
Variable TownCrier.CANCELLED_FEE_FLAG () is not in mixedCase
Variable TownCrier.DELIVERED_FEE_FLAG () is not in mixedCase
Variable TownCrier.FAIL_FLAG () is not in mixedCase
Variable TownCrier.SUCCESS_FLAG () is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in TownCrier.deliver(uint64,bytes32,uint64,bytes32) ():
	External calls:
	- SGX_ADDRESS.send(CANCELLATION_FEE) ()
	State variables written after the call(s):
	- requests[requestId].fee = DELIVERED_FEE_FLAG ()
	- unrespondedCnt -- ()
Reentrancy in TownCrier.deliver(uint64,bytes32,uint64,bytes32) ():
	External calls:
	- SGX_ADDRESS.send(fee) ()
	External calls sending eth:
	- SGX_ADDRESS.send(fee) ()
	- requests[requestId].requester.call.gas(2300).value(fee)() ()
	State variables written after the call(s):
	- externalCallFlag = true ()
	- externalCallFlag = false ()
	Event emitted after the call(s):
	- DeliverInfo(requestId,fee,tx.gasprice,msg.gas,callbackGas,paramsHash,error,respData) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

TownCrier.CANCELLED_FEE_FLAG () should be constant 
TownCrier.DELIVERED_FEE_FLAG () should be constant 
TownCrier.FAIL_FLAG () should be constant 
TownCrier.SGX_ADDRESS () should be constant 
TownCrier.SUCCESS_FLAG () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

request(uint8,address,bytes4,uint256,bytes32[]) should be declared external:
	- TownCrier.request(uint8,address,bytes4,uint256,bytes32[]) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol analyzed (1 contracts with 93 detectors), 40 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol:
dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol:61:5: Warning: No visibility specified. Defaulting to "public".
    function()
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol:67:5: Warning: No visibility specified. Defaulting to "public".
    function Deposit() 
    ^
Spanning multiple lines.
dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol:44:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
                          ^-------------------------------^
dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol:44:9: Warning: Return value of low-level calls not used.
        token.call(bytes4(sha3("transfer(address,uint256)")),to,amount); 
        ^-------------------------------------------------------------^


Token.owner (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#38) shadows:
	- Ownable.owner (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#12)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

Contract locking ether found:
	Contract TokenBank (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#48-105) has payable functions:
	 - TokenBank.fallback() (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#61-65)
	 - TokenBank.Deposit() (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#67-74)
	 - TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#87-101)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether

Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#39-45) ignores return value by token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Token.WithdrawToken(address,uint256,address).to (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#44)
Token.WithdrawToken(address,uint256,address).token (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#39) lacks a zero-check on :
		- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#44)
Ownable.changeOwner(address).addr (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#14) lacks a zero-check on :
		- newOwner = addr (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Ownable.onlyOwner() (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#30-33) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Deprecated standard detected token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#44):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#39-45):
	- token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Token.WithdrawToken(address,uint256,address) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#39-45) is not in mixedCase
Function TokenBank.Deposit() (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#67-74) is not in mixedCase
Function TokenBank.WitdrawTokenToHolder(address,address,uint256) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#76-85) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._to (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#76) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._token (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#76) is not in mixedCase
Parameter TokenBank.WitdrawTokenToHolder(address,address,uint256)._amount (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#76) is not in mixedCase
Function TokenBank.WithdrawToHolder(address,uint256) (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#87-101) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._addr (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#87) is not in mixedCase
Parameter TokenBank.WithdrawToHolder(address,uint256)._wei (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#87) is not in mixedCase
Function TokenBank.Bal() (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#103) is not in mixedCase
Variable TokenBank.MinDeposit (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#50) is not in mixedCase
Variable TokenBank.Holders (dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol#51) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/unchecked_low_level_calls/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol analyzed (3 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.16
generating... report/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol:
dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol:55:9: Warning: Return value of low-level calls not used.
        _dst.call.value(_value)(_data);
        ^----------------------------^


Marriage.sendMessage(string,string,string) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#136-142) sends eth to arbitrary user
	Dangerous calls:
	- owner.transfer(this.balance) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#138)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#53-56) ignores return value by _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#55)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Owned.changeOwner(address)._newOwner (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#37) lacks a zero-check on :
		- newOwner = _newOwner (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#38)
Owned.execute(address,uint256,bytes)._dst (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#53) lacks a zero-check on :
		- _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#55)
Marriage.Marriage(address)._owner (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#93) lacks a zero-check on :
		- owner = _owner (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#94)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Marriage.createMarriage(string,string,string,string) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#106-120) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(majorEvents.length == 0) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#112)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected require(bool)(sha3()(marriageStatus) == sha3()(Married)) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#88):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.16 (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#7) allows old versions
solc-0.4.16 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#53-56):
	- _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#55)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Owned.changeOwner(address)._newOwner (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#37) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._dst (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#53) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._value (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#53) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._data (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#53) is not in mixedCase
Parameter Marriage.createMarriage(string,string,string,string)._partner1 (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#107) is not in mixedCase
Parameter Marriage.createMarriage(string,string,string,string)._partner2 (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#108) is not in mixedCase
Parameter Marriage.createMarriage(string,string,string,string)._vows (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#109) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in Marriage.sendMessage(string,string,string) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#136-142):
	External calls:
	- owner.transfer(this.balance) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#138)
	State variables written after the call(s):
	- messages.push(Message(now,nameFrom,text,url,msg.value)) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#140)
	Event emitted after the call(s):
	- MessageSent(nameFrom,text,url,msg.value) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#141)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

execute(address,uint256,bytes) should be declared external:
	- Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#53-56)
createMarriage(string,string,string,string) should be declared external:
	- Marriage.createMarriage(string,string,string,string) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#106-120)
setStatus(string,string) should be declared external:
	- Marriage.setStatus(string,string) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#123-127)
sendMessage(string,string,string) should be declared external:
	- Marriage.sendMessage(string,string,string) (dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol#136-142)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol analyzed (2 contracts with 93 detectors), 22 result(s) found
Switched global version to 0.4.23
generating... report/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:84:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:44:9: Warning: This declaration shadows an existing declaration.
        uint tokens_buy = msg.value*10**18/token_price;
        ^-------------^
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:39:5: The shadowed declaration is here:
    function tokens_buy() payable returns (bool) {         
    ^ (Relevant source part starts here and spans across multiple lines).

dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:25:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x788C45Dd60aE4dBE5055b5Ac02384D5dc84677b0'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
	address public owner = 0x788c45dd60ae4dbe5055b5ac02384d5dc84677b0;	
	                       ^----------------------------------------^
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:48:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        if(!c.call(bytes4(sha3("transferFrom(address,address,uint256)")),owner, msg.sender,tokens_buy)){
                          ^-------------------------------------------^
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:54:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        owner2.send(sum2);
        ^---------------^
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:62:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
          balance = this.balance;
                    ^----------^
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:65:11: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
          owner.send(balance);
          ^-----------------^
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:32:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {        
 ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function tokens_buy() payable returns (bool) {         
    ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:60:7: Warning: No visibility specified. Defaulting to "public". 
      function withdraw(uint256 _amount) onlyOwner returns (bool result) {
      ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:70:7: Warning: No visibility specified. Defaulting to "public". 
      function change_token_price(uint256 _token_price) onlyOwner returns (bool result) {
      ^ (Relevant source part starts here and spans across multiple lines).
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol:76:7: Warning: No visibility specified. Defaulting to "public". 
      function change_active(uint256 _active) onlyOwner returns (bool result) {
      ^ (Relevant source part starts here and spans across multiple lines).


Delta.tokens_buy() (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#39-57) ignores return value by owner2.send(sum2) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#54)
Delta.withdraw(uint256) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#60-67) ignores return value by owner.send(balance) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#65)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Delta.tokens_buy().tokens_buy (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#44) shadows:
	- Delta.tokens_buy() (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#39-57) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Delta.change_token_price(uint256) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#70-73) should emit an event for: 
	- token_price = _token_price (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#71) 
Delta.change_active(uint256) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#76-79) should emit an event for: 
	- active = _active (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#77) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Deprecated standard detected ! c.call(bytes4(sha3()(transferFrom(address,address,uint256))),owner,msg.sender,tokens_buy) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#48):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#84):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.23 (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#7) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Delta.tokens_buy() (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#39-57):
	- ! c.call(bytes4(sha3()(transferFrom(address,address,uint256))),owner,msg.sender,tokens_buy) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#48)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Delta.tokens_buy() (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#39-57) is not in mixedCase
Parameter Delta.withdraw(uint256)._amount (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#60) is not in mixedCase
Function Delta.change_token_price(uint256) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#70-73) is not in mixedCase
Parameter Delta.change_token_price(uint256)._token_price (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#70) is not in mixedCase
Function Delta.change_active(uint256) (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#76-79) is not in mixedCase
Parameter Delta.change_active(uint256)._active (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#76) is not in mixedCase
Variable Delta.token_price (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#29) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Delta.c (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#24) should be constant 
Delta.owner (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#25) should be constant 
Delta.owner2 (dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#26) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol analyzed (1 contracts with 93 detectors), 20 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol:
dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol:31:13: Warning: Return value of low-level calls not used.
            contract_address.call(id, msg.sender, tos[i], vs[i]);
            ^--------------------------------------------------^


AirDropContract.transfer(address,address[],uint256[]) (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#20-34) ignores return value by contract_address.call(id,msg.sender,tos[i],vs[i]) (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

AirDropContract.transfer(address,address[],uint256[]) (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#20-34) has external calls inside a loop: contract_address.call(id,msg.sender,tos[i],vs[i]) (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in AirDropContract.transfer(address,address[],uint256[]) (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#20-34):
	- contract_address.call(id,msg.sender,tos[i],vs[i]) (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter AirDropContract.transfer(address,address[],uint256[]).contract_address (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#20) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

transfer(address,address[],uint256[]) should be declared external:
	- AirDropContract.transfer(address,address[],uint256[]) (dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#20-34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol analyzed (1 contracts with 93 detectors), 7 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol:
dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol:16:13: Warning: Return value of low-level calls not used.
            caddress.call(id,from,_tos[i],v[i]);
            ^---------------------------------^


EBU.transfer(address,address,address[],uint256[]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#11-19) ignores return value by caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

EBU.transfer(address,address,address[],uint256[]).from (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#11) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#16)
EBU.transfer(address,address,address[],uint256[]).caddress (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#11) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

EBU.transfer(address,address,address[],uint256[]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#11-19) has external calls inside a loop: caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in EBU.transfer(address,address,address[],uint256[]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#11-19):
	- caddress.call(id,from,_tos[i],v[i]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter EBU.transfer(address,address,address[],uint256[])._tos (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

transfer(address,address,address[],uint256[]) should be declared external:
	- EBU.transfer(address,address,address[],uint256[]) (dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol#11-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol analyzed (1 contracts with 93 detectors), 9 result(s) found
Switched global version to 0.4.23
generating... report/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:
dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:48:38: Warning: This declaration shadows an existing declaration.
	function newPuppet() public returns(address newPuppet){
	                                    ^---------------^
dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:48:2: The shadowed declaration is here:
	function newPuppet() public returns(address newPuppet){
 ^ (Relevant source part starts here and spans across multiple lines).

dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:69:9: Warning: Return value of low-level calls not used.
        extra[0].call.value(_share).gas(800000)();
        ^---------------------------------------^
dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:71:9: Warning: Return value of low-level calls not used.
        extra[1].call.value(_share).gas(800000)();
        ^---------------------------------------^
dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:73:9: Warning: Return value of low-level calls not used.
        extra[2].call.value(_share).gas(800000)();
        ^---------------------------------------^
dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:75:9: Warning: Return value of low-level calls not used.
        extra[3].call.value(_share).gas(800000)();
        ^---------------------------------------^
dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:102:4: Warning: Return value of low-level calls not used.
			target[0].call.value(msg.value).gas(600000)();
			^-------------------------------------------^


Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) ignores return value by extra[0].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#69)
Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) ignores return value by extra[1].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#71)
Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) ignores return value by extra[2].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#73)
Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) ignores return value by extra[3].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#75)
Puppet.fallback() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#99-104) ignores return value by target[0].call.value(msg.value).gas(600000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Splitter.newPuppet().newPuppet (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#48) shadows:
	- Splitter.newPuppet() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#48-53) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) tries to limit the gas of an external call that controls implicit decoding
	extra[0].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#69)
	extra[1].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#71)
	extra[2].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#73)
	extra[3].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#75)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#return-bomb

SafeMath.add(uint256,uint256) (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#136-140) is never used and should be removed
SafeMath.mul(uint256,uint256) (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#118-125) is never used and should be removed
SafeMath.sub(uint256,uint256) (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#131-134) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.23 (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#7) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76):
	- extra[0].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#69)
	- extra[1].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#71)
	- extra[2].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#73)
	- extra[3].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#75)
Low level call in Puppet.fallback() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#99-104):
	- target[0].call.value(msg.value).gas(600000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Splitter.setExtra(uint256,address)._id (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#57) is not in mixedCase
Parameter Splitter.setExtra(uint256,address)._newExtra (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#57) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) uses literals with too many digits:
	- extra[0].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#69)
Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) uses literals with too many digits:
	- extra[1].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#71)
Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) uses literals with too many digits:
	- extra[2].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#73)
Splitter.fundPuppets() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#65-76) uses literals with too many digits:
	- extra[3].call.value(_share).gas(800000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#75)
Puppet.fallback() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#99-104) uses literals with too many digits:
	- target[0].call.value(msg.value).gas(600000)() (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Splitter._addy (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#14) is never used in Splitter (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#9-82)
Splitter._count (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#16) is never used in Splitter (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#9-82)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

Splitter._addy (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#14) should be constant 
Splitter._count (dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#16) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol analyzed (3 contracts with 93 detectors), 25 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol:
dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol:14:9: Warning: Return value of low-level calls not used.
        target.call.value(msg.value)(data);
        ^--------------------------------^


DepositProxy.Owner (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#19) shadows:
	- Proxy.Owner (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#10)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#12-15) ignores return value by target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Proxy.transferOwner(address) (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#11) should emit an event for: 
	- Owner = _owner (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#11) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

Proxy.transferOwner(address)._owner (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#11) lacks a zero-check on :
		- Owner = _owner (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#11)
Proxy.proxy(address,bytes).target (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#12) lacks a zero-check on :
		- target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Proxy.onlyOwner() (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#10) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#12-15):
	- target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Proxy.transferOwner(address)._owner (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#11) is not in mixedCase
Variable Proxy.Owner (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#10) is not in mixedCase
Function DepositProxy.Vault() (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#24-29) is not in mixedCase
Variable DepositProxy.Owner (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#19) is not in mixedCase
Variable DepositProxy.Deposits (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#20) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

proxy(address,bytes) should be declared external:
	- Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol#12-15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol analyzed (2 contracts with 93 detectors), 15 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol:
dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol:33:9: Warning: Return value of low-level calls not used.
        _target.call.value(_value)();
        ^--------------------------^


SimpleWallet.sendMoney(address,uint256) (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#31-34) ignores return value by _target.call.value(_value)() (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

SimpleWallet.sendMoney(address,uint256)._target (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#31) lacks a zero-check on :
		- _target.call.value(_value)() (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in SimpleWallet.sendMoney(address,uint256) (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#31-34):
	- _target.call.value(_value)() (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter SimpleWallet.withdraw(uint256)._value (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#27) is not in mixedCase
Parameter SimpleWallet.sendMoney(address,uint256)._target (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#31) is not in mixedCase
Parameter SimpleWallet.sendMoney(address,uint256)._value (dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol#31) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/unchecked_low_level_calls/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol analyzed (1 contracts with 93 detectors), 8 result(s) found
Switched global version to 0.4.23
generating... report/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol:
dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol:87:5: Warning: This declaration shadows an existing declaration.
    uint256 secret = uint256(hash);
    ^------------^
dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol:26:1: The shadowed declaration is here:
uint256 public secret;
^-------------------^

dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol:100:2: Warning: Return value of low-level calls not used.
	firstTarget.call.value(msg.value)();
	^---------------------------------^
dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol:106:2: Warning: Return value of low-level calls not used.
	secondTarget.call.value(msg.value)();
	^----------------------------------^
dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol:133:2: Warning: Return value of low-level calls not used.
	owner.call.value(1 wei)();
	^-----------------------^


DrainMe (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#14-145) contract sets array length with a user-controlled value:
	- players.push(msg.sender) (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#73)
DrainMe (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#14-145) contract sets array length with a user-controlled value:
	- seed.length = _add (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#114)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

DrainMe.unlockSecret() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#85-95) uses a weak PRNG: "secret % 5 == 0 (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#88)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

DrainMe.unlockSecret() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#85-95) uses a dangerous strict equality:
	- secret % 5 == 0 (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#88)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

DrainMe.callFirstTarget() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#97-101) ignores return value by firstTarget.call.value(msg.value)() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#100)
DrainMe.callSecondTarget() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#103-107) ignores return value by secondTarget.call.value(msg.value)() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#106)
DrainMe.winPrize() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#131-134) ignores return value by owner.call.value(1)() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#133)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

DrainMe.unlockSecret().secret (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#87) shadows:
	- DrainMe.secret (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#26) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

DrainMe.setSecret(uint256) (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#59-61) should emit an event for: 
	- secret = _secret (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#60) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Pragma version^0.4.23 (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#12) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in DrainMe.callFirstTarget() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#97-101):
	- firstTarget.call.value(msg.value)() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#100)
Low level call in DrainMe.callSecondTarget() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#103-107):
	- secondTarget.call.value(msg.value)() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#106)
Low level call in DrainMe.winPrize() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#131-134):
	- owner.call.value(1)() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#133)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function DrainMe.DranMe() (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#32-34) is not in mixedCase
Parameter DrainMe.setSecret(uint256)._secret (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#59) is not in mixedCase
Parameter DrainMe.setSeed(uint256,uint256)._index (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#109) is not in mixedCase
Parameter DrainMe.setSeed(uint256,uint256)._value (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#109) is not in mixedCase
Parameter DrainMe.addSeed(uint256)._add (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#113) is not in mixedCase
Parameter DrainMe.guessSeed(uint256)._seed (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#117) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

DrainMe.firstTarget (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#20) should be constant 
DrainMe.secondTarget (dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol#21) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol analyzed (1 contracts with 93 detectors), 22 result(s) found
Switched global version to 0.4.23
generating... report/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol:
dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol:25:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(balances[msg.sender])();
        ^-------------------------------------------^


Reentrancy in keepMyEther.withdraw() (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#23-27):
	External calls:
	- msg.sender.call.value(balances[msg.sender])() (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#25)
	State variables written after the call(s):
	- balances[msg.sender] = 0 (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#26)
	keepMyEther.balances (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#17) can be used in cross function reentrancies:
	- keepMyEther.balances (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#17)
	- keepMyEther.fallback() (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#19-21)
	- keepMyEther.withdraw() (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#23-27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

keepMyEther.withdraw() (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#23-27) ignores return value by msg.sender.call.value(balances[msg.sender])() (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#25)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Pragma version^0.4.23 (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#7) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in keepMyEther.withdraw() (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#23-27):
	- msg.sender.call.value(balances[msg.sender])() (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#25)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract keepMyEther (dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#16-29) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
dataset/unchecked_low_level_calls/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol analyzed (1 contracts with 93 detectors), 6 result(s) found
Switched global version to 0.4.23
generating... report/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol:
dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol:14:9: Warning: Return value of low-level calls not used.
        target.call.value(msg.value)(data);
        ^--------------------------------^


VaultProxy.Owner (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#19) shadows:
	- Proxy.Owner (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#10)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#12-15) ignores return value by target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Proxy.transferOwner(address) (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#11) should emit an event for: 
	- Owner = _owner (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#11) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

Proxy.transferOwner(address)._owner (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#11) lacks a zero-check on :
		- Owner = _owner (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#11)
Proxy.proxy(address,bytes).target (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#12) lacks a zero-check on :
		- target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Proxy.onlyOwner() (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#10) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Pragma version^0.4.23 (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#7) allows old versions
solc-0.4.23 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#12-15):
	- target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Proxy.transferOwner(address)._owner (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#11) is not in mixedCase
Variable Proxy.Owner (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#10) is not in mixedCase
Function VaultProxy.Vault() (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#24-29) is not in mixedCase
Variable VaultProxy.Owner (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#19) is not in mixedCase
Variable VaultProxy.Deposits (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#20) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

proxy(address,bytes) should be declared external:
	- Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol#12-15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xbaa3de6504690efb064420d89e871c27065cdd52.sol analyzed (2 contracts with 93 detectors), 15 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol:
dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol:14:9: Warning: Return value of low-level calls not used.
        target.call.value(msg.value)(data);
        ^--------------------------------^


VaultProxy.Owner (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#19) shadows:
	- Proxy.Owner (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#10)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#12-15) ignores return value by target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Proxy.transferOwner(address) (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#11) should emit an event for: 
	- Owner = _owner (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#11) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

Proxy.transferOwner(address)._owner (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#11) lacks a zero-check on :
		- Owner = _owner (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#11)
Proxy.proxy(address,bytes).target (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#12) lacks a zero-check on :
		- target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Proxy.onlyOwner() (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#10) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#12-15):
	- target.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Proxy.transferOwner(address)._owner (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#11) is not in mixedCase
Variable Proxy.Owner (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#10) is not in mixedCase
Function VaultProxy.Vault() (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#24-29) is not in mixedCase
Variable VaultProxy.Owner (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#19) is not in mixedCase
Variable VaultProxy.Deposits (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#20) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

proxy(address,bytes) should be declared external:
	- Proxy.proxy(address,bytes) (dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol#12-15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol analyzed (2 contracts with 93 detectors), 15 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol:
dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol:44:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


Pie.Get() (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#20-28) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Pie.Command(address,bytes) (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#38-45) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Pie.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#38) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Pie.Command(address,bytes) (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#38-45):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Pie.Get() (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#20-28) is not in mixedCase
Function Pie.Command(address,bytes) (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#38-45) is not in mixedCase
Variable Pie.Owner (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- Pie.Command(address,bytes) (dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol#38-45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol:
dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol:16:13: Warning: Return value of low-level calls not used.
            caddress.call(id,from,_tos[i],v);
            ^------------------------------^


demo.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#11-19) ignores return value by caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

demo.transfer(address,address,address[],uint256).from (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#11) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#16)
demo.transfer(address,address,address[],uint256).caddress (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#11) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

demo.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#11-19) has external calls inside a loop: caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in demo.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#11-19):
	- caddress.call(id,from,_tos[i],v) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract demo (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#9-21) is not in CapWords
Parameter demo.transfer(address,address,address[],uint256)._tos (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

transfer(address,address,address[],uint256) should be declared external:
	- demo.transfer(address,address,address[],uint256) (dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#11-19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol:
dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol:39:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


FreeEth.GetFreebie() (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#15-23) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

FreeEth.Command(address,bytes) (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#33-40) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

FreeEth.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#33) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in FreeEth.Command(address,bytes) (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#33-40):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function FreeEth.GetFreebie() (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#15-23) is not in mixedCase
Function FreeEth.Command(address,bytes) (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#33-40) is not in mixedCase
Variable FreeEth.Owner (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- FreeEth.Command(address,bytes) (dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol#33-40)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol:
dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol:150:9: Warning: Return value of low-level calls not used.
        whale.call.value(donate_amount)(bytes4(keccak256("donate()")));
        ^------------------------------------------------------------^


FiftyFlip.sendFunds(address,uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#323-331) sends eth to arbitrary user
	Dangerous calls:
	- success = paidUser.send(amount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#324)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

FiftyFlip.play(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#162-207) uses a weak PRNG: "maskRes = (random % 2) != 0 (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#174)" 
FiftyFlip.play(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#162-207) uses a weak PRNG: "jackpotRes = random % JACKPOT_MODULO (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#175)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

Reentrancy in FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159):
	External calls:
	- whale.call.value(donate_amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#150)
	State variables written after the call(s):
	- bet.amount = amount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#153)
	FiftyFlip.bets (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#66) can be used in cross function reentrancies:
	- FiftyFlip.clearProcessedBet(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#349-361)
	- FiftyFlip.getBetInfo(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#265-271)
	- FiftyFlip.play(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#162-207)
	- FiftyFlip.refund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#228-236)
	- FiftyFlip.sendRefund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#307-320)
	- FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159)
	- bet.blockNumber = block.number (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#154)
	FiftyFlip.bets (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#66) can be used in cross function reentrancies:
	- FiftyFlip.clearProcessedBet(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#349-361)
	- FiftyFlip.getBetInfo(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#265-271)
	- FiftyFlip.play(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#162-207)
	- FiftyFlip.refund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#228-236)
	- FiftyFlip.sendRefund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#307-320)
	- FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159)
	- bet.betMask = bMask (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#155)
	FiftyFlip.bets (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#66) can be used in cross function reentrancies:
	- FiftyFlip.clearProcessedBet(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#349-361)
	- FiftyFlip.getBetInfo(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#265-271)
	- FiftyFlip.play(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#162-207)
	- FiftyFlip.refund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#228-236)
	- FiftyFlip.sendRefund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#307-320)
	- FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159)
	- bet.player = player (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#156)
	FiftyFlip.bets (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#66) can be used in cross function reentrancies:
	- FiftyFlip.clearProcessedBet(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#349-361)
	- FiftyFlip.getBetInfo(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#265-271)
	- FiftyFlip.play(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#162-207)
	- FiftyFlip.refund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#228-236)
	- FiftyFlip.sendRefund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#307-320)
	- FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159) ignores return value by whale.call.value(donate_amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

FiftyFlip.setBotAddress(address) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#113-118) should emit an event for: 
	- autoPlayBot = autoPlayBotAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#117) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

FiftyFlip.withdrawDevFee(address,uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#239-249) should emit an event for: 
	- devFeeSize -= withdrawAmount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#247) 
FiftyFlip.withdrawBotFee(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#252-262) should emit an event for: 
	- devFeeSize -= withdrawAmount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#260) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

FiftyFlip.constructor(address,address,address).autoPlayBotAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#80) lacks a zero-check on :
		- autoPlayBot = autoPlayBotAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#82)
FiftyFlip.constructor(address,address,address).whaleAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#80) lacks a zero-check on :
		- whale = whaleAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#83)
FiftyFlip.constructor(address,address,address).secretSignerAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#80) lacks a zero-check on :
		- secretSigner = secretSignerAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#84)
FiftyFlip.setBotAddress(address).autoPlayBotAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#113) lacks a zero-check on :
		- autoPlayBot = autoPlayBotAddress (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#117)
FiftyFlip.setSecretSigner(address)._secretSigner (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#120) lacks a zero-check on :
		- secretSigner = _secretSigner (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#124)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159):
	External calls:
	- whale.call.value(donate_amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#150)
	State variables written after the call(s):
	- totalAmountToWhale += donate_amount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#151)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159):
	External calls:
	- whale.call.value(donate_amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#150)
	Event emitted after the call(s):
	- Wager(ticketID,bet.amount,bet.blockNumber,bet.betMask,bet.player) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#158)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in FiftyFlip.wager(bool,uint256,uint256,uint8,bytes32,bytes32) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#128-159):
	- whale.call.value(donate_amount)(bytes4(keccak256()(donate()))) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter FiftyFlip.setSecretSigner(address)._secretSigner (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#120) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in FiftyFlip.payout(address,uint256,uint256,bool,uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#299-304):
	External calls:
	- winner.transfer(ethToTransfer) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#302)
	Event emitted after the call(s):
	- Win(winner,ethToTransfer,ticketID,maskRes,jackpotRes) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#303)
Reentrancy in FiftyFlip.play(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#162-207):
	External calls:
	- payout(bet.player,tossWin + jackpotWin,ticketID,maskRes,jackpotRes) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#194)
		- winner.transfer(ethToTransfer) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#302)
	State variables written after the call(s):
	- bet.amount = 0 (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#201)
	- lockedInBets -= tossWinAmount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#200)
Reentrancy in FiftyFlip.sendFunds(address,uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#323-331):
	External calls:
	- success = paidUser.send(amount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#324)
	Event emitted after the call(s):
	- FailedPayment(paidUser,amount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#328)
	- Payment(paidUser,amount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#326)
Reentrancy in FiftyFlip.sendRefund(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#307-320):
	External calls:
	- requester.transfer(ethToTransfer) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#313)
	State variables written after the call(s):
	- bet.amount = 0 (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#318)
	- lockedInBets -= tossWinAmount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#316)
	Event emitted after the call(s):
	- Refund(ticketID,ethToTransfer,requester) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#319)
Reentrancy in FiftyFlip.withdrawBotFee(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#252-262):
	External calls:
	- sendFunds(autoPlayBot,withdrawAmount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#259)
		- success = paidUser.send(amount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#324)
	State variables written after the call(s):
	- devFeeSize -= withdrawAmount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#260)
Reentrancy in FiftyFlip.withdrawDevFee(address,uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#239-249):
	External calls:
	- sendFunds(withdrawAddress,withdrawAmount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#246)
		- success = paidUser.send(amount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#324)
	State variables written after the call(s):
	- devFeeSize -= withdrawAmount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#247)
Reentrancy in FiftyFlip.withdrawDonation(uint256) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#217-225):
	External calls:
	- sendFunds(msg.sender,amount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#222)
		- success = paidUser.send(amount) (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#324)
	State variables written after the call(s):
	- donateAmount[msg.sender] -= amount (dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol#223)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol analyzed (2 contracts with 93 detectors), 26 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol:
dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol:44:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


Honey.GetFreebie() (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#20-28) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Honey.Command(address,bytes) (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#38-45) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Honey.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#38) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Honey.Command(address,bytes) (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#38-45):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Honey.GetFreebie() (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#20-28) is not in mixedCase
Function Honey.Command(address,bytes) (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#38-45) is not in mixedCase
Variable Honey.Owner (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- Honey.Command(address,bytes) (dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol#38-45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol:
dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol:39:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


Freebie.GetFreebie() (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#15-23) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Freebie.Command(address,bytes) (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#33-40) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Freebie.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#33) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Freebie.Command(address,bytes) (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#33-40):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function Freebie.GetFreebie() (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#15-23) is not in mixedCase
Function Freebie.Command(address,bytes) (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#33-40) is not in mixedCase
Variable Freebie.Owner (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- Freebie.Command(address,bytes) (dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#33-40)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol:
dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol:17:13: Warning: Return value of low-level calls not used.
            caddress.call(id,from,_tos[i],_value);
            ^-----------------------------------^


airDrop.transfer(address,address,address[],uint256,uint256) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#11-20) ignores return value by caddress.call(id,from,_tos[i],_value) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

airDrop.transfer(address,address,address[],uint256,uint256).caddress (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#11) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],_value) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#17)
airDrop.transfer(address,address,address[],uint256,uint256).from (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#11) lacks a zero-check on :
		- caddress.call(id,from,_tos[i],_value) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

airDrop.transfer(address,address,address[],uint256,uint256) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#11-20) has external calls inside a loop: caddress.call(id,from,_tos[i],_value) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in airDrop.transfer(address,address,address[],uint256,uint256) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#11-20):
	- caddress.call(id,from,_tos[i],_value) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract airDrop (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#9-22) is not in CapWords
Parameter airDrop.transfer(address,address,address[],uint256,uint256)._tos (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#11) is not in mixedCase
Parameter airDrop.transfer(address,address,address[],uint256,uint256)._decimals (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

transfer(address,address,address[],uint256,uint256) should be declared external:
	- airDrop.transfer(address,address,address[],uint256,uint256) (dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#11-20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol analyzed (1 contracts with 93 detectors), 11 result(s) found
Switched global version to 0.4.11
generating... report/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol:
dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol:30:9: Warning: Return value of low-level calls not used.
        _dst.call.value(_value)(_data);
        ^----------------------------^
dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol:126:47: Warning: Unused local variable
    function gas() internal constant returns (uint _gas) {
                                              ^-------^


TokenSender (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#39-132) contract sets array length with a user-controlled value:
	- transfers.length = transfers.length + data.length (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

TokenSender.gas() (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#126-130) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code

Reentrancy in TokenSender.run() (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#87-109):
	External calls:
	- ! token.transfer(addr,transfers[mNext].amount) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#102)
	State variables written after the call(s):
	- next = mNext (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#108)
	TokenSender.next (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#43) can be used in cross function reentrancies:
	- TokenSender.fill(uint256[]) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#66-83)
	- TokenSender.hasTerminated() (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#116-120)
	- TokenSender.next (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#43)
	- TokenSender.run() (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#87-109)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#28-31) ignores return value by _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Owned.changeOwner(address) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#21-23) should emit an event for: 
	- owner = _newOwner (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#22) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

Owned.changeOwner(address)._newOwner (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#21) lacks a zero-check on :
		- owner = _newOwner (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#22)
Owned.execute(address,uint256,bytes)._dst (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#28) lacks a zero-check on :
		- _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Owned.onlyOwner() (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#19) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

TokenSender.run() (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#87-109) has external calls inside a loop: ! token.transfer(addr,transfers[mNext].amount) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

TokenSender.gas() (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#126-130) uses assembly
	- INLINE ASM (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#127-130)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#69):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#96):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#102):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.11 (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#7) allows old versions
solc-0.4.11 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#28-31):
	- _dst.call.value(_value)(_data) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter Owned.changeOwner(address)._newOwner (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#21) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._dst (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#28) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._value (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#28) is not in mixedCase
Parameter Owned.execute(address,uint256,bytes)._data (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#28) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

TokenSender.slitherConstructorConstantVariables() (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#39-132) uses literals with too many digits:
	- D160 = 0x0010000000000000000000000000000000000000000 (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#58)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

execute(address,uint256,bytes) should be declared external:
	- Owned.execute(address,uint256,bytes) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#28-31)
fill(uint256[]) should be declared external:
	- TokenSender.fill(uint256[]) (dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol#66-83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xec329ffc97d75fe03428ae155fc7793431487f63.sol analyzed (3 contracts with 93 detectors), 23 result(s) found
Switched global version to 0.4.16
generating... report/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol:
dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol:18:13: Warning: Return value of low-level calls not used.
            fuck.call(bytes4(sha3("giveBlockReward()")));
            ^------------------------------------------^


RealOldFuckMaker.makeOldFucks(uint32) (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#14-20) ignores return value by fuck.call(bytes4(sha3()(giveBlockReward()))) (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

RealOldFuckMaker.makeOldFucks(uint32) (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#14-20) has external calls inside a loop: fuck.call(bytes4(sha3()(giveBlockReward()))) (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Deprecated standard detected fuck.call(bytes4(sha3()(giveBlockReward()))) (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#18):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.16 (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#7) allows old versions
solc-0.4.16 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in RealOldFuckMaker.makeOldFucks(uint32) (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#14-20):
	- fuck.call(bytes4(sha3()(giveBlockReward()))) (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

RealOldFuckMaker.fuck (dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol#10) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/0xf2570186500a46986f3139f65afedc2afe4f445d.sol analyzed (1 contracts with 93 detectors), 7 result(s) found
Switched global version to 0.4.24
generating... report/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol:
dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol:16:9: Warning: Return value of low-level calls not used.
        target.call.value(msg.value)();
        ^----------------------------^


B.go() (dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol#13-18) ignores return value by target.call.value(msg.value)() (dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Pragma version^0.4.24 (dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol#7) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in B.go() (dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol#13-18):
	- target.call.value(msg.value)() (dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/unchecked_low_level_calls/0xf29ebe930a539a60279ace72c707cba851a57707.sol analyzed (1 contracts with 93 detectors), 4 result(s) found
Switched global version to 0.4.19
generating... report/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol:
dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol:44:9: Warning: Return value of low-level calls not used.
        adr.call.value(msg.value)(data);
        ^-----------------------------^


WhaleGiveaway2.GetFreebie() (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#20-28) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

WhaleGiveaway2.Command(address,bytes) (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#38-45) ignores return value by adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

WhaleGiveaway2.Command(address,bytes).adr (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#38) lacks a zero-check on :
		- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version^0.4.19 (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#7) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in WhaleGiveaway2.Command(address,bytes) (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#38-45):
	- adr.call.value(msg.value)(data) (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function WhaleGiveaway2.GetFreebie() (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#20-28) is not in mixedCase
Function WhaleGiveaway2.Command(address,bytes) (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#38-45) is not in mixedCase
Variable WhaleGiveaway2.Owner (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Command(address,bytes) should be declared external:
	- WhaleGiveaway2.Command(address,bytes) (dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol#38-45)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
dataset/unchecked_low_level_calls/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.0
generating... report/unchecked_low_level_calls/etherpot_lotto.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/etherpot_lotto.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/etherpot_lotto.sol:
dataset/unchecked_low_level_calls/etherpot_lotto.sol:109:10: Warning: Return value of low-level calls not used.
         winner.send(subpot);
         ^-----------------^
dataset/unchecked_low_level_calls/etherpot_lotto.sol:141:14: Warning: Return value of low-level calls not used.
             msg.sender.send(msg.value-value);
             ^------------------------------^


Lotto.calculateWinner(uint256,uint256) () uses a weak PRNG: "winningTicketIndex = decisionBlockHash % rounds[roundIndex].ticketsCount ()" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

Lotto.cash(uint256,uint256) () ignores return value by winner.send(subpot) ()
Lotto.fallback() () ignores return value by msg.sender.send(msg.value - value) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Deprecated standard detected uint256(block.blockhash(blockIndex)) ():
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in Lotto.cash(uint256,uint256) ():
	External calls:
	- winner.send(subpot) ()
	State variables written after the call(s):
	- rounds[roundIndex].isCashed[subpotIndex] = true ()
Reentrancy in Lotto.fallback() ():
	External calls:
	- msg.sender.send(msg.value - value) ()
	State variables written after the call(s):
	- rounds[roundIndex].ticketsCount += ticketsCount ()
	- buyersLength = rounds[roundIndex].buyers.length ++ ()
	- rounds[roundIndex].buyers[buyersLength] = msg.sender ()
	- rounds[roundIndex].ticketsCountByBuyer[msg.sender] += ticketsCount ()
	- rounds[roundIndex].ticketsCount += ticketsCount ()
	- rounds[roundIndex].pot += value ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Lotto.slitherConstructorVariables() () uses literals with too many digits:
	- ticketPrice = 100000000000000000 ()
Lotto.slitherConstructorVariables() () uses literals with too many digits:
	- blockReward = 5000000000000000000 ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Lotto.blockReward () should be constant 
Lotto.blocksPerRound () should be constant 
Lotto.ticketPrice () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/etherpot_lotto.sol analyzed (1 contracts with 93 detectors), 13 result(s) found
Switched global version to 0.4.0
generating... report/unchecked_low_level_calls/king_of_the_ether_throne.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/king_of_the_ether_throne.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/king_of_the_ether_throne.sol:
dataset/unchecked_low_level_calls/king_of_the_ether_throne.sol:110:13: Warning: Return value of low-level calls not used.
            msg.sender.send(valuePaid);
            ^------------------------^
dataset/unchecked_low_level_calls/king_of_the_ether_throne.sol:118:13: Warning: Return value of low-level calls not used.
            msg.sender.send(excessPaid);
            ^-------------------------^
dataset/unchecked_low_level_calls/king_of_the_ether_throne.sol:132:13: Warning: Return value of low-level calls not used.
            currentMonarch.etherAddress.send(compensation);
            ^--------------------------------------------^
dataset/unchecked_low_level_calls/king_of_the_ether_throne.sol:174:9: Warning: Return value of low-level calls not used.
        wizardAddress.send(amount);
        ^------------------------^


KingOfTheEtherThrone () contract sets array length with a user-controlled value:
	- pastMonarchs.push(currentMonarch) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

KingOfTheEtherThrone.claimThrone(string) () performs a multiplication on the result of a division:
	- currentClaimPrice = 10000000000000000000 * (rawNewClaimPrice / 10000000000000000000) ()
KingOfTheEtherThrone.claimThrone(string) () performs a multiplication on the result of a division:
	- currentClaimPrice = 1000000000000000000 * (rawNewClaimPrice / 1000000000000000000) ()
KingOfTheEtherThrone.claimThrone(string) () performs a multiplication on the result of a division:
	- currentClaimPrice = 100000000000000000 * (rawNewClaimPrice / 100000000000000000) ()
KingOfTheEtherThrone.claimThrone(string) () performs a multiplication on the result of a division:
	- currentClaimPrice = 10000000000000000 * (rawNewClaimPrice / 10000000000000000) ()
KingOfTheEtherThrone.claimThrone(string) () performs a multiplication on the result of a division:
	- currentClaimPrice = 1000000000000000 * (rawNewClaimPrice / 1000000000000000) ()
KingOfTheEtherThrone.claimThrone(string) () performs a multiplication on the result of a division:
	- currentClaimPrice = 100000000000000 * (rawNewClaimPrice / 100000000000000) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

KingOfTheEtherThrone.claimThrone(string) () ignores return value by msg.sender.send(valuePaid) ()
KingOfTheEtherThrone.claimThrone(string) () ignores return value by msg.sender.send(excessPaid) ()
KingOfTheEtherThrone.claimThrone(string) () ignores return value by currentMonarch.etherAddress.send(compensation) ()
KingOfTheEtherThrone.sweepCommission(uint256) () ignores return value by wizardAddress.send(amount) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

KingOfTheEtherThrone.transferOwnership(address) () should emit an event for: 
	- wizardAddress = newOwner () 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

KingOfTheEtherThrone.transferOwnership(address).newOwner () lacks a zero-check on :
		- wizardAddress = newOwner ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier KingOfTheEtherThrone.onlywizard() () does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

KingOfTheEtherThrone.claimThrone(string) () uses timestamp for comparisons
	Dangerous comparisons:
	- currentMonarch.etherAddress != wizardAddress ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in KingOfTheEtherThrone.claimThrone(string) ():
	External calls:
	- msg.sender.send(excessPaid) ()
	- currentMonarch.etherAddress.send(compensation) ()
	State variables written after the call(s):
	- currentClaimPrice = rawNewClaimPrice ()
	- currentClaimPrice = 100000000000000 * (rawNewClaimPrice / 100000000000000) ()
	- currentClaimPrice = 1000000000000000 * (rawNewClaimPrice / 1000000000000000) ()
	- currentClaimPrice = 10000000000000000 * (rawNewClaimPrice / 10000000000000000) ()
	- currentClaimPrice = 100000000000000000 * (rawNewClaimPrice / 100000000000000000) ()
	- currentClaimPrice = 1000000000000000000 * (rawNewClaimPrice / 1000000000000000000) ()
	- currentClaimPrice = 10000000000000000000 * (rawNewClaimPrice / 10000000000000000000) ()
	- currentClaimPrice = rawNewClaimPrice ()
	- currentMonarch = Monarch(msg.sender,name,valuePaid,block.timestamp) ()
	- pastMonarchs.push(currentMonarch) ()
	Event emitted after the call(s):
	- ThroneClaimed(currentMonarch.etherAddress,currentMonarch.name,currentClaimPrice) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Variable KingOfTheEtherThrone.wizardCommissionFractionDen () is too similar to KingOfTheEtherThrone.wizardCommissionFractionNum ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

KingOfTheEtherThrone.claimPriceAdjustDen () should be constant 
KingOfTheEtherThrone.claimPriceAdjustNum () should be constant 
KingOfTheEtherThrone.startingClaimPrice () should be constant 
KingOfTheEtherThrone.wizardCommissionFractionDen () should be constant 
KingOfTheEtherThrone.wizardCommissionFractionNum () should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/king_of_the_ether_throne.sol analyzed (1 contracts with 93 detectors), 24 result(s) found
Switched global version to 0.4.18
generating... report/unchecked_low_level_calls/lotto.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/lotto.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/lotto.sol:
dataset/unchecked_low_level_calls/lotto.sol:20:10: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
         winner.send(winAmount);
         ^--------------------^
dataset/unchecked_low_level_calls/lotto.sol:27:10: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
         msg.sender.send(this.balance);
         ^---------------------------^


Lotto.withdrawLeftOver() (dataset/unchecked_low_level_calls/lotto.sol#24-28) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.send(this.balance) (dataset/unchecked_low_level_calls/lotto.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Lotto.winner (dataset/unchecked_low_level_calls/lotto.sol#12) is never initialized. It is used in:
	- Lotto.sendToWinner() (dataset/unchecked_low_level_calls/lotto.sol#17-22)
Lotto.winAmount (dataset/unchecked_low_level_calls/lotto.sol#13) is never initialized. It is used in:
	- Lotto.sendToWinner() (dataset/unchecked_low_level_calls/lotto.sol#17-22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

Lotto.sendToWinner() (dataset/unchecked_low_level_calls/lotto.sol#17-22) ignores return value by winner.send(winAmount) (dataset/unchecked_low_level_calls/lotto.sol#20)
Lotto.withdrawLeftOver() (dataset/unchecked_low_level_calls/lotto.sol#24-28) ignores return value by msg.sender.send(this.balance) (dataset/unchecked_low_level_calls/lotto.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Pragma version^0.4.18 (dataset/unchecked_low_level_calls/lotto.sol#7) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in Lotto.sendToWinner() (dataset/unchecked_low_level_calls/lotto.sol#17-22):
	External calls:
	- winner.send(winAmount) (dataset/unchecked_low_level_calls/lotto.sol#20)
	State variables written after the call(s):
	- payedOut = true (dataset/unchecked_low_level_calls/lotto.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Lotto.winAmount (dataset/unchecked_low_level_calls/lotto.sol#13) should be constant 
Lotto.winner (dataset/unchecked_low_level_calls/lotto.sol#12) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
dataset/unchecked_low_level_calls/lotto.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
Switched global version to 0.4.0
generating... report/unchecked_low_level_calls/mishandled.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/mishandled.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/mishandled.sol:
dataset/unchecked_low_level_calls/mishandled.sol:14:3: Warning: Return value of low-level calls not used.
		msg.sender.send(amountToWithdraw);
		^-------------------------------^


SendBack.withdrawBalance() () ignores return value by msg.sender.send(amountToWithdraw) ()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Pragma version^0.4.0 () allows old versions
solc-0.4.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
dataset/unchecked_low_level_calls/mishandled.sol analyzed (1 contracts with 93 detectors), 3 result(s) found
Switched global version to 0.4.25
generating... report/unchecked_low_level_calls/unchecked_return_value.sol.json
'solc --version' running
'solc dataset/unchecked_low_level_calls/unchecked_return_value.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/share/dataset/unchecked_low_level_calls' running
Compilation warnings/errors on dataset/unchecked_low_level_calls/unchecked_return_value.sol:
dataset/unchecked_low_level_calls/unchecked_return_value.sol:17:5: Warning: Return value of low-level calls not used.
    callee.call();
    ^-----------^


ReturnValue.callnotchecked(address) (dataset/unchecked_low_level_calls/unchecked_return_value.sol#15-18) ignores return value by callee.call() (dataset/unchecked_low_level_calls/unchecked_return_value.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

ReturnValue.callnotchecked(address).callee (dataset/unchecked_low_level_calls/unchecked_return_value.sol#15) lacks a zero-check on :
		- callee.call() (dataset/unchecked_low_level_calls/unchecked_return_value.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Pragma version0.4.25 (dataset/unchecked_low_level_calls/unchecked_return_value.sol#7) allows old versions
solc-0.4.25 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in ReturnValue.callchecked(address) (dataset/unchecked_low_level_calls/unchecked_return_value.sol#11-13):
	- require(bool)(callee.call()) (dataset/unchecked_low_level_calls/unchecked_return_value.sol#12)
Low level call in ReturnValue.callnotchecked(address) (dataset/unchecked_low_level_calls/unchecked_return_value.sol#15-18):
	- callee.call() (dataset/unchecked_low_level_calls/unchecked_return_value.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
dataset/unchecked_low_level_calls/unchecked_return_value.sol analyzed (1 contracts with 93 detectors), 6 result(s) found
