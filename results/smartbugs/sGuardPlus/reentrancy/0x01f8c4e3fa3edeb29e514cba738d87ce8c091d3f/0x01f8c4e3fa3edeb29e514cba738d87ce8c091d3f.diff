--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuardPlus/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol
@@ -1,27 +1,30 @@
-/*

- * @source: etherscan.io

- * @author: -

- * @vulnerable_at_lines: 54

- */

+contract sGuardPlus {

+    constructor() internal {

+        __lock_modifier0_lock = false;

+    }

 

-pragma solidity ^0.4.19;

-

-contract PERSONAL_BANK {

+    bool private __lock_modifier0_lock;

+    modifier __lock_modifier0() {

+        require(!__lock_modifier0_lock);

+        __lock_modifier0_lock = true;

+        _;

+        __lock_modifier0_lock = false;

+    }

+}

+contract PERSONAL_BANK is sGuardPlus {

     mapping(address => uint256) public balances;

-

     uint public MinSum = 1 ether;

-

     LogFile Log = LogFile(0x0486cF65A2F2F3A392CBEa398AFB7F5f0B72FF46);

-

     bool intitalized;

-

     function SetMinSum(uint _val) public {

         if (intitalized) revert();

+

         MinSum = _val;

     }

 

     function SetLogFile(address _log) public {

         if (intitalized) revert();

+

         Log = LogFile(_log);

     }

 

@@ -34,9 +37,8 @@
         Log.AddMessage(msg.sender, msg.value, "Put");

     }

 

-    function Collect(uint _am) public payable {

+    function Collect(uint _am) public payable __lock_modifier0 {

         if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {

-            // <yes> <report> REENTRANCY

             if (msg.sender.call.value(_am)()) {

                 balances[msg.sender] -= _am;

                 Log.AddMessage(msg.sender, _am, "Collect");

@@ -48,7 +50,6 @@
         Deposit();

     }

 }

-

 contract LogFile {

     struct Message {

         address Sender;

@@ -56,11 +57,8 @@
         uint Val;

         uint Time;

     }

-

     Message[] public History;

-

     Message LastMsg;

-

     function AddMessage(address _adr, uint _val, string _data) public {

         LastMsg.Sender = _adr;

         LastMsg.Time = now;
