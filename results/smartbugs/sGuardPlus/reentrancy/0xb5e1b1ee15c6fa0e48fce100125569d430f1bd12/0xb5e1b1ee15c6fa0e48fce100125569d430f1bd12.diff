--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuardPlus/reentrancy/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol
@@ -1,19 +1,21 @@
-/*

- * @source: etherscan.io

- * @author: -

- * @vulnerable_at_lines: 40

- */

+contract sGuardPlus {

+    constructor() internal {

+        __lock_modifier0_lock = false;

+    }

 

-pragma solidity ^0.4.19;

-

-contract Private_Bank {

+    bool private __lock_modifier0_lock;

+    modifier __lock_modifier0() {

+        require(!__lock_modifier0_lock);

+        __lock_modifier0_lock = true;

+        _;

+        __lock_modifier0_lock = false;

+    }

+}

+contract Private_Bank is sGuardPlus {

     mapping(address => uint) public balances;

-

     uint public MinDeposit = 1 ether;

-

     Log TransferLog;

-

-    function Private_Bank(address _log) {

+    constructor(address _log) {

         TransferLog = Log(_log);

     }

 

@@ -24,9 +26,8 @@
         }

     }

 

-    function CashOut(uint _am) public payable {

+    function CashOut(uint _am) public payable __lock_modifier0 {

         if (_am <= balances[msg.sender]) {

-            // <yes> <report> REENTRANCY

             if (msg.sender.call.value(_am)()) {

                 balances[msg.sender] -= _am;

                 TransferLog.AddMessage(msg.sender, _am, "CashOut");

@@ -36,7 +37,6 @@
 

     function() public payable {}

 }

-

 contract Log {

     struct Message {

         address Sender;

@@ -44,11 +44,8 @@
         uint Val;

         uint Time;

     }

-

     Message[] public History;

-

     Message LastMsg;

-

     function AddMessage(address _adr, uint _val, string _data) public {

         LastMsg.Sender = _adr;

         LastMsg.Time = now;
