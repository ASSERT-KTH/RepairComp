--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuard/reentrancy/0x7541b76cb60f4c60af330c208b0623b7f54bf615/0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol
@@ -1,27 +1,48 @@
+contract sGuard {

+    function sub_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+        assert(b <= a);

+        return a - b;

+    }

+

+    bool internal locked_;

+    constructor() internal {

+        locked_ = false;

+    }

+    modifier nonReentrant_() {

+        require(!locked_);

+        locked_ = true;

+        _;

+        locked_ = false;

+    }

+

+    function add_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+        uint256 c = a + b;

+        assert(c >= a);

+        return c;

+    }

+}

 /*

  * @source: etherscan.io

  * @author: -

  * @vulnerable_at_lines: 29

  */

 

-pragma solidity ^0.4.25;

-

-contract U_BANK {

-    function Put(uint _unlockTime) public payable {

+contract U_BANK is sGuard {

+    function Put(uint _unlockTime) public payable nonReentrant_ {

         var acc = Acc[msg.sender];

-        acc.balance += msg.value;

+        acc.balance = add_uint256(acc.balance, msg.value);

         acc.unlockTime = _unlockTime > now ? _unlockTime : now;

         LogFile.AddMessage(msg.sender, msg.value, "Put");

     }

 

-    function Collect(uint _am) public payable {

+    function Collect(uint _am) public payable nonReentrant_ {

         var acc = Acc[msg.sender];

         if (

             acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime

         ) {

             // <yes> <report> REENTRANCY

             if (msg.sender.call.value(_am)()) {

-                acc.balance -= _am;

+                acc.balance = sub_uint256(acc.balance, _am);

                 LogFile.AddMessage(msg.sender, _am, "Collect");

             }

         }

@@ -47,7 +68,7 @@
     }

 }

 

-contract Log {

+contract Log is sGuard {

     struct Message {

         address Sender;

         string Data;
