[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000223s
[INFO] # path : 18

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000681s
Generating VCs ... took 0.001933s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.032396
[
0 -> true
]
[
]
1/6 ... [IO] line 29, (tot + 1) ... unproven
2/6 ... [IO] line 36, (players[0].number + players[1].number) ... unproven
3/6 ... [ETH_LEAK] line 38, res = players[0].addr.send(1800000000000000000); ... unproven
4/6 ... [ETH_LEAK] line 41, res = players[1].addr.send(1800000000000000000); ... unproven
5/6 ... [ETH_LEAK] line 50, res = msg.sender.send(this.balance); ... unproven
6/6 ... [TX_ORG] line 49, assume((msg.sender != owner)); ... proven
took 0.627361s

Generating VCs ... took 0.000982s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.663404
[
0 -> (Read(@TU, owner__@14) == true)
]
[
]
1/6 ... [IO] line 29, (tot + 1) ... unproven
2/6 ... [IO] line 36, (players[0].number + players[1].number) ... unproven
3/6 ... [ETH_LEAK] line 38, res = players[0].addr.send(1800000000000000000); ... unproven
4/6 ... [ETH_LEAK] line 41, res = players[1].addr.send(1800000000000000000); ... unproven
5/6 ... [ETH_LEAK] line 50, res = msg.sender.send(this.balance); ... proven
6/6 ... [TX_ORG] line 49, assume((msg.sender != owner)); ... proven
took 0.45164s

Generating VCs ... took 0.000968s
Checking validity of VCs ... took 0.196649s

Generating VCs ... took 0.001076s
Checking validity of VCs ... took 0.754896s

Generating VCs ... took 0.000988s
Checking validity of VCs ... took 0.829411s

Generating VCs ... took 0.001017s
Checking validity of VCs ... took 0.16018s

Generating VCs ... took 0.001368s
Checking validity of VCs ... took 0.699646s

Generating VCs ... took 0.000907s
Checking validity of VCs ... took 0.708269s

Generating VCs ... took 0.000908000000001s
Checking validity of VCs ... took 0.171021s

Iter : 10 To explore : 20 Explored : 38 Total elapsed : 4.652002
Generating VCs ... took 0.000855s
Checking validity of VCs ... took 0.180667s

Generating VCs ... took 0.000885s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 11 Total elapsed : 4.970738
[
0 -> ((1000000000000000000 >= tot__@12) /\ (Read(@TU, owner__@14) == true))
]
[
]
1/6 ... [IO] line 29, (tot + 1) ... unproven
2/6 ... [IO] line 36, (players[0].number + players[1].number) ... unproven
3/6 ... [ETH_LEAK] line 38, res = players[0].addr.send(1800000000000000000); ... unproven
4/6 ... [ETH_LEAK] line 41, res = players[1].addr.send(1800000000000000000); ... unproven
5/6 ... [ETH_LEAK] line 50, res = msg.sender.send(this.balance); ... proven
6/6 ... [TX_ORG] line 49, assume((msg.sender != owner)); ... proven
took 0.52156s

Generating VCs ... took 0.000912s
Checking validity of VCs ... took 0.678766s

Generating VCs ... took 0.00089s
Checking validity of VCs ... took 0.591163s

Generating VCs ... took 0.000923s
Checking validity of VCs ... took 0.17226s

Generating VCs ... took 0.000918s
Checking validity of VCs ... took 0.181545s

Generating VCs ... took 0.00087s
Checking validity of VCs ... took 0.128207s

Generating VCs ... took 0.000965000000001s
Checking validity of VCs ... took 0.126083s

Generating VCs ... took 0.000947s
Checking validity of VCs ... took 0.127834s

Generating VCs ... took 0.000899s
Checking validity of VCs ... took 0.126933s

Iter : 20 To explore : 15 Explored : 59 Total elapsed : 7.504839
Generating VCs ... took 0.000917s
Checking validity of VCs ... took 0.127155s

Generating VCs ... took 0.001311s
Checking validity of VCs ... took 0.128865s

Generating VCs ... took 0.000886s
Checking validity of VCs ... took 0.12784s

Generating VCs ... took 0.000899s
Checking validity of VCs ... took 0.127705s

Generating VCs ... took 0.000924999999999s
Checking validity of VCs ... took 0.126298s

Generating VCs ... took 0.000928s
Checking validity of VCs ... took 0.126826s

Generating VCs ... took 0.000885s
Checking validity of VCs ... took 0.126609s

Generating VCs ... took 0.000913000000001s
Checking validity of VCs ... took 0.12781s

Generating VCs ... took 0.000933000000002s
Checking validity of VCs ... took 0.127933s

Generating VCs ... took 0.000867000000001s
Checking validity of VCs ... took 0.126681s

Iter : 30 To explore : 5 Explored : 59 Total elapsed : 8.789305
Generating VCs ... took 0.000857000000002s
Checking validity of VCs ... took 0.12811s

Generating VCs ... took 0.000866999999998s
Checking validity of VCs ... took 0.631631s

Generating VCs ... took 0.000862s
Checking validity of VCs ... took 0.216166s

Generating VCs ... took 0.000951000000001s
Checking validity of VCs ... took 0.662049s

Generating VCs ... took 0.000867999999999s
Checking validity of VCs ... took 0.187551s

Generating VCs ... took 0.000902999999999s
Checking validity of VCs ... took 0.131714s

Generating VCs ... took 0.000907s
Checking validity of VCs ... took 0.133951s

Generating VCs ... took 0.000935s
Checking validity of VCs ... took 0.133497s

Generating VCs ... took 0.000895s
Checking validity of VCs ... took 0.131822s

Generating VCs ... took 0.000888999999999s
Checking validity of VCs ... took 0.130561s

Iter : 40 To explore : 4 Explored : 68 Total elapsed : 11.291748
Generating VCs ... took 0.000933s
Checking validity of VCs ... took 0.128208s

Generating VCs ... took 0.000907s
Checking validity of VCs ... took 0.130613s

Generating VCs ... took 0.000853000000001s
Checking validity of VCs ... took 0.216273s

Generating VCs ... took 0.000941000000001s
Checking validity of VCs ... took 0.216883s

Generating VCs ... took 0.000558s
Checking validity of VCs ... 
1/10 ... [NO_EFFECT] line 28, (@pre2 == players[tot].number) ... unproven
2/10 ... [NO_EFFECT] line 28, (@pre3 == players[tot].addr) ... unproven
3/10 ... [NO_EFFECT] line 29, (@pre1 == tot) ... unproven
4/10 ... [NO_EFFECT] line 36, (@pre4 == n) ... unproven
5/10 ... [ASSIGN_CONST] line 29, (tot == 0) ... unproven
6/10 ... [ASSIGN_CONST] line 36, ((!(players[0].addr != players[1].addr)) || (n == 0)) ... unproven
7/10 ... [DEAD] line 26, false ... unproven
8/10 ... [DEAD] line 31, false ... unproven
9/10 ... [DEAD] line 37, false ... unproven
10/10 ... [DEAD] line 49, false ... unproven
took 0.539301s


===== Vulnerability Report =====
[1] [IO] line 29, (tot + 1) : unproven
[2] [IO] line 36, (players[0].number + players[1].number) : unproven
[3] [ETH_LEAK] line 38, res = players[0].addr.send(1800000000000000000); : unproven
[4] [ETH_LEAK] line 41, res = players[1].addr.send(1800000000000000000); : unproven
[5] [ETH_LEAK] line 50, res = msg.sender.send(this.balance); : proven
[6] [TX_ORG] line 49, assume((msg.sender != owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 28, (@pre2 == players[tot].number) : unproven
[2] [NO_EFFECT] line 28, (@pre3 == players[tot].addr) : unproven
[3] [NO_EFFECT] line 29, (@pre1 == tot) : unproven
[4] [NO_EFFECT] line 36, (@pre4 == n) : unproven
[5] [ASSIGN_CONST] line 29, (tot == 0) : unproven
[6] [ASSIGN_CONST] line 36, ((!(players[0].addr != players[1].addr)) || (n == 0)) : unproven
[7] [DEAD] line 26, false : unproven
[8] [DEAD] line 31, false : unproven
[9] [DEAD] line 37, false : unproven
[10] [DEAD] line 49, false : unproven

============ Statistics ============
# Iter                    : 44
# Alarm / Query           : 4 / 6
- integer over/underflow  : 2 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 3
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 12.5293560028
Time Elapsed (CPU)  : 12.528278
