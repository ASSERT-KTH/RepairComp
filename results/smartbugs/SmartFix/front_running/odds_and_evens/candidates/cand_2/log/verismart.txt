[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000474s
[INFO] # path : 19

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001162s
Generating VCs ... took 0.002353s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.042909
[
0 -> true
]
[
]
1/7 ... [IO] line 29, (tot + 1) ... unproven
2/7 ... [IO] line 36, (players[0].number + players[1].number) ... proven
3/7 ... [IO] line 37, (players[0].number + players[1].number) ... proven
4/7 ... [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); ... unproven
5/7 ... [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); ... unproven
6/7 ... [ETH_LEAK] line 51, res = msg.sender.send(this.balance); ... unproven
7/7 ... [TX_ORG] line 50, assume((msg.sender != owner)); ... proven
took 0.484078s

Generating VCs ... took 0.001141s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.527287
[
0 -> (Read(@TU, owner__@14) == true)
]
[
]
1/7 ... [IO] line 29, (tot + 1) ... unproven
2/7 ... [IO] line 36, (players[0].number + players[1].number) ... proven
3/7 ... [IO] line 37, (players[0].number + players[1].number) ... proven
4/7 ... [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); ... unproven
5/7 ... [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); ... unproven
6/7 ... [ETH_LEAK] line 51, res = msg.sender.send(this.balance); ... proven
7/7 ... [TX_ORG] line 50, assume((msg.sender != owner)); ... proven
took 0.37995s

Generating VCs ... took 0.001238s
Checking validity of VCs ... took 0.176587s

Generating VCs ... took 0.00128s
Checking validity of VCs ... took 1.765912s

Generating VCs ... took 0.001152s
Checking validity of VCs ... took 1.210337s

Generating VCs ... took 0.00107s
Checking validity of VCs ... took 0.129789s

Generating VCs ... took 0.00123s
Checking validity of VCs ... took 1.293861s

Generating VCs ... took 0.001103s
Checking validity of VCs ... took 1.084019s

Generating VCs ... took 0.001098s
Checking validity of VCs ... took 0.178427s

Iter : 10 To explore : 20 Explored : 38 Total elapsed : 6.764956
Generating VCs ... took 0.001105s
Checking validity of VCs ... took 0.193573s

Generating VCs ... took 0.001179s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 11 Total elapsed : 7.117762
[
0 -> ((1000000000000000000 >= tot__@12) /\ (Read(@TU, owner__@14) == true))
]
[
]
1/7 ... [IO] line 29, (tot + 1) ... unproven
2/7 ... [IO] line 36, (players[0].number + players[1].number) ... proven
3/7 ... [IO] line 37, (players[0].number + players[1].number) ... proven
4/7 ... [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); ... unproven
5/7 ... [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); ... unproven
6/7 ... [ETH_LEAK] line 51, res = msg.sender.send(this.balance); ... proven
7/7 ... [TX_ORG] line 50, assume((msg.sender != owner)); ... proven
took 0.822908s

Generating VCs ... took 0.001132s
Checking validity of VCs ... took 2.132009s

Generating VCs ... took 0.001292s
Checking validity of VCs ... took 1.929782s

Generating VCs ... took 0.001296s
Checking validity of VCs ... took 0.240979s

Generating VCs ... took 0.00127s
Checking validity of VCs ... took 0.206549s

Generating VCs ... took 0.001161s
Checking validity of VCs ... took 0.139775s

Generating VCs ... took 0.001181s
Checking validity of VCs ... took 0.135098s

Generating VCs ... took 0.001188s
Checking validity of VCs ... took 0.136225s

Generating VCs ... took 0.001247s
Checking validity of VCs ... took 0.137816s

Iter : 20 To explore : 15 Explored : 59 Total elapsed : 12.862075
Generating VCs ... took 0.001103s
Checking validity of VCs ... took 0.137342s

Generating VCs ... took 0.001583s
Checking validity of VCs ... took 0.137565s

Generating VCs ... took 0.001121s
Checking validity of VCs ... took 0.13798s

Generating VCs ... took 0.001194s
Checking validity of VCs ... took 0.139289s

Generating VCs ... took 0.001193s
Checking validity of VCs ... took 0.137591s

Generating VCs ... took 0.001274s
Checking validity of VCs ... took 0.138383s

Generating VCs ... took 0.001426s
Checking validity of VCs ... took 0.137749s

Generating VCs ... took 0.001189s
Checking validity of VCs ... took 0.139568s

Generating VCs ... took 0.001235s
Checking validity of VCs ... took 0.139358s

Generating VCs ... took 0.00115s
Checking validity of VCs ... took 0.137104s

Iter : 30 To explore : 5 Explored : 59 Total elapsed : 14.257904
Generating VCs ... took 0.001227s
Checking validity of VCs ... took 0.135271s

Generating VCs ... took 0.001175s
Checking validity of VCs ... took 1.369005s

Generating VCs ... took 0.001173s
Checking validity of VCs ... took 0.23454s

Generating VCs ... took 0.001224s
Checking validity of VCs ... took 1.287641s

Generating VCs ... took 0.001095s
Checking validity of VCs ... took 0.192517s

Generating VCs ... took 0.00115s
Checking validity of VCs ... took 0.138969s

Generating VCs ... took 0.001143s
Checking validity of VCs ... took 0.138956s

Generating VCs ... took 0.001177s
Checking validity of VCs ... took 0.138781s

Generating VCs ... took 0.001348s
Checking validity of VCs ... took 0.137239s

Generating VCs ... took 0.001137s
Checking validity of VCs ... took 0.139956s

Iter : 40 To explore : 4 Explored : 68 Total elapsed : 18.189966
Generating VCs ... took 0.001192s
Checking validity of VCs ... took 0.137484s

Generating VCs ... took 0.001148s
Checking validity of VCs ... took 0.136573s

Generating VCs ... took 0.001393s
Checking validity of VCs ... took 0.232553s

Generating VCs ... took 0.001314s
Checking validity of VCs ... took 0.232128s

Generating VCs ... took 0.000585000000001s
Checking validity of VCs ... 
1/11 ... [NO_EFFECT] line 28, (@pre2 == players[tot].number) ... unproven
2/11 ... [NO_EFFECT] line 28, (@pre3 == players[tot].addr) ... unproven
3/11 ... [NO_EFFECT] line 29, (@pre1 == tot) ... unproven
4/11 ... [NO_EFFECT] line 37, (@pre4 == n) ... unproven
5/11 ... [ASSIGN_CONST] line 29, (tot == 0) ... unproven
6/11 ... [ASSIGN_CONST] line 37, ((!(players[0].addr != players[1].addr)) || (n == 0)) ... unproven
7/11 ... [DEAD] line 26, false ... unproven
8/11 ... [DEAD] line 31, false ... unproven
9/11 ... [DEAD] line 36, false ... unproven
10/11 ... [DEAD] line 38, false ... unproven
11/11 ... [DEAD] line 50, false ... unproven
took 0.902235s


===== Vulnerability Report =====
[1] [IO] line 29, (tot + 1) : unproven
[2] [IO] line 36, (players[0].number + players[1].number) : proven
[3] [IO] line 37, (players[0].number + players[1].number) : proven
[4] [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); : unproven
[5] [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); : unproven
[6] [ETH_LEAK] line 51, res = msg.sender.send(this.balance); : proven
[7] [TX_ORG] line 50, assume((msg.sender != owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 28, (@pre2 == players[tot].number) : unproven
[2] [NO_EFFECT] line 28, (@pre3 == players[tot].addr) : unproven
[3] [NO_EFFECT] line 29, (@pre1 == tot) : unproven
[4] [NO_EFFECT] line 37, (@pre4 == n) : unproven
[5] [ASSIGN_CONST] line 29, (tot == 0) : unproven
[6] [ASSIGN_CONST] line 37, ((!(players[0].addr != players[1].addr)) || (n == 0)) : unproven
[7] [DEAD] line 26, false : unproven
[8] [DEAD] line 31, false : unproven
[9] [DEAD] line 36, false : unproven
[10] [DEAD] line 38, false : unproven
[11] [DEAD] line 50, false : unproven

============ Statistics ============
# Iter                    : 44
# Alarm / Query           : 3 / 7
- integer over/underflow  : 1 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 3
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 19.8411390781
Time Elapsed (CPU)  : 19.837313
