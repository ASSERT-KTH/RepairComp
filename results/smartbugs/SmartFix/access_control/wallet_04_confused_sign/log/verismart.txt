[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000184s
[INFO] # path : 13

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.0003s
Generating VCs ... took 0.000959s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.032109
[
0 -> true
]
[
]
1/6 ... [IO] line 24, (balances[msg.sender] + msg.value) ... proven
2/6 ... [IO] line 25, (balances[msg.sender] + msg.value) ... proven
3/6 ... [IO] line 32, (balances[msg.sender] - amount) ... unproven
4/6 ... [ETH_LEAK] line 31, msg.sender.transfer(amount); ... unproven
5/6 ... [ETH_LEAK] line 39, to.transfer(this.balance); ... unproven
6/6 ... [TX_ORG] line 38, assume((creator == msg.sender)); ... proven
took 0.220309s

Generating VCs ... took 0.000281s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.252135
[
0 -> (Read(@TU, creator__@3) == true)
]
[
]
1/6 ... [IO] line 24, (balances[msg.sender] + msg.value) ... proven
2/6 ... [IO] line 25, (balances[msg.sender] + msg.value) ... proven
3/6 ... [IO] line 32, (balances[msg.sender] - amount) ... unproven
4/6 ... [ETH_LEAK] line 31, msg.sender.transfer(amount); ... unproven
5/6 ... [ETH_LEAK] line 39, to.transfer(this.balance); ... proven
6/6 ... [TX_ORG] line 38, assume((creator == msg.sender)); ... proven
took 0.130945s

Generating VCs ... took 0.000277s
Checking validity of VCs ... took 0.361864s

Generating VCs ... took 0.000281s
Checking validity of VCs ... took 0.566928s

Generating VCs ... took 0.00028s
Checking validity of VCs ... took 0.248081s

Generating VCs ... took 0.000574s
Checking validity of VCs ... took 1.512755s

Generating VCs ... took 0.000279s
Checking validity of VCs ... took 0.707783s

Generating VCs ... took 0.000343s
Checking validity of VCs ... took 1.642899s

Generating VCs ... took 0.000313s
Checking validity of VCs ... took 2.030445s

Iter : 10 To explore : 0 Explored : 12 Total elapsed : 7.459177
Generating VCs ... took 0.000169s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 25, (@pre1 == balances[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 32, (@pre2 == balances[msg.sender]) ... unproven
3/9 ... [ASSIGN_CONST] line 25, (balances[msg.sender] == 0) ... unproven
4/9 ... [ASSIGN_CONST] line 32, (balances[msg.sender] == 0) ... unproven
5/9 ... [DEAD] line 24, false ... unproven
6/9 ... [DEAD] line 30, false ... unproven
7/9 ... [DEAD] line 31, false ... unproven
8/9 ... [DEAD] line 38, false ... unproven
9/9 ... [DEAD] line 39, false ... unproven
took 0.756141s


===== Vulnerability Report =====
[1] [IO] line 24, (balances[msg.sender] + msg.value) : proven
[2] [IO] line 25, (balances[msg.sender] + msg.value) : proven
[3] [IO] line 32, (balances[msg.sender] - amount) : unproven
[4] [ETH_LEAK] line 31, msg.sender.transfer(amount); : unproven
[5] [ETH_LEAK] line 39, to.transfer(this.balance); : proven
[6] [TX_ORG] line 38, assume((creator == msg.sender)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 25, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 32, (@pre2 == balances[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 25, (balances[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 32, (balances[msg.sender] == 0) : unproven
[5] [DEAD] line 24, false : unproven
[6] [DEAD] line 30, false : unproven
[7] [DEAD] line 31, false : unproven
[8] [DEAD] line 38, false : unproven
[9] [DEAD] line 39, false : unproven

============ Statistics ============
# Iter                    : 10
# Alarm / Query           : 2 / 6
- integer over/underflow  : 1 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 8.23611092567
Time Elapsed (CPU)  : 8.215581
