[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 7
[INFO] reachable : 6
[INFO] Generating Paths ... took 0.000114s
[INFO] # path : 22

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000455s
Generating VCs ... took 0.003982s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.036846
[
-1 -> true
0 -> true
]
[
]
1/6 ... [IO] line 29, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 41, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 42, msg.sender.call.value(_am)() ... unproven
4/6 ... [RE_EL] line 42, msg.sender.call.value(_am)() ... unproven
5/6 ... [RE] line 23, (ETH_VAULT, Deposit, []) ... unproven
6/6 ... [RE] line 34, (ETH_VAULT, CashOut, [uint256]) ... unproven
took 0.505259s

Generating VCs ... took 0.005776s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 6.992707
[
-1 -> @Invest_sum >= Σ_u balances__@5
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/6 ... [IO] line 29, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 41, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 42, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 42, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 23, (ETH_VAULT, Deposit, []) ... unproven
6/6 ... [RE] line 34, (ETH_VAULT, CashOut, [uint256]) ... unproven
took 12.897054s

Generating VCs ... took 0.003093s
Checking validity of VCs ... took 55.06627s

Generating VCs ... took 0.00485099999999s
Checking validity of VCs ... took 1.846327s

Generating VCs ... took 0.003248s
Checking validity of VCs ... took 2.372229s

Generating VCs ... took 0.00358s
Checking validity of VCs ... took 1.983736s

Generating VCs ... took 0.003095s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 82.165828
[
-1 -> ((MinDeposit__@10 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/6 ... [IO] line 29, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 41, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 42, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 42, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 23, (ETH_VAULT, Deposit, []) ... unproven
6/6 ... [RE] line 34, (ETH_VAULT, CashOut, [uint256]) ... unproven
took 8.121847s

Generating VCs ... took 0.003561s
Checking validity of VCs ... took 55.179792s

Generating VCs ... took 0.00385199999999s
Checking validity of VCs ... took 2.400784s

Iter : 10 To explore : 33 Explored : 90 Total elapsed : 140.461109
Generating VCs ... took 0.003332s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 146.527115
[
-1 -> ((MinDeposit__@10 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((MinDeposit__@10 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/6 ... [IO] line 29, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 41, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 42, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 42, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 23, (ETH_VAULT, Deposit, []) ... unproven
6/6 ... [RE] line 34, (ETH_VAULT, CashOut, [uint256]) ... unproven
took 6.845244s

Generating VCs ... took 0.00313700000001s
Checking validity of VCs ... took 56.230664s

Generating VCs ... took 0.001587s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 29, (@pre1 == balances[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 41, (@pre2 == balances[msg.sender]) ... unproven
3/9 ... [NO_EFFECT] line 72, (@pre5 == LastMsg.Sender) ... unproven
4/9 ... [NO_EFFECT] line 73, (@pre4 == LastMsg.Time) ... unproven
5/9 ... [NO_EFFECT] line 74, (@pre3 == LastMsg.Val) ... unproven
6/9 ... [ASSIGN_CONST] line 29, (balances[msg.sender] == 0) ... unproven
7/9 ... [ASSIGN_CONST] line 41, (balances[msg.sender] == 0) ... unproven
8/9 ... [DEAD] line 27, false ... unproven
9/9 ... [DEAD] line 38, false ... unproven
took 1.193949s


===== Vulnerability Report =====
[1] [IO] line 29, (balances[msg.sender] + msg.value) : unproven
[2] [IO] line 41, (balances[msg.sender] - _am) : proven
[3] [ETH_LEAK] line 42, msg.sender.call.value(_am)() : proven
[4] [RE_EL] line 42, msg.sender.call.value(_am)() : proven
[5] [RE] line 23, (ETH_VAULT, Deposit, []) : unproven
[6] [RE] line 34, (ETH_VAULT, CashOut, [uint256]) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 29, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 41, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 72, (@pre5 == LastMsg.Sender) : unproven
[4] [NO_EFFECT] line 73, (@pre4 == LastMsg.Time) : unproven
[5] [NO_EFFECT] line 74, (@pre3 == LastMsg.Val) : unproven
[6] [ASSIGN_CONST] line 29, (balances[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 41, (balances[msg.sender] == 0) : unproven
[8] [DEAD] line 27, false : unproven
[9] [DEAD] line 38, false : unproven

============ Statistics ============
# Iter                    : 11
# Alarm / Query           : 3 / 6
- integer over/underflow  : 1 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 204.75894618
Time Elapsed (CPU)  : 204.743736
