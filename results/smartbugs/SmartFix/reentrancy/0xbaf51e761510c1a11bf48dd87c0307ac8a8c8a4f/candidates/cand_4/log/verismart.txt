[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 7
[INFO] reachable : 6
[INFO] Generating Paths ... took 0.000298s
[INFO] # path : 22

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001203s
Generating VCs ... took 0.007252s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.047451
[
-1 -> true
0 -> true
]
[
]
1/6 ... [IO] line 29, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 41, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 42, msg.sender.call.value(_am)() ... unproven
4/6 ... [RE_EL] line 42, msg.sender.call.value(_am)() ... unproven
5/6 ... [RE] line 23, (ETH_VAULT, Deposit, []) ... unproven
6/6 ... [RE] line 34, (ETH_VAULT, CashOut, [uint256]) ... unproven
took 0.407195s

Generating VCs ... took 0.002897s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 8.508357
[
-1 -> @Invest_sum >= Σ_u balances__@5
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/6 ... [IO] line 29, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 41, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 42, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 42, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 23, (ETH_VAULT, Deposit, []) ... unproven
6/6 ... [RE] line 34, (ETH_VAULT, CashOut, [uint256]) ... unproven
took 14.288709s

Generating VCs ... took 0.002995s
Checking validity of VCs ... took 48.263021s

Generating VCs ... took 0.00334s
Checking validity of VCs ... took 2.278673s

Generating VCs ... took 0.00332899999999s
Checking validity of VCs ... took 2.01812s

Generating VCs ... took 0.00342300000001s
Checking validity of VCs ... took 1.94673s

Generating VCs ... took 0.002962s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 75.863293
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/6 ... [IO] line 29, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 41, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 42, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 42, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 23, (ETH_VAULT, Deposit, []) ... unproven
6/6 ... [RE] line 34, (ETH_VAULT, CashOut, [uint256]) ... unproven
took 7.391265s

Generating VCs ... took 0.00425300000001s
Checking validity of VCs ... took 50.247293s

Generating VCs ... took 0.003602s
Checking validity of VCs ... took 2.019854s

Iter : 10 To explore : 33 Explored : 90 Total elapsed : 128.949272
Generating VCs ... took 0.00300799999999s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 134.174927
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/6 ... [IO] line 29, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 41, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 42, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 42, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 23, (ETH_VAULT, Deposit, []) ... unproven
6/6 ... [RE] line 34, (ETH_VAULT, CashOut, [uint256]) ... unproven
took 6.133094s

Generating VCs ... took 0.00353200000001s
Checking validity of VCs ... took 48.389726s

Generating VCs ... took 0.00161700000001s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 29, (@pre1 == balances[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 41, (@pre2 == balances[msg.sender]) ... unproven
3/9 ... [NO_EFFECT] line 72, (@pre5 == LastMsg.Sender) ... unproven
4/9 ... [NO_EFFECT] line 73, (@pre4 == LastMsg.Time) ... unproven
5/9 ... [NO_EFFECT] line 74, (@pre3 == LastMsg.Val) ... unproven
6/9 ... [ASSIGN_CONST] line 29, (balances[msg.sender] == 0) ... unproven
7/9 ... [ASSIGN_CONST] line 41, (balances[msg.sender] == 0) ... unproven
8/9 ... [DEAD] line 27, false ... unproven
9/9 ... [DEAD] line 38, false ... unproven
took 0.877489s


===== Vulnerability Report =====
[1] [IO] line 29, (balances[msg.sender] + msg.value) : unproven
[2] [IO] line 41, (balances[msg.sender] - _am) : proven
[3] [ETH_LEAK] line 42, msg.sender.call.value(_am)() : proven
[4] [RE_EL] line 42, msg.sender.call.value(_am)() : proven
[5] [RE] line 23, (ETH_VAULT, Deposit, []) : unproven
[6] [RE] line 34, (ETH_VAULT, CashOut, [uint256]) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 29, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 41, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 72, (@pre5 == LastMsg.Sender) : unproven
[4] [NO_EFFECT] line 73, (@pre4 == LastMsg.Time) : unproven
[5] [NO_EFFECT] line 74, (@pre3 == LastMsg.Val) : unproven
[6] [ASSIGN_CONST] line 29, (balances[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 41, (balances[msg.sender] == 0) : unproven
[8] [DEAD] line 27, false : unproven
[9] [DEAD] line 38, false : unproven

============ Statistics ============
# Iter                    : 11
# Alarm / Query           : 3 / 6
- integer over/underflow  : 1 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 184.403038979
Time Elapsed (CPU)  : 184.362752
