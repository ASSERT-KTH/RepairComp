[INFO] compiled with solc ver. 0.4.25
[INFO] all funcs : 7
[INFO] reachable : 6

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[STEP] Run analyzer
[STEP] Collect fix targets
    (IO, (ETH_VAULT/CashOut/[uint256]), 43, (balances[msg.sender] - _am)),
    (IO, (ETH_VAULT/Deposit/[]), 29, (balances[msg.sender] + msg.value)),
    (ETH_LEAK, (ETH_VAULT/CashOut/[uint256]), 41, msg.sender.call.value(_am)()),
    (RE_EL, (ETH_VAULT/CashOut/[uint256]), 41, msg.sender.call.value(_am)())

[INFO] # of basic patch components : 5
[INFO] extracted components
[
InsertLine (29, assume(((balances[msg.sender] + msg.value) >= balances[msg.sender]));),
InsertLine (43, assume((balances[msg.sender] >= _am));),
Replace (38, (_am <= balances[msg.sender]), (_am > balances[msg.sender])),
AtomLst [
Move ([43] -> 41)
ElseRevert (line 45)
],
AtomLst [
Add @nonReentrant to (ETH_VAULT, Deposit, []) (line 23)
Add @nonReentrant to (ETH_VAULT, CashOut, [uint256]) (line 34)
Add @nonReentrant to (ETH_VAULT, @fallback, []) (line 49)
]
]
- New best candidate, iter 1, 289.232079029s : results/reentrancy/0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f/candidates/cand_4/patch.sol
