[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 7
[INFO] reachable : 6
[INFO] Generating Paths ... took 0.000285s
[INFO] # path : 22

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001305s
Generating VCs ... took 0.006342s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.051465
[
-1 -> true
0 -> true
]
[
]
1/6 ... [IO] line 28, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 40, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 41, msg.sender.call.value(_am)() ... unproven
4/6 ... [RE_EL] line 41, msg.sender.call.value(_am)() ... unproven
5/6 ... [RE] line 22, (Private_Bank, Deposit, []) ... unproven
6/6 ... [RE] line 33, (Private_Bank, CashOut, [uint256]) ... unproven
took 0.425238s

Generating VCs ... took 0.003042s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 4.598343
[
-1 -> @Invest_sum >= Σ_u balances__@5
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/6 ... [IO] line 28, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 40, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 41, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 41, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 22, (Private_Bank, Deposit, []) ... unproven
6/6 ... [RE] line 33, (Private_Bank, CashOut, [uint256]) ... unproven
took 11.058195s

Generating VCs ... took 0.003239s
Checking validity of VCs ... took 49.954019s

Generating VCs ... took 0.003106s
Checking validity of VCs ... took 1.489902s

Generating VCs ... took 0.003701s
Checking validity of VCs ... took 1.876932s

Generating VCs ... took 0.003305s
Checking validity of VCs ... took 2.292839s

Generating VCs ... took 0.00317399999999s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 72.671113
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/6 ... [IO] line 28, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 40, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 41, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 41, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 22, (Private_Bank, Deposit, []) ... unproven
6/6 ... [RE] line 33, (Private_Bank, CashOut, [uint256]) ... unproven
took 6.473503s

Generating VCs ... took 0.00319400000001s
Checking validity of VCs ... took 46.504111s

Generating VCs ... took 0.003235s
Checking validity of VCs ... took 4.29294s

Iter : 10 To explore : 33 Explored : 90 Total elapsed : 124.459561
Generating VCs ... took 0.003507s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 130.752691
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/6 ... [IO] line 28, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 40, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 41, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 41, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 22, (Private_Bank, Deposit, []) ... unproven
6/6 ... [RE] line 33, (Private_Bank, CashOut, [uint256]) ... unproven
took 7.312767s

Generating VCs ... took 0.003604s
Checking validity of VCs ... took 48.683242s

Generating VCs ... took 0.00163400000002s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 28, (@pre1 == balances[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 40, (@pre2 == balances[msg.sender]) ... unproven
3/9 ... [NO_EFFECT] line 71, (@pre5 == LastMsg.Sender) ... unproven
4/9 ... [NO_EFFECT] line 72, (@pre4 == LastMsg.Time) ... unproven
5/9 ... [NO_EFFECT] line 73, (@pre3 == LastMsg.Val) ... unproven
6/9 ... [ASSIGN_CONST] line 28, (balances[msg.sender] == 0) ... unproven
7/9 ... [ASSIGN_CONST] line 40, (balances[msg.sender] == 0) ... unproven
8/9 ... [DEAD] line 26, false ... unproven
9/9 ... [DEAD] line 37, false ... unproven
took 0.898246s


===== Vulnerability Report =====
[1] [IO] line 28, (balances[msg.sender] + msg.value) : unproven
[2] [IO] line 40, (balances[msg.sender] - _am) : proven
[3] [ETH_LEAK] line 41, msg.sender.call.value(_am)() : proven
[4] [RE_EL] line 41, msg.sender.call.value(_am)() : proven
[5] [RE] line 22, (Private_Bank, Deposit, []) : unproven
[6] [RE] line 33, (Private_Bank, CashOut, [uint256]) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 28, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 40, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 71, (@pre5 == LastMsg.Sender) : unproven
[4] [NO_EFFECT] line 72, (@pre4 == LastMsg.Time) : unproven
[5] [NO_EFFECT] line 73, (@pre3 == LastMsg.Val) : unproven
[6] [ASSIGN_CONST] line 28, (balances[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 40, (balances[msg.sender] == 0) : unproven
[8] [DEAD] line 26, false : unproven
[9] [DEAD] line 37, false : unproven

============ Statistics ============
# Iter                    : 11
# Alarm / Query           : 3 / 6
- integer over/underflow  : 1 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 181.397070885
Time Elapsed (CPU)  : 181.367567
