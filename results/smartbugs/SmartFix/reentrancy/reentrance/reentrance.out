[INFO] compiled with solc ver. 0.4.25
[INFO] all funcs : 5
[INFO] reachable : 5

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[STEP] Run analyzer
[STEP] Collect fix targets
    (IO, (Reentrance/donate/[address]), 14, (balances[_to] + msg.value)),
    (IO, (Reentrance/withdraw/[uint256]), 27, (balances[msg.sender] - _amount)),
    (ETH_LEAK, (Reentrance/withdraw/[uint256]), 24, msg.sender.call.value(_amount)()),
    (RE_EL, (Reentrance/withdraw/[uint256]), 24, msg.sender.call.value(_amount)())

[INFO] # of basic patch components : 5
[INFO] extracted components
[
InsertLine (14, assume(((balances[_to] + msg.value) >= balances[_to]));),
InsertLine (27, assume((balances[msg.sender] >= _amount));),
Replace (22, (balances[msg.sender] >= _amount), (balances[msg.sender] < _amount)),
AtomLst [
Move ([27] -> 24)
ElseRevert (line 26)
],
AtomLst [
Add @nonReentrant to (Reentrance, donate, [address]) (line 13)
Add @nonReentrant to (Reentrance, withdraw, [uint256]) (line 21)
Add @nonReentrant to (Reentrance, @fallback, []) (line 31)
]
]
- New best candidate, iter 1, 195.255140066s : results/reentrancy/reentrance/candidates/cand_4/patch.sol
