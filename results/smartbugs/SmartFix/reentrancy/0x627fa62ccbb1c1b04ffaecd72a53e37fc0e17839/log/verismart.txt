[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 20
[INFO] reachable : 10
[INFO] Generating Paths ... took 0.00028s
[INFO] # path : 29

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000734s
Generating VCs ... took 0.004189s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.034473
[
-1 -> true
0 -> true
]
[
]
1/13 ... [IO] line 71, (Holders[msg.sender] + msg.value) ... unproven
2/13 ... [IO] line 96, (Holders[_addr] - _wei) ... unproven
3/13 ... [ETH_LEAK] line 94, _addr.call.value(_wei)() ... unproven
4/13 ... [RE_EL] line 94, _addr.call.value(_wei)() ... unproven
5/13 ... [RE] line 14, (TokenBank, changeOwner, [address]) ... unproven
6/13 ... [RE] line 21, (TokenBank, confirmOwner, []) ... unproven
7/13 ... [RE] line 53, (TokenBank, initTokenBank, []) ... unproven
8/13 ... [RE] line 60, (TokenBank, @fallback, []) ... unproven
9/13 ... [RE] line 66, (TokenBank, Deposit, []) ... unproven
10/13 ... [RE] line 75, (TokenBank, WitdrawTokenToHolder, [address, address, uint256]) ... unproven
11/13 ... [RE] line 86, (TokenBank, WithdrawToHolder, [address, uint256]) ... unproven
12/13 ... [TX_ORG] line 24, assume((msg.sender == newOwner)); ... proven
13/13 ... [TX_ORG] line 32, assume((owner == msg.sender)); ... proven
took 0.504013s

Generating VCs ... took 0.002523s
Checking validity of VCs ... took 0.041533s

Generating VCs ... took 0.002617s
Checking validity of VCs ... took 0.032355s

Generating VCs ... took 0.002741s
Checking validity of VCs ... took 0.034331s

Generating VCs ... took 0.002772s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 5 Total elapsed : 1.144857
[
-1 -> ((Read(@TU, newOwner__@3) == true) /\ (Read(@TU, owner__@7) == true))
0 -> ((Read(@TU, newOwner__@3) == true) /\ (Read(@TU, owner__@7) == true))
]
[
]
1/13 ... [IO] line 71, (Holders[msg.sender] + msg.value) ... unproven
2/13 ... [IO] line 96, (Holders[_addr] - _wei) ... unproven
3/13 ... [ETH_LEAK] line 94, _addr.call.value(_wei)() ... proven
4/13 ... [RE_EL] line 94, _addr.call.value(_wei)() ... proven
5/13 ... [RE] line 14, (TokenBank, changeOwner, [address]) ... proven
6/13 ... [RE] line 21, (TokenBank, confirmOwner, []) ... proven
7/13 ... [RE] line 53, (TokenBank, initTokenBank, []) ... unproven
8/13 ... [RE] line 60, (TokenBank, @fallback, []) ... unproven
9/13 ... [RE] line 66, (TokenBank, Deposit, []) ... unproven
10/13 ... [RE] line 75, (TokenBank, WitdrawTokenToHolder, [address, address, uint256]) ... proven
11/13 ... [RE] line 86, (TokenBank, WithdrawToHolder, [address, uint256]) ... unproven
12/13 ... [TX_ORG] line 24, assume((msg.sender == newOwner)); ... proven
13/13 ... [TX_ORG] line 32, assume((owner == msg.sender)); ... proven
took 1.028763s

Generating VCs ... took 0.003075s
Checking validity of VCs ... took 0.561771s

Generating VCs ... took 0.004744s
Checking validity of VCs ... took 11.625291s

Generating VCs ... took 0.002507s
Checking validity of VCs ... took 13.661064s

Generating VCs ... took 0.002492s
Checking validity of VCs ... took 2.599269s

Iter : 10 To explore : 38 Explored : 75 Total elapsed : 30.16106
Generating VCs ... took 0.00296s
Checking validity of VCs ... took 2.294871s

Generating VCs ... took 0.002337s
Checking validity of VCs ... took 0.466838s

Generating VCs ... took 0.00240400000001s
Checking validity of VCs ... took 0.771766s

Generating VCs ... took 0.002461s
Checking validity of VCs ... took 0.670693s

Generating VCs ... took 0.00252800000001s
Checking validity of VCs ... took 0.461368s

Generating VCs ... took 0.002416s
Checking validity of VCs ... took 1.116495s

Generating VCs ... took 0.002397s
Checking validity of VCs ... took 0.70159s

Generating VCs ... took 0.00260100000001s
Checking validity of VCs ... took 1.102855s

Generating VCs ... took 0.00227100000001s
Checking validity of VCs ... took 0.485649s

Generating VCs ... took 0.002446s
Checking validity of VCs ... took 0.486807s

Iter : 20 To explore : 92 Explored : 139 Total elapsed : 38.776498
Generating VCs ... took 0.002345s
Checking validity of VCs ... took 0.769861s

Generating VCs ... took 0.002364s
Checking validity of VCs ... took 0.467506s

Generating VCs ... took 0.002457s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 22 Total elapsed : 40.470802
[
-1 -> (((1000000000000000000 >= MinDeposit__@78) /\ (Read(@TU, newOwner__@3) == true)) /\ (Read(@TU, owner__@7) == true))
0 -> ((Read(@TU, newOwner__@3) == true) /\ (Read(@TU, owner__@7) == true))
]
[
]
1/13 ... [IO] line 71, (Holders[msg.sender] + msg.value) ... unproven
2/13 ... [IO] line 96, (Holders[_addr] - _wei) ... unproven
3/13 ... [ETH_LEAK] line 94, _addr.call.value(_wei)() ... proven
4/13 ... [RE_EL] line 94, _addr.call.value(_wei)() ... proven
5/13 ... [RE] line 14, (TokenBank, changeOwner, [address]) ... proven
6/13 ... [RE] line 21, (TokenBank, confirmOwner, []) ... proven
7/13 ... [RE] line 53, (TokenBank, initTokenBank, []) ... unproven
8/13 ... [RE] line 60, (TokenBank, @fallback, []) ... unproven
9/13 ... [RE] line 66, (TokenBank, Deposit, []) ... unproven
10/13 ... [RE] line 75, (TokenBank, WitdrawTokenToHolder, [address, address, uint256]) ... proven
11/13 ... [RE] line 86, (TokenBank, WithdrawToHolder, [address, uint256]) ... unproven
12/13 ... [TX_ORG] line 24, assume((msg.sender == newOwner)); ... proven
13/13 ... [TX_ORG] line 32, assume((owner == msg.sender)); ... proven
took 0.711162s

Generating VCs ... took 0.002378s
Checking validity of VCs ... took 0.467705s

Generating VCs ... took 0.002485s
Checking validity of VCs ... took 13.925455s

Generating VCs ... took 0.002933s
Checking validity of VCs ... took 14.473438s

Generating VCs ... took 0.002683s
Checking validity of VCs ... took 2.876009s

Generating VCs ... took 0.00254299999999s
Checking validity of VCs ... took 2.4101s

Generating VCs ... took 0.0025s
Checking validity of VCs ... took 0.94127s

Generating VCs ... took 0.00251899999999s
Checking validity of VCs ... took 12.230263s

Iter : 30 To explore : 111 Explored : 227 Total elapsed : 88.111183
Generating VCs ... took 0.00230500000001s
Checking validity of VCs ... took 0.952036s

Generating VCs ... took 0.003096s
Checking validity of VCs ... took 0.884428s

Generating VCs ... took 0.002387s
Checking validity of VCs ... took 0.461625s

Generating VCs ... took 0.00251399999999s
Checking validity of VCs ... took 0.928923s

Generating VCs ... took 0.00273199999999s
Checking validity of VCs ... took 13.073855s

Generating VCs ... took 0.002466s
Checking validity of VCs ... took 0.941248s

Generating VCs ... took 0.00236299999999s
Checking validity of VCs ... took 2.219698s

Generating VCs ... took 0.002402s
Checking validity of VCs ... took 2.340904s

Generating VCs ... took 0.002352s
Checking validity of VCs ... took 0.793746s

Generating VCs ... took 0.00280100000001s
Checking validity of VCs ... took 1.097435s

Iter : 40 To explore : 117 Explored : 243 Total elapsed : 111.870191
Generating VCs ... took 0.00228399999999s
Checking validity of VCs ... took 0.802265s

Generating VCs ... took 0.00240799999999s
Checking validity of VCs ... took 0.52587s

Generating VCs ... took 0.00243399999999s
Checking validity of VCs ... took 0.57278s

Generating VCs ... took 0.00278s
Checking validity of VCs ... took 1.083542s

Generating VCs ... took 0.00271099999999s
Checking validity of VCs ... took 0.94473s

Generating VCs ... took 0.00227899999999s
Checking validity of VCs ... took 1.155578s

Generating VCs ... took 0.002499s
Checking validity of VCs ... took 0.505284s

Generating VCs ... took 0.00247399999999s
Checking validity of VCs ... took 7.631468s

Generating VCs ... took 0.002515s
Checking validity of VCs ... took 4.255361s

Generating VCs ... took 0.003332s
Checking validity of VCs ... took 2.501955s

Iter : 50 To explore : 123 Explored : 259 Total elapsed : 131.912352
Generating VCs ... took 0.002274s
Checking validity of VCs ... took 3.784246s

Generating VCs ... took 0.00299100000001s
Checking validity of VCs ... took 6.44998s

Generating VCs ... took 0.00260499999999s
Checking validity of VCs ... took 6.389579s

Generating VCs ... took 0.002488s
Checking validity of VCs ... took 13.256655s

Generating VCs ... took 0.00116499999999s
Checking validity of VCs ... 
1/14 ... [NO_EFFECT] line 18, (@pre8 == newOwner) ... unproven
2/14 ... [NO_EFFECT] line 26, (@pre9 == owner) ... unproven
3/14 ... [NO_EFFECT] line 56, (@pre5 == owner) ... unproven
4/14 ... [NO_EFFECT] line 71, (@pre6 == Holders[msg.sender]) ... unproven
5/14 ... [NO_EFFECT] line 96, (@pre7 == Holders[_addr]) ... unproven
6/14 ... [ASSIGN_CONST] line 71, (Holders[msg.sender] == 0) ... unproven
7/14 ... [ASSIGN_CONST] line 96, (Holders[_addr] == 0) ... unproven
8/14 ... [DEAD] line 24, false ... unproven
9/14 ... [DEAD] line 32, false ... unproven
10/14 ... [DEAD] line 63, false ... unproven
11/14 ... [DEAD] line 69, false ... unproven
12/14 ... [DEAD] line 79, false ... unproven
13/14 ... [DEAD] line 82, false ... unproven
14/14 ... [DEAD] line 91, false ... unproven
took 0.41478s


===== Vulnerability Report =====
[1] [IO] line 71, (Holders[msg.sender] + msg.value) : unproven
[2] [IO] line 96, (Holders[_addr] - _wei) : unproven
[3] [ETH_LEAK] line 94, _addr.call.value(_wei)() : proven
[4] [RE_EL] line 94, _addr.call.value(_wei)() : proven
[5] [RE] line 14, (TokenBank, changeOwner, [address]) : proven
[6] [RE] line 21, (TokenBank, confirmOwner, []) : proven
[7] [RE] line 53, (TokenBank, initTokenBank, []) : unproven
[8] [RE] line 60, (TokenBank, @fallback, []) : unproven
[9] [RE] line 66, (TokenBank, Deposit, []) : unproven
[10] [RE] line 75, (TokenBank, WitdrawTokenToHolder, [address, address, uint256]) : proven
[11] [RE] line 86, (TokenBank, WithdrawToHolder, [address, uint256]) : unproven
[12] [TX_ORG] line 24, assume((msg.sender == newOwner)); : proven
[13] [TX_ORG] line 32, assume((owner == msg.sender)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 18, (@pre8 == newOwner) : unproven
[2] [NO_EFFECT] line 26, (@pre9 == owner) : unproven
[3] [NO_EFFECT] line 56, (@pre5 == owner) : unproven
[4] [NO_EFFECT] line 71, (@pre6 == Holders[msg.sender]) : unproven
[5] [NO_EFFECT] line 96, (@pre7 == Holders[_addr]) : unproven
[6] [ASSIGN_CONST] line 71, (Holders[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 96, (Holders[_addr] == 0) : unproven
[8] [DEAD] line 24, false : unproven
[9] [DEAD] line 32, false : unproven
[10] [DEAD] line 63, false : unproven
[11] [DEAD] line 69, false : unproven
[12] [DEAD] line 79, false : unproven
[13] [DEAD] line 82, false : unproven
[14] [DEAD] line 91, false : unproven

============ Statistics ============
# Iter                    : 53
# Alarm / Query           : 6 / 13
- integer over/underflow  : 2 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 4 / 7
- tx.origin               : 0 / 2

Time Elapsed (Real) : 162.201098919
Time Elapsed (CPU)  : 162.232754
