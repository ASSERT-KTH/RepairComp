[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 7
[INFO] reachable : 6
[INFO] Generating Paths ... took 0.000286s
[INFO] # path : 22

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001058s
Generating VCs ... took 0.006149s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.045266
[
-1 -> true
0 -> true
]
[
]
1/6 ... [IO] line 28, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 38, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 39, msg.sender.call.value(_am)() ... unproven
4/6 ... [RE_EL] line 39, msg.sender.call.value(_am)() ... unproven
5/6 ... [RE] line 22, (PrivateBank, Deposit, []) ... unproven
6/6 ... [RE] line 33, (PrivateBank, CashOut, [uint256]) ... unproven
took 0.357032s

Generating VCs ... took 0.002799s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 5.890712
[
-1 -> @Invest_sum >= Σ_u balances__@5
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/6 ... [IO] line 28, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 38, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 39, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 39, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 22, (PrivateBank, Deposit, []) ... unproven
6/6 ... [RE] line 33, (PrivateBank, CashOut, [uint256]) ... unproven
took 10.769317s

Generating VCs ... took 0.003271s
Checking validity of VCs ... took 50.145667s

Generating VCs ... took 0.00275s
Checking validity of VCs ... took 1.373644s

Generating VCs ... took 0.002899s
Checking validity of VCs ... took 1.918331s

Generating VCs ... took 0.00308299999999s
Checking validity of VCs ... took 1.560912s

Generating VCs ... took 0.00278900000001s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 74.987348
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/6 ... [IO] line 28, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 38, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 39, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 39, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 22, (PrivateBank, Deposit, []) ... unproven
6/6 ... [RE] line 33, (PrivateBank, CashOut, [uint256]) ... unproven
took 9.036575s

Generating VCs ... took 0.002782s
Checking validity of VCs ... took 47.406514s

Generating VCs ... took 0.002802s
Checking validity of VCs ... took 1.644657s

Iter : 10 To explore : 33 Explored : 90 Total elapsed : 124.295704
Generating VCs ... took 0.00272500000001s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 129.896604
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/6 ... [IO] line 28, (balances[msg.sender] + msg.value) ... unproven
2/6 ... [IO] line 38, (balances[msg.sender] - _am) ... proven
3/6 ... [ETH_LEAK] line 39, msg.sender.call.value(_am)() ... proven
4/6 ... [RE_EL] line 39, msg.sender.call.value(_am)() ... proven
5/6 ... [RE] line 22, (PrivateBank, Deposit, []) ... unproven
6/6 ... [RE] line 33, (PrivateBank, CashOut, [uint256]) ... unproven
took 6.538569s

Generating VCs ... took 0.00264299999998s
Checking validity of VCs ... took 59.376233s

Generating VCs ... took 0.001317s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 28, (@pre1 == balances[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 38, (@pre2 == balances[msg.sender]) ... unproven
3/9 ... [NO_EFFECT] line 69, (@pre5 == LastMsg.Sender) ... unproven
4/9 ... [NO_EFFECT] line 70, (@pre4 == LastMsg.Time) ... unproven
5/9 ... [NO_EFFECT] line 71, (@pre3 == LastMsg.Val) ... unproven
6/9 ... [ASSIGN_CONST] line 28, (balances[msg.sender] == 0) ... unproven
7/9 ... [ASSIGN_CONST] line 38, (balances[msg.sender] == 0) ... unproven
8/9 ... [DEAD] line 26, false ... unproven
9/9 ... [DEAD] line 35, false ... unproven
took 1.056179s


===== Vulnerability Report =====
[1] [IO] line 28, (balances[msg.sender] + msg.value) : unproven
[2] [IO] line 38, (balances[msg.sender] - _am) : proven
[3] [ETH_LEAK] line 39, msg.sender.call.value(_am)() : proven
[4] [RE_EL] line 39, msg.sender.call.value(_am)() : proven
[5] [RE] line 22, (PrivateBank, Deposit, []) : unproven
[6] [RE] line 33, (PrivateBank, CashOut, [uint256]) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 28, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 38, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 69, (@pre5 == LastMsg.Sender) : unproven
[4] [NO_EFFECT] line 70, (@pre4 == LastMsg.Time) : unproven
[5] [NO_EFFECT] line 71, (@pre3 == LastMsg.Val) : unproven
[6] [ASSIGN_CONST] line 28, (balances[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 38, (balances[msg.sender] == 0) : unproven
[8] [DEAD] line 26, false : unproven
[9] [DEAD] line 35, false : unproven

============ Statistics ============
# Iter                    : 11
# Alarm / Query           : 3 / 6
- integer over/underflow  : 1 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 191.307140112
Time Elapsed (CPU)  : 191.278027
