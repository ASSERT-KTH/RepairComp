[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 3
[INFO] reachable : 3
[INFO] Generating Paths ... took 0.000234s
[INFO] # path : 22

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000714s
Generating VCs ... took 0.004804s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.034714
[
-1 -> true
0 -> true
]
[
]
1/5 ... [IO] line 26, (rewardsForA[recipient] + 100) ... unproven
2/5 ... [ETH_LEAK] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
3/5 ... [RE_EL] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
4/5 ... [RE] line 16, (Reentrancy_bonus, withdrawReward, [address]) ... unproven
5/5 ... [RE] line 23, (Reentrancy_bonus, getFirstWithdrawalBonus, [address]) ... unproven
took 0.597668s

Generating VCs ... took 0.004291s
Checking validity of VCs ... took 19.289594s

Generating VCs ... took 0.003096s
Checking validity of VCs ... took 0.917643s

Generating VCs ... took 0.00302s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 4 Total elapsed : 20.948502
[
-1 -> NoOverFlow (ΣrewardsForA__@13)
0 -> NoOverFlow (ΣrewardsForA__@13)
]
[
]
1/5 ... [IO] line 26, (rewardsForA[recipient] + 100) ... unproven
2/5 ... [ETH_LEAK] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
3/5 ... [RE_EL] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
4/5 ... [RE] line 16, (Reentrancy_bonus, withdrawReward, [address]) ... unproven
5/5 ... [RE] line 23, (Reentrancy_bonus, getFirstWithdrawalBonus, [address]) ... unproven
took 1.20228s

Generating VCs ... took 0.003457s
Checking validity of VCs ... took 19.595071s

Generating VCs ... took 0.003222s
Checking validity of VCs ... took 1.717301s

Generating VCs ... took 0.003852s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 43.569847
[
-1 -> (NoOverFlow (ΣrewardsForA__@13) /\ NoOverFlow (ΣuserBalances__@5))
0 -> (NoOverFlow (ΣrewardsForA__@13) /\ NoOverFlow (ΣuserBalances__@5))
]
[
]
1/5 ... [IO] line 26, (rewardsForA[recipient] + 100) ... unproven
2/5 ... [ETH_LEAK] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
3/5 ... [RE_EL] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
4/5 ... [RE] line 16, (Reentrancy_bonus, withdrawReward, [address]) ... unproven
5/5 ... [RE] line 23, (Reentrancy_bonus, getFirstWithdrawalBonus, [address]) ... unproven
took 1.192103s

Generating VCs ... took 0.00306999999999s
Checking validity of VCs ... took 25.107818s

Generating VCs ... took 0.002741s
Checking validity of VCs ... took 1.370928s

Iter : 10 To explore : 13 Explored : 51 Total elapsed : 71.074164
Generating VCs ... took 0.00303600000001s
Checking validity of VCs ... took 0.158496s

Generating VCs ... took 0.002973s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 11 Total elapsed : 71.413946
[
-1 -> (((ΣuserBalances__@5 == 0) /\ NoOverFlow (ΣrewardsForA__@13)) /\ NoOverFlow (ΣuserBalances__@5))
0 -> (((ΣuserBalances__@5 == 0) /\ NoOverFlow (ΣrewardsForA__@13)) /\ NoOverFlow (ΣuserBalances__@5))
]
[
]
1/5 ... [IO] line 26, (rewardsForA[recipient] + 100) ... unproven
2/5 ... [ETH_LEAK] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
3/5 ... [RE_EL] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
4/5 ... [RE] line 16, (Reentrancy_bonus, withdrawReward, [address]) ... unproven
5/5 ... [RE] line 23, (Reentrancy_bonus, getFirstWithdrawalBonus, [address]) ... unproven
took 1.173921s

Generating VCs ... took 0.00308200000001s
Checking validity of VCs ... took 20.764407s

Generating VCs ... took 0.00277s
Checking validity of VCs ... took 1.633729s

Generating VCs ... took 0.00281700000001s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 99.067326
[
-1 -> ((((ΣrewardsForA__@13 == 0) /\ (ΣuserBalances__@5 == 0)) /\ NoOverFlow (ΣrewardsForA__@13)) /\ NoOverFlow (ΣuserBalances__@5))
0 -> ((((ΣrewardsForA__@13 == 0) /\ (ΣuserBalances__@5 == 0)) /\ NoOverFlow (ΣrewardsForA__@13)) /\ NoOverFlow (ΣuserBalances__@5))
]
[
]
1/5 ... [IO] line 26, (rewardsForA[recipient] + 100) ... proven
2/5 ... [ETH_LEAK] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
3/5 ... [RE_EL] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); ... unproven
4/5 ... [RE] line 16, (Reentrancy_bonus, withdrawReward, [address]) ... unproven
5/5 ... [RE] line 23, (Reentrancy_bonus, getFirstWithdrawalBonus, [address]) ... unproven
took 17.606144s

Generating VCs ... took 0.00332400000001s
Checking validity of VCs ... took 5.935147s

Generating VCs ... took 0.003225s
Checking validity of VCs ... took 5.501579s

Generating VCs ... took 0.00338500000001s
Checking validity of VCs ... took 7.755499s

Generating VCs ... took 0.004783s
Checking validity of VCs ... took 0.739248s

Generating VCs ... took 0.00340599999998s
Checking validity of VCs ... took 0.213356s

Iter : 20 To explore : 6 Explored : 70 Total elapsed : 132.606759
Generating VCs ... took 0.00339600000001s
Checking validity of VCs ... took 0.234191s

Generating VCs ... took 0.003469s
Checking validity of VCs ... took 0.224374s

Generating VCs ... took 0.00336899999999s
Checking validity of VCs ... took 0.676886s

Generating VCs ... took 0.003826s
Checking validity of VCs ... took 0.679077s

Generating VCs ... took 0.00303300000002s
Checking validity of VCs ... took 0.194416s

Generating VCs ... took 0.003015s
Checking validity of VCs ... took 0.706367s

Generating VCs ... took 0.00161400000002s
Checking validity of VCs ... 
1/4 ... [NO_EFFECT] line 17, (@pre1 == amountToWithdraw) ... unproven
2/4 ... [NO_EFFECT] line 26, (@pre2 == rewardsForA[recipient]) ... unproven
3/4 ... [ASSIGN_CONST] line 26, (rewardsForA[recipient] == 0) ... unproven
4/4 ... [DEAD] line 29, false ... unproven
took 0.861833s


===== Vulnerability Report =====
[1] [IO] line 26, (rewardsForA[recipient] + 100) : proven
[2] [ETH_LEAK] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); : unproven
[3] [RE_EL] line 19, (success,  ) = recipient.call.value(amountToWithdraw)(""); : unproven
[4] [RE] line 16, (Reentrancy_bonus, withdrawReward, [address]) : unproven
[5] [RE] line 23, (Reentrancy_bonus, getFirstWithdrawalBonus, [address]) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 17, (@pre1 == amountToWithdraw) : unproven
[2] [NO_EFFECT] line 26, (@pre2 == rewardsForA[recipient]) : unproven
[3] [ASSIGN_CONST] line 26, (rewardsForA[recipient] == 0) : unproven
[4] [DEAD] line 29, false : unproven

============ Statistics ============
# Iter                    : 26
# Alarm / Query           : 4 / 5
- integer over/underflow  : 0 / 1
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 1 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 136.209924936
Time Elapsed (CPU)  : 136.20784
