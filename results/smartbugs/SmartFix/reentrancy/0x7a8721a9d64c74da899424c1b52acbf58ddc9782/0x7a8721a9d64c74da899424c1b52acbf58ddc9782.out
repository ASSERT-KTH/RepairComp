[INFO] compiled with solc ver. 0.4.25
[INFO] all funcs : 10
[INFO] reachable : 9

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[STEP] Run analyzer
[STEP] Collect fix targets
    (IO, (PrivateDeposit/CashOut/[uint256]), 54, (balances[msg.sender] - _am)),
    (IO, (PrivateDeposit/Deposit/[]), 42, (balances[msg.sender] + msg.value)),
    (ETH_LEAK, (PrivateDeposit/CashOut/[uint256]), 52, msg.sender.call.value(_am)()),
    (RE_EL, (PrivateDeposit/CashOut/[uint256]), 52, msg.sender.call.value(_am)()),
    (TX_ORG, (PrivateDeposit/onlyOwner/[]), 19, assume((tx.origin == owner));)

[INFO] # of basic patch components : 8
[INFO] extracted components
[
InsertLine (42, assume(((balances[msg.sender] + msg.value) >= balances[msg.sender]));),
InsertLine (54, assume((balances[msg.sender] >= _am));),
Replace (19, (tx.origin == owner), (tx.origin != owner)),
Replace (19, tx.origin, msg.sender),
Replace (49, (_am <= balances[msg.sender]), (_am > balances[msg.sender])),
AtomLst [
Move ([54] -> 52)
ElseRevert (line 56)
],
AtomLst [
Add @nonReentrant to (PrivateDeposit, Deposit, []) (line 36)
Add @nonReentrant to (PrivateDeposit, CashOut, [uint256]) (line 47)
Add @nonReentrant to (PrivateDeposit, @fallback, []) (line 60)
],
AtomLst [
Add @nonReentrant to (PrivateDeposit, setLog, [address]) (line 31)
Add @nonReentrant to (PrivateDeposit, Deposit, []) (line 36)
Add @nonReentrant to (PrivateDeposit, CashOut, [uint256]) (line 47)
Add @nonReentrant to (PrivateDeposit, @fallback, []) (line 60)
]
]
- New best candidate, iter 1, 282.077777863s : results/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782/candidates/cand_6/patch.sol
