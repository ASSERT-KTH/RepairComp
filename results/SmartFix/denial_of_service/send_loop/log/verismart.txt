[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 2
[INFO] reachable : 2
[INFO] Generating Paths ... took 0.000209s
[INFO] # path : 11

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000572s
Generating VCs ... took 0.005292s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.034621
[
0 -> true
6 -> true
]
[
]
1/2 ... [IO] line 22, (x + 1) ... proven
2/2 ... [ETH_LEAK] line 24, refundAddresses[x].send(refunds[refundAddresses[x]]) ... unproven
took 0.433617s

Generating VCs ... took 0.000416s
Checking validity of VCs ... took 0.014756s

Generating VCs ... took 0.000404s
Checking validity of VCs ... took 0.289313s

Generating VCs ... took 0.000416s
Checking validity of VCs ... took 0.641954s

Generating VCs ... took 0.000412s
Checking validity of VCs ... took 0.401543s

Generating VCs ... took 0.000469s
Checking validity of VCs ... took 20.090841s

Generating VCs ... took 0.000468999999999s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 21.921341
[
0 -> NoOverFlow (Σrefunds__@8)
6 -> NoOverFlow (Σrefunds__@8)
]
[
]
1/2 ... [IO] line 22, (x + 1) ... proven
2/2 ... [ETH_LEAK] line 24, refundAddresses[x].send(refunds[refundAddresses[x]]) ... unproven
took 0.124981s

Generating VCs ... took 0.000419000000001s
Checking validity of VCs ... took 20.067605s

Generating VCs ... took 0.000501999999997s
Checking validity of VCs ... took 0.421782s

Iter : 10 To explore : 39 Explored : 84 Total elapsed : 42.531205
Generating VCs ... took 0.000546s
Checking validity of VCs ... took 21.308134s

Generating VCs ... took 0.000473999999997s
Checking validity of VCs ... took 0.389334s

Generating VCs ... took 0.000471000000005s
Checking validity of VCs ... took 20.101437s

Generating VCs ... took 0.000419999999991s
Checking validity of VCs ... took 0.044592s

Generating VCs ... took 0.000414000000006s
Checking validity of VCs ... took 0.375862s

Generating VCs ... took 0.000474999999994s
Checking validity of VCs ... took 0.043299s

Generating VCs ... took 0.000416000000001s
Checking validity of VCs ... took 0.193359s

Generating VCs ... took 0.000449000000003s
Checking validity of VCs ... took 0.00975100000001s

Generating VCs ... took 0.000691999999987s
Checking validity of VCs ... took 0.266887s

Generating VCs ... took 0.000415000000004s
Checking validity of VCs ... took 0.017603s

Iter : 20 To explore : 49 Explored : 104 Total elapsed : 85.294025
Generating VCs ... took 0.000403000000006s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 20 Total elapsed : 85.337138
[
0 -> ((Σrefunds__@8 == 0) /\ NoOverFlow (Σrefunds__@8))
6 -> ((Σrefunds__@8 == 0) /\ NoOverFlow (Σrefunds__@8))
]
[
]
1/2 ... [IO] line 22, (x + 1) ... proven
2/2 ... [ETH_LEAK] line 24, refundAddresses[x].send(refunds[refundAddresses[x]]) ... proven
took 0.436848s

Generating VCs ... took 0.000253000000001s
Checking validity of VCs ... 
1/3 ... [NO_EFFECT] line 22, (@pre1 == x) ... unproven
2/3 ... [NO_EFFECT] line 24, (@pre2 == refundAddresses[x]) ... unproven
3/3 ... [ASSIGN_CONST] line 22, (x == 0) ... unproven
took 0.848464s


===== Vulnerability Report =====
[1] [IO] line 22, (x + 1) : proven
[2] [ETH_LEAK] line 24, refundAddresses[x].send(refunds[refundAddresses[x]]) : proven

===== Regression Report =====
[1] [NO_EFFECT] line 22, (@pre1 == x) : unproven
[2] [NO_EFFECT] line 24, (@pre2 == refundAddresses[x]) : unproven
[3] [ASSIGN_CONST] line 22, (x == 0) : unproven

============ Statistics ============
# Iter                    : 20
# Alarm / Query           : 0 / 2
- integer over/underflow  : 0 / 1
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 86.5984940529
Time Elapsed (CPU)  : 86.580099
