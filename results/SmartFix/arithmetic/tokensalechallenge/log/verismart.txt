[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 8.8e-05s
[INFO] # path : 10

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000282s
Generating VCs ... took 0.004693s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.027405
[
0 -> true
]
[
]
1/5 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... unproven
2/5 ... [IO] line 25, (balanceOf[msg.sender] + numTokens) ... unproven
3/5 ... [IO] line 31, (balanceOf[msg.sender] - numTokens) ... proven
4/5 ... [IO] line 33, (numTokens * PRICE_PER_TOKEN) ... unproven
5/5 ... [ETH_LEAK] line 33, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.12933s

Generating VCs ... took 0.000287s
Checking validity of VCs ... took 0.704459s

Generating VCs ... took 0.000259s
Checking validity of VCs ... took 19.521936s

Generating VCs ... took 0.000265000000002s
Checking validity of VCs ... took 0.105793s

Generating VCs ... took 0.000261000000002s
Checking validity of VCs ... took 0.097355s

Generating VCs ... took 0.000264999999999s
Checking validity of VCs ... took 0.116951s

Generating VCs ... took 0.000264000000001s
Checking validity of VCs ... took 7.564506s

Generating VCs ... took 0.000266s
Checking validity of VCs ... took 0.291595s

Generating VCs ... took 0.000264000000001s
Checking validity of VCs ... took 0.737421s

Iter : 10 To explore : 49 Explored : 58 Total elapsed : 29.303389
Generating VCs ... took 0.000274000000001s
Checking validity of VCs ... took 0.664219s

Generating VCs ... took 0.000267000000001s
Checking validity of VCs ... took 1.599308s

Generating VCs ... took 0.000263999999998s
Checking validity of VCs ... took 1.727258s

Generating VCs ... took 0.000314000000003s
Checking validity of VCs ... took 2.263092s

Generating VCs ... took 0.000377s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 35.562219
[
0 -> (PRICE_PER_TOKEN__@8 == 1000000000000000000)
]
[
]
1/5 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... unproven
2/5 ... [IO] line 25, (balanceOf[msg.sender] + numTokens) ... unproven
3/5 ... [IO] line 31, (balanceOf[msg.sender] - numTokens) ... proven
4/5 ... [IO] line 33, (numTokens * PRICE_PER_TOKEN) ... unproven
5/5 ... [ETH_LEAK] line 33, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.121684s

Generating VCs ... took 0.00027s
Checking validity of VCs ... took 0.012281s

Generating VCs ... took 0.000259s
Checking validity of VCs ... took 0.495572s

Generating VCs ... took 0.000264000000001s
Checking validity of VCs ... took 18.850097s

Generating VCs ... took 0.000263000000004s
Checking validity of VCs ... took 0.103989s

Generating VCs ... took 0.00027s
Checking validity of VCs ... took 0.113543s

Iter : 20 To explore : 20 Explored : 90 Total elapsed : 55.263951
Generating VCs ... took 0.000506000000001s
Checking validity of VCs ... took 0.121736s

Generating VCs ... took 0.000270999999998s
Checking validity of VCs ... took 8.097979s

Generating VCs ... took 0.000263000000004s
Checking validity of VCs ... took 0.566472s

Generating VCs ... took 0.000313000000006s
Checking validity of VCs ... took 0.489628s

Generating VCs ... took 0.000298000000001s
Checking validity of VCs ... took 0.591608s

Generating VCs ... took 0.000372999999996s
Checking validity of VCs ... took 1.604046s

Generating VCs ... took 0.000263000000004s
Checking validity of VCs ... took 1.634691s

Generating VCs ... took 0.000342000000003s
Checking validity of VCs ... took 2.161575s

Generating VCs ... took 0.000366s
Checking validity of VCs ... took 2.706397s

Generating VCs ... took 0.000387000000003s
Checking validity of VCs ... took 2.626447s

Iter : 30 To explore : 13 Explored : 93 Total elapsed : 75.875839
Generating VCs ... took 0.000260000000011s
Checking validity of VCs ... took 2.218981s

Generating VCs ... took 0.000277999999994s
Checking validity of VCs ... took 0.11164s

Generating VCs ... took 0.000265999999996s
Checking validity of VCs ... took 0.113315s

Generating VCs ... took 0.000264999999999s
Checking validity of VCs ... took 0.125472s

Generating VCs ... took 0.000347000000005s
Checking validity of VCs ... took 0.191224s

Generating VCs ... took 0.000315000000001s
Checking validity of VCs ... took 0.512848s

Generating VCs ... took 0.000271999999995s
Checking validity of VCs ... took 0.203047s

Generating VCs ... took 0.000275999999999s
Checking validity of VCs ... took 0.208538s

Generating VCs ... took 0.000264999999999s
Checking validity of VCs ... took 0.202533s

Generating VCs ... took 0.000275000000002s
Checking validity of VCs ... took 1.438055s

Iter : 40 To explore : 6 Explored : 96 Total elapsed : 81.20938
Generating VCs ... took 0.000319000000005s
Checking validity of VCs ... took 0.309858s

Generating VCs ... took 0.000270999999998s
Checking validity of VCs ... took 1.899344s

Generating VCs ... took 0.00027s
Checking validity of VCs ... took 0.316544s

Generating VCs ... took 0.000397000000007s
Checking validity of VCs ... took 0.127021s

Generating VCs ... took 0.000291000000004s
Checking validity of VCs ... took 0.223005s

Generating VCs ... took 0.000292000000002s
Checking validity of VCs ... took 0.235059s

Generating VCs ... took 0.000297000000003s
Checking validity of VCs ... took 0.337433s

Generating VCs ... took 0.000193999999993s
Checking validity of VCs ... 
1/7 ... [NO_EFFECT] line 25, (@pre1 == balanceOf[msg.sender]) ... unproven
2/7 ... [NO_EFFECT] line 31, (@pre2 == balanceOf[msg.sender]) ... unproven
3/7 ... [ASSIGN_CONST] line 25, (balanceOf[msg.sender] == 0) ... unproven
4/7 ... [ASSIGN_CONST] line 31, (balanceOf[msg.sender] == 0) ... unproven
5/7 ... [DEAD] line 23, false ... unproven
6/7 ... [DEAD] line 29, false ... unproven
7/7 ... [DEAD] line 33, false ... unproven
took 0.122931s


===== Vulnerability Report =====
[1] [IO] line 23, (numTokens * PRICE_PER_TOKEN) : unproven
[2] [IO] line 25, (balanceOf[msg.sender] + numTokens) : unproven
[3] [IO] line 31, (balanceOf[msg.sender] - numTokens) : proven
[4] [IO] line 33, (numTokens * PRICE_PER_TOKEN) : unproven
[5] [ETH_LEAK] line 33, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 25, (@pre1 == balanceOf[msg.sender]) : unproven
[2] [NO_EFFECT] line 31, (@pre2 == balanceOf[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 25, (balanceOf[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 31, (balanceOf[msg.sender] == 0) : unproven
[5] [DEAD] line 23, false : unproven
[6] [DEAD] line 29, false : unproven
[7] [DEAD] line 33, false : unproven

============ Statistics ============
# Iter                    : 47
# Alarm / Query           : 4 / 5
- integer over/underflow  : 3 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 84.8080809116
Time Elapsed (CPU)  : 84.785786
