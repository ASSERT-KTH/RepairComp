[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 13
[INFO] reachable : 8
[INFO] Generating Paths ... took 0.000178s
[INFO] # path : 25

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000452s
Generating VCs ... took 0.002178s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.028831
[
-1 -> true
0 -> true
]
[
]
1/8 ... [IO] line 33, (Deposits[msg.sender] + msg.value) ... proven
2/8 ... [IO] line 34, (Deposits[msg.sender] + msg.value) ... proven
3/8 ... [ETH_LEAK] line 14, target.call.value(msg.value)(data); ... proven
4/8 ... [ETH_LEAK] line 40, msg.sender.transfer(amount); ... unproven
5/8 ... [RE_EL] line 14, target.call.value(msg.value)(data); ... proven
6/8 ... [RE_EL] line 40, msg.sender.transfer(amount); ... unproven
7/8 ... [TX_ORG] line 10, assume((msg.sender == Owner)); ... proven
8/8 ... [TX_ORG] line 25, assume((msg.sender == tx.origin)); ... proven
took 1.719224s

Generating VCs ... took 0.001132s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 1.763221
[
-1 -> (Read(@TU, Owner__@14) == true)
0 -> (Read(@TU, Owner__@14) == true)
]
[
]
1/8 ... [IO] line 33, (Deposits[msg.sender] + msg.value) ... proven
2/8 ... [IO] line 34, (Deposits[msg.sender] + msg.value) ... proven
3/8 ... [ETH_LEAK] line 14, target.call.value(msg.value)(data); ... proven
4/8 ... [ETH_LEAK] line 40, msg.sender.transfer(amount); ... proven
5/8 ... [RE_EL] line 14, target.call.value(msg.value)(data); ... proven
6/8 ... [RE_EL] line 40, msg.sender.transfer(amount); ... proven
7/8 ... [TX_ORG] line 10, assume((msg.sender == Owner)); ... proven
8/8 ... [TX_ORG] line 25, assume((msg.sender == tx.origin)); ... proven
took 0.066694s

Generating VCs ... took 0.00057s
Checking validity of VCs ... 
1/11 ... [NO_EFFECT] line 11, (@pre4 == Owner) ... unproven
2/11 ... [NO_EFFECT] line 26, (@pre2 == Owner) ... unproven
3/11 ... [NO_EFFECT] line 34, (@pre3 == Deposits[msg.sender]) ... unproven
4/11 ... [ASSIGN_CONST] line 34, (Deposits[msg.sender] == 0) ... unproven
5/11 ... [DEAD] line 10, false ... unproven
6/11 ... [DEAD] line 25, false ... unproven
7/11 ... [DEAD] line 27, false ... unproven
8/11 ... [DEAD] line 32, false ... unproven
9/11 ... [DEAD] line 33, false ... unproven
10/11 ... [DEAD] line 39, false ... unproven
11/11 ... [DEAD] line 40, false ... unproven
took 0.436542s


===== Vulnerability Report =====
[1] [IO] line 33, (Deposits[msg.sender] + msg.value) : proven
[2] [IO] line 34, (Deposits[msg.sender] + msg.value) : proven
[3] [ETH_LEAK] line 14, target.call.value(msg.value)(data); : proven
[4] [ETH_LEAK] line 40, msg.sender.transfer(amount); : proven
[5] [RE_EL] line 14, target.call.value(msg.value)(data); : proven
[6] [RE_EL] line 40, msg.sender.transfer(amount); : proven
[7] [TX_ORG] line 10, assume((msg.sender == Owner)); : proven
[8] [TX_ORG] line 25, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 11, (@pre4 == Owner) : unproven
[2] [NO_EFFECT] line 26, (@pre2 == Owner) : unproven
[3] [NO_EFFECT] line 34, (@pre3 == Deposits[msg.sender]) : unproven
[4] [ASSIGN_CONST] line 34, (Deposits[msg.sender] == 0) : unproven
[5] [DEAD] line 10, false : unproven
[6] [DEAD] line 25, false : unproven
[7] [DEAD] line 27, false : unproven
[8] [DEAD] line 32, false : unproven
[9] [DEAD] line 33, false : unproven
[10] [DEAD] line 39, false : unproven
[11] [DEAD] line 40, false : unproven

============ Statistics ============
# Iter                    : 2
# Alarm / Query           : 0 / 8
- integer over/underflow  : 0 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 2
- reentrancy-leaking      : 0 / 2
- reentrancy              : 0 / 0
- tx.origin               : 0 / 2

Time Elapsed (Real) : 2.26096487045
Time Elapsed (CPU)  : 2.248549
