[INFO] compiled with solc ver. 0.4.25
[INFO] all funcs : 29
[INFO] reachable : 15

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[STEP] Run analyzer
[STEP] Collect fix targets
    (IO, (PoCGame/donateToWhale/[uint256]), 202, (totalDonated + amount)),
    (IO, (PoCGame/loseWager/[uint256]), 214, (totalDonated + amount)),
    (IO, (PoCGame/play/[]), 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1)),
    (ETH_LEAK, (PoCGame/payout/[address]), 190, winner.transfer(ethToTransfer);),
    (RE_EL, (PoCGame/payout/[address]), 190, winner.transfer(ethToTransfer);)

[INFO] # of basic patch components : 6
[INFO] extracted components
[
InsertLine (153, assume((((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) >= (uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty)));),
InsertLine (202, assume(((totalDonated + amount) >= totalDonated));),
InsertLine (214, assume(((totalDonated + amount) >= totalDonated));),
AtomLst [
Move ([202] -> 201)
Move ([214] -> 213)
],
AtomLst [
Add @nonReentrant to (PoCGame, transferAnyERC20Token, [address, address, uint256]) (line 284)
Add @nonReentrant to (PoCGame, @fallback, []) (line 115)
Add @nonReentrant to (PoCGame, wager, []) (line 120)
Add @nonReentrant to (PoCGame, play, []) (line 141)
Add @nonReentrant to (PoCGame, donate, []) (line 174)
],
AtomLst [
Add @nonReentrant to (PoCGame, transferAnyERC20Token, [address, address, uint256]) (line 284)
Add @nonReentrant to (PoCGame, OpenToThePublic, []) (line 83)
Add @nonReentrant to (PoCGame, AdjustBetAmounts, [uint256]) (line 93)
Add @nonReentrant to (PoCGame, AdjustDifficulty, [uint256]) (line 105)
Add @nonReentrant to (PoCGame, @fallback, []) (line 115)
Add @nonReentrant to (PoCGame, wager, []) (line 120)
Add @nonReentrant to (PoCGame, play, []) (line 141)
Add @nonReentrant to (PoCGame, donate, []) (line 174)
]
]
