[INFO] compiled with solc ver. 0.4.25
[INFO] all funcs : 7
[INFO] reachable : 6

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[STEP] Run analyzer
[STEP] Collect fix targets
    (IO, (MY_BANK/Collect/[uint256]), 31, (acc.balance - _am)),
    (IO, (MY_BANK/Put/[uint256]), 16, (acc.balance + msg.value)),
    (ETH_LEAK, (MY_BANK/Collect/[uint256]), 29, msg.sender.call.value(_am)()),
    (RE_EL, (MY_BANK/Collect/[uint256]), 29, msg.sender.call.value(_am)())

[INFO] # of basic patch components : 6
[INFO] extracted components
[
InsertLine (16, assume(((acc.balance + msg.value) >= acc.balance));),
InsertLine (31, assume((acc.balance >= _am));),
Replace (26, (acc.balance >= _am), (acc.balance < _am)),
AtomLst [
Move ([31] -> 29)
ElseRevert (line 33)
],
AtomLst [
Add @nonReentrant to (MY_BANK, Put, [uint256]) (line 11)
Add @nonReentrant to (MY_BANK, Collect, [uint256]) (line 21)
],
AtomLst [
Add @nonReentrant to (MY_BANK, Put, [uint256]) (line 11)
Add @nonReentrant to (MY_BANK, Collect, [uint256]) (line 21)
Add @nonReentrant to (MY_BANK, @fallback, []) (line 37)
]
]
- New best candidate, iter 1, 287.539119959s : results/reentrancy/0xf015c35649c82f5467c9c74b7f28ee67665aad68/candidates/cand_4/patch.sol
