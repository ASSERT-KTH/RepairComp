[INFO] compiled with solc ver. 0.4.25
[INFO] all funcs : 10
[INFO] reachable : 9

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[STEP] Run analyzer
[STEP] Collect fix targets
    (IO, (ACCURAL_DEPOSIT/Collect/[uint256]), 57, (balances[msg.sender] - _am)),
    (IO, (ACCURAL_DEPOSIT/Deposit/[]), 44, (balances[msg.sender] + msg.value)),
    (ETH_LEAK, (ACCURAL_DEPOSIT/Collect/[uint256]), 55, msg.sender.call.value(_am)()),
    (RE_EL, (ACCURAL_DEPOSIT/Collect/[uint256]), 55, msg.sender.call.value(_am)())

[INFO] # of basic patch components : 6
[INFO] extracted components
[
InsertLine (44, assume(((balances[msg.sender] + msg.value) >= balances[msg.sender]));),
InsertLine (57, assume((balances[msg.sender] >= _am));),
Replace (52, (balances[msg.sender] >= _am), (balances[msg.sender] < _am)),
AtomLst [
Move ([57] -> 55)
ElseRevert (line 59)
],
AtomLst [
Add @nonReentrant to (ACCURAL_DEPOSIT, SetMinSum, [uint256]) (line 20)
Add @nonReentrant to (ACCURAL_DEPOSIT, SetLogFile, [address]) (line 27)
Add @nonReentrant to (ACCURAL_DEPOSIT, Initialized, []) (line 34)
Add @nonReentrant to (ACCURAL_DEPOSIT, Deposit, []) (line 40)
Add @nonReentrant to (ACCURAL_DEPOSIT, Collect, [uint256]) (line 48)
],
AtomLst [
Add @nonReentrant to (ACCURAL_DEPOSIT, SetMinSum, [uint256]) (line 20)
Add @nonReentrant to (ACCURAL_DEPOSIT, SetLogFile, [address]) (line 27)
Add @nonReentrant to (ACCURAL_DEPOSIT, Initialized, []) (line 34)
Add @nonReentrant to (ACCURAL_DEPOSIT, Deposit, []) (line 40)
Add @nonReentrant to (ACCURAL_DEPOSIT, Collect, [uint256]) (line 48)
Add @nonReentrant to (ACCURAL_DEPOSIT, @fallback, []) (line 63)
]
]
- New best candidate, iter 1, 315.82444191s : results/reentrancy/0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1/candidates/cand_4/patch.sol
